var THREE=THREE||{REVISION:"51"};void 0===self.console&&(self.console={info:function(){},log:function(){},debug:function(){},warn:function(){},error:function(){}});void 0===self.Int32Array&&(self.Int32Array=Array,self.Float32Array=Array);void 0===String.prototype.startsWith&&(String.prototype.startsWith=function(a){return this.slice(0,a.length)===a});void 0===String.prototype.endsWith&&(String.prototype.endsWith=function(a){a=String(a);var b=this.lastIndexOf(a);return 0<=b&&b===this.length-a.length});
void 0===!String.prototype.trim&&(String.prototype.trim=function(){return this.replace(/^\s+|\s+$/g,"")});
(function(){for(var a=0,b=["ms","moz","webkit","o"],c=0;c<b.length&&!window.requestAnimationFrame;++c)window.requestAnimationFrame=window[b[c]+"RequestAnimationFrame"],window.cancelAnimationFrame=window[b[c]+"CancelAnimationFrame"]||window[b[c]+"CancelRequestAnimationFrame"];void 0===window.requestAnimationFrame&&(window.requestAnimationFrame=function(b){var c=Date.now(),e=Math.max(0,16-(c-a)),g=window.setTimeout(function(){b(c+e)},e);a=c+e;return g});void 0===window.cancelAnimationFrame&&(window.cancelAnimationFrame=
function(a){clearTimeout(a)})})();THREE.FrontSide=0;THREE.BackSide=1;THREE.DoubleSide=2;THREE.NoShading=0;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NoBlending=0;THREE.NormalBlending=1;THREE.AdditiveBlending=2;THREE.SubtractiveBlending=3;THREE.MultiplyBlending=4;THREE.CustomBlending=5;THREE.AddEquation=100;THREE.SubtractEquation=101;THREE.ReverseSubtractEquation=102;THREE.ZeroFactor=200;THREE.OneFactor=201;THREE.SrcColorFactor=202;
THREE.OneMinusSrcColorFactor=203;THREE.SrcAlphaFactor=204;THREE.OneMinusSrcAlphaFactor=205;THREE.DstAlphaFactor=206;THREE.OneMinusDstAlphaFactor=207;THREE.DstColorFactor=208;THREE.OneMinusDstColorFactor=209;THREE.SrcAlphaSaturateFactor=210;THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.UVMapping=function(){};THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};
THREE.RepeatWrapping=1E3;THREE.ClampToEdgeWrapping=1001;THREE.MirroredRepeatWrapping=1002;THREE.NearestFilter=1003;THREE.NearestMipMapNearestFilter=1004;THREE.NearestMipMapLinearFilter=1005;THREE.LinearFilter=1006;THREE.LinearMipMapNearestFilter=1007;THREE.LinearMipMapLinearFilter=1008;THREE.UnsignedByteType=1009;THREE.ByteType=1010;THREE.ShortType=1011;THREE.UnsignedShortType=1012;THREE.IntType=1013;THREE.UnsignedIntType=1014;THREE.FloatType=1015;THREE.UnsignedShort4444Type=1016;
THREE.UnsignedShort5551Type=1017;THREE.UnsignedShort565Type=1018;THREE.AlphaFormat=1019;THREE.RGBFormat=1020;THREE.RGBAFormat=1021;THREE.LuminanceFormat=1022;THREE.LuminanceAlphaFormat=1023;THREE.RGB_S3TC_DXT1_Format=2001;THREE.RGBA_S3TC_DXT1_Format=2002;THREE.RGBA_S3TC_DXT3_Format=2003;THREE.RGBA_S3TC_DXT5_Format=2004;THREE.Clock=function(a){this.autoStart=void 0!==a?a:!0;this.elapsedTime=this.oldTime=this.startTime=0;this.running=!1};
THREE.Clock.prototype.start=function(){this.oldTime=this.startTime=Date.now();this.running=!0};THREE.Clock.prototype.stop=function(){this.getElapsedTime();this.running=!1};THREE.Clock.prototype.getElapsedTime=function(){return this.elapsedTime+=this.getDelta()};THREE.Clock.prototype.getDelta=function(){var a=0;this.autoStart&&!this.running&&this.start();if(this.running){var b=Date.now(),a=0.001*(b-this.oldTime);this.oldTime=b;this.elapsedTime+=a}return a};
THREE.Color=function(a){void 0!==a&&this.setHex(a);return this};
THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,copy:function(a){this.r=a.r;this.g=a.g;this.b=a.b;return this},copyGammaToLinear:function(a){this.r=a.r*a.r;this.g=a.g*a.g;this.b=a.b*a.b;return this},copyLinearToGamma:function(a){this.r=Math.sqrt(a.r);this.g=Math.sqrt(a.g);this.b=Math.sqrt(a.b);return this},convertGammaToLinear:function(){var a=this.r,b=this.g,c=this.b;this.r=a*a;this.g=b*b;this.b=c*c;return this},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);
this.b=Math.sqrt(this.b);return this},setRGB:function(a,b,c){this.r=a;this.g=b;this.b=c;return this},setHSV:function(a,b,c){var d,f,e;0===c?this.r=this.g=this.b=0:(d=Math.floor(6*a),f=6*a-d,a=c*(1-b),e=c*(1-b*f),b=c*(1-b*(1-f)),0===d?(this.r=c,this.g=b,this.b=a):1===d?(this.r=e,this.g=c,this.b=a):2===d?(this.r=a,this.g=c,this.b=b):3===d?(this.r=a,this.g=e,this.b=c):4===d?(this.r=b,this.g=a,this.b=c):5===d&&(this.r=c,this.g=a,this.b=e));return this},setHex:function(a){a=Math.floor(a);this.r=(a>>16&
255)/255;this.g=(a>>8&255)/255;this.b=(a&255)/255;return this},lerpSelf:function(a,b){this.r+=(a.r-this.r)*b;this.g+=(a.g-this.g)*b;this.b+=(a.b-this.b)*b;return this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getContextStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}};THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};
THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(a,b){this.x=a;this.y=b;return this},copy:function(a){this.x=a.x;this.y=a.y;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},divideScalar:function(a){a?(this.x/=a,this.y/=a):this.set(0,
0);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.lengthSq())},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x;a=this.y-a.y;return b*b+a*a},setLength:function(a){return this.normalize().multiplyScalar(a)},lerpSelf:function(a,
b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;return this},equals:function(a){return a.x===this.x&&a.y===this.y},isZero:function(){return 1E-4>this.lengthSq()},clone:function(){return new THREE.Vector2(this.x,this.y)}};THREE.Vector3=function(a,b,c){this.x=a||0;this.y=b||0;this.z=c||0};
THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(a,b,c){this.x=a;this.y=b;this.z=c;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},
sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},multiply:function(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this},multiplySelf:function(a){this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},divideSelf:function(a){this.x/=a.x;this.y/=a.y;this.z/=a.z;return this},divideScalar:function(a){a?(this.x/=a,this.y/=a,this.z/=a):
this.z=this.y=this.x=0;return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.lengthSq())},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.normalize().multiplyScalar(a)},lerpSelf:function(a,b){this.x+=
(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;return this},cross:function(a,b){this.x=a.y*b.z-a.z*b.y;this.y=a.z*b.x-a.x*b.z;this.z=a.x*b.y-a.y*b.x;return this},crossSelf:function(a){var b=this.x,c=this.y,d=this.z;this.x=c*a.z-d*a.y;this.y=d*a.x-b*a.z;this.z=b*a.y-c*a.x;return this},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){return(new THREE.Vector3).sub(this,a).lengthSq()},getPositionFromMatrix:function(a){this.x=a.elements[12];
this.y=a.elements[13];this.z=a.elements[14];return this},setEulerFromRotationMatrix:function(a,b){function c(a){return Math.min(Math.max(a,-1),1)}var d=a.elements,f=d[0],e=d[4],g=d[8],h=d[1],j=d[5],k=d[9],m=d[2],p=d[6],d=d[10];void 0===b||"XYZ"===b?(this.y=Math.asin(c(g)),0.99999>Math.abs(g)?(this.x=Math.atan2(-k,d),this.z=Math.atan2(-e,f)):(this.x=Math.atan2(p,j),this.z=0)):"YXZ"===b?(this.x=Math.asin(-c(k)),0.99999>Math.abs(k)?(this.y=Math.atan2(g,d),this.z=Math.atan2(h,j)):(this.y=Math.atan2(-m,
f),this.z=0)):"ZXY"===b?(this.x=Math.asin(c(p)),0.99999>Math.abs(p)?(this.y=Math.atan2(-m,d),this.z=Math.atan2(-e,j)):(this.y=0,this.z=Math.atan2(h,f))):"ZYX"===b?(this.y=Math.asin(-c(m)),0.99999>Math.abs(m)?(this.x=Math.atan2(p,d),this.z=Math.atan2(h,f)):(this.x=0,this.z=Math.atan2(-e,j))):"YZX"===b?(this.z=Math.asin(c(h)),0.99999>Math.abs(h)?(this.x=Math.atan2(-k,j),this.y=Math.atan2(-m,f)):(this.x=0,this.y=Math.atan2(g,d))):"XZY"===b&&(this.z=Math.asin(-c(e)),0.99999>Math.abs(e)?(this.x=Math.atan2(p,
j),this.y=Math.atan2(g,f)):(this.x=Math.atan2(-k,d),this.y=0));return this},setEulerFromQuaternion:function(a,b){function c(a){return Math.min(Math.max(a,-1),1)}var d=a.x*a.x,f=a.y*a.y,e=a.z*a.z,g=a.w*a.w;void 0===b||"XYZ"===b?(this.x=Math.atan2(2*(a.x*a.w-a.y*a.z),g-d-f+e),this.y=Math.asin(c(2*(a.x*a.z+a.y*a.w))),this.z=Math.atan2(2*(a.z*a.w-a.x*a.y),g+d-f-e)):"YXZ"===b?(this.x=Math.asin(c(2*(a.x*a.w-a.y*a.z))),this.y=Math.atan2(2*(a.x*a.z+a.y*a.w),g-d-f+e),this.z=Math.atan2(2*(a.x*a.y+a.z*a.w),
g-d+f-e)):"ZXY"===b?(this.x=Math.asin(c(2*(a.x*a.w+a.y*a.z))),this.y=Math.atan2(2*(a.y*a.w-a.z*a.x),g-d-f+e),this.z=Math.atan2(2*(a.z*a.w-a.x*a.y),g-d+f-e)):"ZYX"===b?(this.x=Math.atan2(2*(a.x*a.w+a.z*a.y),g-d-f+e),this.y=Math.asin(c(2*(a.y*a.w-a.x*a.z))),this.z=Math.atan2(2*(a.x*a.y+a.z*a.w),g+d-f-e)):"YZX"===b?(this.x=Math.atan2(2*(a.x*a.w-a.z*a.y),g-d+f-e),this.y=Math.atan2(2*(a.y*a.w-a.x*a.z),g+d-f-e),this.z=Math.asin(c(2*(a.x*a.y+a.z*a.w)))):"XZY"===b&&(this.x=Math.atan2(2*(a.x*a.w+a.y*a.z),
g-d+f-e),this.y=Math.atan2(2*(a.x*a.z+a.y*a.w),g+d-f-e),this.z=Math.asin(c(2*(a.z*a.w-a.x*a.y))));return this},getScaleFromMatrix:function(a){var b=this.set(a.elements[0],a.elements[1],a.elements[2]).length(),c=this.set(a.elements[4],a.elements[5],a.elements[6]).length();a=this.set(a.elements[8],a.elements[9],a.elements[10]).length();this.x=b;this.y=c;this.z=a;return this},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z},isZero:function(){return 1E-4>this.lengthSq()},clone:function(){return new THREE.Vector3(this.x,
this.y,this.z)}};THREE.Vector4=function(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=void 0!==d?d:1};
THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=void 0!==a.w?a.w:1;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this},subSelf:function(a){this.x-=
a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},divideScalar:function(a){a?(this.x/=a,this.y/=a,this.z/=a,this.w/=a):(this.z=this.y=this.x=0,this.w=1);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w},lengthSq:function(){return this.dot(this)},length:function(){return Math.sqrt(this.lengthSq())},lengthManhattan:function(){return Math.abs(this.x)+
Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.normalize().multiplyScalar(a)},lerpSelf:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b;return this},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},setAxisAngleFromQuaternion:function(a){this.w=2*Math.acos(a.w);var b=Math.sqrt(1-a.w*a.w);1E-4>b?(this.x=1,this.z=this.y=0):
(this.x=a.x/b,this.y=a.y/b,this.z=a.z/b);return this},setAxisAngleFromRotationMatrix:function(a){var b,c,d;a=a.elements;var f=a[0];d=a[4];var e=a[8],g=a[1],h=a[5],j=a[9];c=a[2];b=a[6];var k=a[10];if(0.01>Math.abs(d-g)&&0.01>Math.abs(e-c)&&0.01>Math.abs(j-b)){if(0.1>Math.abs(d+g)&&0.1>Math.abs(e+c)&&0.1>Math.abs(j+b)&&0.1>Math.abs(f+h+k-3))return this.set(1,0,0,0),this;a=Math.PI;f=(f+1)/2;h=(h+1)/2;k=(k+1)/2;d=(d+g)/4;e=(e+c)/4;j=(j+b)/4;f>h&&f>k?0.01>f?(b=0,d=c=0.707106781):(b=Math.sqrt(f),c=d/b,
d=e/b):h>k?0.01>h?(b=0.707106781,c=0,d=0.707106781):(c=Math.sqrt(h),b=d/c,d=j/c):0.01>k?(c=b=0.707106781,d=0):(d=Math.sqrt(k),b=e/d,c=j/d);this.set(b,c,d,a);return this}a=Math.sqrt((b-j)*(b-j)+(e-c)*(e-c)+(g-d)*(g-d));0.001>Math.abs(a)&&(a=1);this.x=(b-j)/a;this.y=(e-c)/a;this.z=(g-d)/a;this.w=Math.acos((f+h+k-1)/2);return this}};THREE.Matrix3=function(){this.elements=new Float32Array(9)};
THREE.Matrix3.prototype={constructor:THREE.Matrix3,getInverse:function(a){var b=a.elements;a=b[10]*b[5]-b[6]*b[9];var c=-b[10]*b[1]+b[2]*b[9],d=b[6]*b[1]-b[2]*b[5],f=-b[10]*b[4]+b[6]*b[8],e=b[10]*b[0]-b[2]*b[8],g=-b[6]*b[0]+b[2]*b[4],h=b[9]*b[4]-b[5]*b[8],j=-b[9]*b[0]+b[1]*b[8],k=b[5]*b[0]-b[1]*b[4],b=b[0]*a+b[1]*f+b[2]*h;0===b&&console.warn("Matrix3.getInverse(): determinant == 0");var b=1/b,m=this.elements;m[0]=b*a;m[1]=b*c;m[2]=b*d;m[3]=b*f;m[4]=b*e;m[5]=b*g;m[6]=b*h;m[7]=b*j;m[8]=b*k;return this},
transpose:function(){var a,b=this.elements;a=b[1];b[1]=b[3];b[3]=a;a=b[2];b[2]=b[6];b[6]=a;a=b[5];b[5]=b[7];b[7]=a;return this},transposeIntoArray:function(a){var b=this.m;a[0]=b[0];a[1]=b[3];a[2]=b[6];a[3]=b[1];a[4]=b[4];a[5]=b[7];a[6]=b[2];a[7]=b[5];a[8]=b[8];return this}};THREE.Matrix4=function(a,b,c,d,f,e,g,h,j,k,m,p,n,s,r,q){this.elements=new Float32Array(16);this.set(void 0!==a?a:1,b||0,c||0,d||0,f||0,void 0!==e?e:1,g||0,h||0,j||0,k||0,void 0!==m?m:1,p||0,n||0,s||0,r||0,void 0!==q?q:1)};
THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(a,b,c,d,f,e,g,h,j,k,m,p,n,s,r,q){var t=this.elements;t[0]=a;t[4]=b;t[8]=c;t[12]=d;t[1]=f;t[5]=e;t[9]=g;t[13]=h;t[2]=j;t[6]=k;t[10]=m;t[14]=p;t[3]=n;t[7]=s;t[11]=r;t[15]=q;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},copy:function(a){a=a.elements;this.set(a[0],a[4],a[8],a[12],a[1],a[5],a[9],a[13],a[2],a[6],a[10],a[14],a[3],a[7],a[11],a[15]);return this},lookAt:function(a,b,c){var d=this.elements,
f=THREE.Matrix4.__v1,e=THREE.Matrix4.__v2,g=THREE.Matrix4.__v3;g.sub(a,b).normalize();0===g.length()&&(g.z=1);f.cross(c,g).normalize();0===f.length()&&(g.x+=1E-4,f.cross(c,g).normalize());e.cross(g,f);d[0]=f.x;d[4]=e.x;d[8]=g.x;d[1]=f.y;d[5]=e.y;d[9]=g.y;d[2]=f.z;d[6]=e.z;d[10]=g.z;return this},multiply:function(a,b){var c=a.elements,d=b.elements,f=this.elements,e=c[0],g=c[4],h=c[8],j=c[12],k=c[1],m=c[5],p=c[9],n=c[13],s=c[2],r=c[6],q=c[10],t=c[14],v=c[3],w=c[7],y=c[11],c=c[15],u=d[0],D=d[4],x=d[8],
C=d[12],G=d[1],A=d[5],J=d[9],H=d[13],I=d[2],E=d[6],Q=d[10],M=d[14],K=d[3],L=d[7],N=d[11],d=d[15];f[0]=e*u+g*G+h*I+j*K;f[4]=e*D+g*A+h*E+j*L;f[8]=e*x+g*J+h*Q+j*N;f[12]=e*C+g*H+h*M+j*d;f[1]=k*u+m*G+p*I+n*K;f[5]=k*D+m*A+p*E+n*L;f[9]=k*x+m*J+p*Q+n*N;f[13]=k*C+m*H+p*M+n*d;f[2]=s*u+r*G+q*I+t*K;f[6]=s*D+r*A+q*E+t*L;f[10]=s*x+r*J+q*Q+t*N;f[14]=s*C+r*H+q*M+t*d;f[3]=v*u+w*G+y*I+c*K;f[7]=v*D+w*A+y*E+c*L;f[11]=v*x+w*J+y*Q+c*N;f[15]=v*C+w*H+y*M+c*d;return this},multiplySelf:function(a){return this.multiply(this,
a)},multiplyToArray:function(a,b,c){var d=this.elements;this.multiply(a,b);c[0]=d[0];c[1]=d[1];c[2]=d[2];c[3]=d[3];c[4]=d[4];c[5]=d[5];c[6]=d[6];c[7]=d[7];c[8]=d[8];c[9]=d[9];c[10]=d[10];c[11]=d[11];c[12]=d[12];c[13]=d[13];c[14]=d[14];c[15]=d[15];return this},multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[4]*=a;b[8]*=a;b[12]*=a;b[1]*=a;b[5]*=a;b[9]*=a;b[13]*=a;b[2]*=a;b[6]*=a;b[10]*=a;b[14]*=a;b[3]*=a;b[7]*=a;b[11]*=a;b[15]*=a;return this},multiplyVector3:function(a){var b=this.elements,
c=a.x,d=a.y,f=a.z,e=1/(b[3]*c+b[7]*d+b[11]*f+b[15]);a.x=(b[0]*c+b[4]*d+b[8]*f+b[12])*e;a.y=(b[1]*c+b[5]*d+b[9]*f+b[13])*e;a.z=(b[2]*c+b[6]*d+b[10]*f+b[14])*e;return a},multiplyVector4:function(a){var b=this.elements,c=a.x,d=a.y,f=a.z,e=a.w;a.x=b[0]*c+b[4]*d+b[8]*f+b[12]*e;a.y=b[1]*c+b[5]*d+b[9]*f+b[13]*e;a.z=b[2]*c+b[6]*d+b[10]*f+b[14]*e;a.w=b[3]*c+b[7]*d+b[11]*f+b[15]*e;return a},multiplyVector3Array:function(a){for(var b=THREE.Matrix4.__v1,c=0,d=a.length;c<d;c+=3)b.x=a[c],b.y=a[c+1],b.z=a[c+2],
this.multiplyVector3(b),a[c]=b.x,a[c+1]=b.y,a[c+2]=b.z;return a},rotateAxis:function(a){var b=this.elements,c=a.x,d=a.y,f=a.z;a.x=c*b[0]+d*b[4]+f*b[8];a.y=c*b[1]+d*b[5]+f*b[9];a.z=c*b[2]+d*b[6]+f*b[10];a.normalize();return a},crossVector:function(a){var b=this.elements,c=new THREE.Vector4;c.x=b[0]*a.x+b[4]*a.y+b[8]*a.z+b[12]*a.w;c.y=b[1]*a.x+b[5]*a.y+b[9]*a.z+b[13]*a.w;c.z=b[2]*a.x+b[6]*a.y+b[10]*a.z+b[14]*a.w;c.w=a.w?b[3]*a.x+b[7]*a.y+b[11]*a.z+b[15]*a.w:1;return c},determinant:function(){var a=
this.elements,b=a[0],c=a[4],d=a[8],f=a[12],e=a[1],g=a[5],h=a[9],j=a[13],k=a[2],m=a[6],p=a[10],n=a[14],s=a[3],r=a[7],q=a[11],a=a[15];return f*h*m*s-d*j*m*s-f*g*p*s+c*j*p*s+d*g*n*s-c*h*n*s-f*h*k*r+d*j*k*r+f*e*p*r-b*j*p*r-d*e*n*r+b*h*n*r+f*g*k*q-c*j*k*q-f*e*m*q+b*j*m*q+c*e*n*q-b*g*n*q-d*g*k*a+c*h*k*a+d*e*m*a-b*h*m*a-c*e*p*a+b*g*p*a},transpose:function(){var a=this.elements,b;b=a[1];a[1]=a[4];a[4]=b;b=a[2];a[2]=a[8];a[8]=b;b=a[6];a[6]=a[9];a[9]=b;b=a[3];a[3]=a[12];a[12]=b;b=a[7];a[7]=a[13];a[13]=b;b=
a[11];a[11]=a[14];a[14]=b;return this},flattenToArray:function(a){var b=this.elements;a[0]=b[0];a[1]=b[1];a[2]=b[2];a[3]=b[3];a[4]=b[4];a[5]=b[5];a[6]=b[6];a[7]=b[7];a[8]=b[8];a[9]=b[9];a[10]=b[10];a[11]=b[11];a[12]=b[12];a[13]=b[13];a[14]=b[14];a[15]=b[15];return a},flattenToArrayOffset:function(a,b){var c=this.elements;a[b]=c[0];a[b+1]=c[1];a[b+2]=c[2];a[b+3]=c[3];a[b+4]=c[4];a[b+5]=c[5];a[b+6]=c[6];a[b+7]=c[7];a[b+8]=c[8];a[b+9]=c[9];a[b+10]=c[10];a[b+11]=c[11];a[b+12]=c[12];a[b+13]=c[13];a[b+
14]=c[14];a[b+15]=c[15];return a},getPosition:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[12],a[13],a[14])},setPosition:function(a){var b=this.elements;b[12]=a.x;b[13]=a.y;b[14]=a.z;return this},getColumnX:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[0],a[1],a[2])},getColumnY:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[4],a[5],a[6])},getColumnZ:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[8],a[9],a[10])},getInverse:function(a){var b=
this.elements,c=a.elements,d=c[0],f=c[4],e=c[8],g=c[12],h=c[1],j=c[5],k=c[9],m=c[13],p=c[2],n=c[6],s=c[10],r=c[14],q=c[3],t=c[7],v=c[11],c=c[15];b[0]=k*r*t-m*s*t+m*n*v-j*r*v-k*n*c+j*s*c;b[4]=g*s*t-e*r*t-g*n*v+f*r*v+e*n*c-f*s*c;b[8]=e*m*t-g*k*t+g*j*v-f*m*v-e*j*c+f*k*c;b[12]=g*k*n-e*m*n-g*j*s+f*m*s+e*j*r-f*k*r;b[1]=m*s*q-k*r*q-m*p*v+h*r*v+k*p*c-h*s*c;b[5]=e*r*q-g*s*q+g*p*v-d*r*v-e*p*c+d*s*c;b[9]=g*k*q-e*m*q-g*h*v+d*m*v+e*h*c-d*k*c;b[13]=e*m*p-g*k*p+g*h*s-d*m*s-e*h*r+d*k*r;b[2]=j*r*q-m*n*q+m*p*t-h*r*
t-j*p*c+h*n*c;b[6]=g*n*q-f*r*q-g*p*t+d*r*t+f*p*c-d*n*c;b[10]=f*m*q-g*j*q+g*h*t-d*m*t-f*h*c+d*j*c;b[14]=g*j*p-f*m*p-g*h*n+d*m*n+f*h*r-d*j*r;b[3]=k*n*q-j*s*q-k*p*t+h*s*t+j*p*v-h*n*v;b[7]=f*s*q-e*n*q+e*p*t-d*s*t-f*p*v+d*n*v;b[11]=e*j*q-f*k*q-e*h*t+d*k*t+f*h*v-d*j*v;b[15]=f*k*p-e*j*p+e*h*n-d*k*n-f*h*s+d*j*s;this.multiplyScalar(1/a.determinant());return this},setRotationFromEuler:function(a,b){var c=this.elements,d=a.x,f=a.y,e=a.z,g=Math.cos(d),d=Math.sin(d),h=Math.cos(f),f=Math.sin(f),j=Math.cos(e),e=
Math.sin(e);if(void 0===b||"XYZ"===b){var k=g*j,m=g*e,p=d*j,n=d*e;c[0]=h*j;c[4]=-h*e;c[8]=f;c[1]=m+p*f;c[5]=k-n*f;c[9]=-d*h;c[2]=n-k*f;c[6]=p+m*f;c[10]=g*h}else"YXZ"===b?(k=h*j,m=h*e,p=f*j,n=f*e,c[0]=k+n*d,c[4]=p*d-m,c[8]=g*f,c[1]=g*e,c[5]=g*j,c[9]=-d,c[2]=m*d-p,c[6]=n+k*d,c[10]=g*h):"ZXY"===b?(k=h*j,m=h*e,p=f*j,n=f*e,c[0]=k-n*d,c[4]=-g*e,c[8]=p+m*d,c[1]=m+p*d,c[5]=g*j,c[9]=n-k*d,c[2]=-g*f,c[6]=d,c[10]=g*h):"ZYX"===b?(k=g*j,m=g*e,p=d*j,n=d*e,c[0]=h*j,c[4]=p*f-m,c[8]=k*f+n,c[1]=h*e,c[5]=n*f+k,c[9]=
m*f-p,c[2]=-f,c[6]=d*h,c[10]=g*h):"YZX"===b?(k=g*h,m=g*f,p=d*h,n=d*f,c[0]=h*j,c[4]=n-k*e,c[8]=p*e+m,c[1]=e,c[5]=g*j,c[9]=-d*j,c[2]=-f*j,c[6]=m*e+p,c[10]=k-n*e):"XZY"===b&&(k=g*h,m=g*f,p=d*h,n=d*f,c[0]=h*j,c[4]=-e,c[8]=f*j,c[1]=k*e+n,c[5]=g*j,c[9]=m*e-p,c[2]=p*e-m,c[6]=d*j,c[10]=n*e+k);return this},setRotationFromQuaternion:function(a){var b=this.elements,c=a.x,d=a.y,f=a.z,e=a.w,g=c+c,h=d+d,j=f+f;a=c*g;var k=c*h,c=c*j,m=d*h,d=d*j,f=f*j,g=e*g,h=e*h,e=e*j;b[0]=1-(m+f);b[4]=k-e;b[8]=c+h;b[1]=k+e;b[5]=
1-(a+f);b[9]=d-g;b[2]=c-h;b[6]=d+g;b[10]=1-(a+m);return this},compose:function(a,b,c){var d=this.elements,f=THREE.Matrix4.__m1,e=THREE.Matrix4.__m2;f.identity();f.setRotationFromQuaternion(b);e.makeScale(c.x,c.y,c.z);this.multiply(f,e);d[12]=a.x;d[13]=a.y;d[14]=a.z;return this},decompose:function(a,b,c){var d=this.elements,f=THREE.Matrix4.__v1,e=THREE.Matrix4.__v2,g=THREE.Matrix4.__v3;f.set(d[0],d[1],d[2]);e.set(d[4],d[5],d[6]);g.set(d[8],d[9],d[10]);a=a instanceof THREE.Vector3?a:new THREE.Vector3;
b=b instanceof THREE.Quaternion?b:new THREE.Quaternion;c=c instanceof THREE.Vector3?c:new THREE.Vector3;c.x=f.length();c.y=e.length();c.z=g.length();a.x=d[12];a.y=d[13];a.z=d[14];d=THREE.Matrix4.__m1;d.copy(this);d.elements[0]/=c.x;d.elements[1]/=c.x;d.elements[2]/=c.x;d.elements[4]/=c.y;d.elements[5]/=c.y;d.elements[6]/=c.y;d.elements[8]/=c.z;d.elements[9]/=c.z;d.elements[10]/=c.z;b.setFromRotationMatrix(d);return[a,b,c]},extractPosition:function(a){var b=this.elements;a=a.elements;b[12]=a[12];b[13]=
a[13];b[14]=a[14];return this},extractRotation:function(a){var b=this.elements;a=a.elements;var c=THREE.Matrix4.__v1,d=1/c.set(a[0],a[1],a[2]).length(),f=1/c.set(a[4],a[5],a[6]).length(),c=1/c.set(a[8],a[9],a[10]).length();b[0]=a[0]*d;b[1]=a[1]*d;b[2]=a[2]*d;b[4]=a[4]*f;b[5]=a[5]*f;b[6]=a[6]*f;b[8]=a[8]*c;b[9]=a[9]*c;b[10]=a[10]*c;return this},translate:function(a){var b=this.elements,c=a.x,d=a.y;a=a.z;b[12]=b[0]*c+b[4]*d+b[8]*a+b[12];b[13]=b[1]*c+b[5]*d+b[9]*a+b[13];b[14]=b[2]*c+b[6]*d+b[10]*a+b[14];
b[15]=b[3]*c+b[7]*d+b[11]*a+b[15];return this},rotateX:function(a){var b=this.elements,c=b[4],d=b[5],f=b[6],e=b[7],g=b[8],h=b[9],j=b[10],k=b[11],m=Math.cos(a);a=Math.sin(a);b[4]=m*c+a*g;b[5]=m*d+a*h;b[6]=m*f+a*j;b[7]=m*e+a*k;b[8]=m*g-a*c;b[9]=m*h-a*d;b[10]=m*j-a*f;b[11]=m*k-a*e;return this},rotateY:function(a){var b=this.elements,c=b[0],d=b[1],f=b[2],e=b[3],g=b[8],h=b[9],j=b[10],k=b[11],m=Math.cos(a);a=Math.sin(a);b[0]=m*c-a*g;b[1]=m*d-a*h;b[2]=m*f-a*j;b[3]=m*e-a*k;b[8]=m*g+a*c;b[9]=m*h+a*d;b[10]=
m*j+a*f;b[11]=m*k+a*e;return this},rotateZ:function(a){var b=this.elements,c=b[0],d=b[1],f=b[2],e=b[3],g=b[4],h=b[5],j=b[6],k=b[7],m=Math.cos(a);a=Math.sin(a);b[0]=m*c+a*g;b[1]=m*d+a*h;b[2]=m*f+a*j;b[3]=m*e+a*k;b[4]=m*g-a*c;b[5]=m*h-a*d;b[6]=m*j-a*f;b[7]=m*k-a*e;return this},rotateByAxis:function(a,b){var c=this.elements;if(1===a.x&&0===a.y&&0===a.z)return this.rotateX(b);if(0===a.x&&1===a.y&&0===a.z)return this.rotateY(b);if(0===a.x&&0===a.y&&1===a.z)return this.rotateZ(b);var d=a.x,f=a.y,e=a.z,
g=Math.sqrt(d*d+f*f+e*e),d=d/g,f=f/g,e=e/g,g=d*d,h=f*f,j=e*e,k=Math.cos(b),m=Math.sin(b),p=1-k,n=d*f*p,s=d*e*p,p=f*e*p,d=d*m,r=f*m,m=e*m,e=g+(1-g)*k,g=n+m,f=s-r,n=n-m,h=h+(1-h)*k,m=p+d,s=s+r,p=p-d,j=j+(1-j)*k,k=c[0],d=c[1],r=c[2],q=c[3],t=c[4],v=c[5],w=c[6],y=c[7],u=c[8],D=c[9],x=c[10],C=c[11];c[0]=e*k+g*t+f*u;c[1]=e*d+g*v+f*D;c[2]=e*r+g*w+f*x;c[3]=e*q+g*y+f*C;c[4]=n*k+h*t+m*u;c[5]=n*d+h*v+m*D;c[6]=n*r+h*w+m*x;c[7]=n*q+h*y+m*C;c[8]=s*k+p*t+j*u;c[9]=s*d+p*v+j*D;c[10]=s*r+p*w+j*x;c[11]=s*q+p*y+j*C;
return this},scale:function(a){var b=this.elements,c=a.x,d=a.y;a=a.z;b[0]*=c;b[4]*=d;b[8]*=a;b[1]*=c;b[5]*=d;b[9]*=a;b[2]*=c;b[6]*=d;b[10]*=a;b[3]*=c;b[7]*=d;b[11]*=a;return this},getMaxScaleOnAxis:function(){var a=this.elements;return Math.sqrt(Math.max(a[0]*a[0]+a[1]*a[1]+a[2]*a[2],Math.max(a[4]*a[4]+a[5]*a[5]+a[6]*a[6],a[8]*a[8]+a[9]*a[9]+a[10]*a[10])))},makeTranslation:function(a,b,c){this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1);return this},makeRotationX:function(a){var b=Math.cos(a);a=Math.sin(a);
this.set(1,0,0,0,0,b,-a,0,0,a,b,0,0,0,0,1);return this},makeRotationY:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(b,0,a,0,0,1,0,0,-a,0,b,0,0,0,0,1);return this},makeRotationZ:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(b,-a,0,0,a,b,0,0,0,0,1,0,0,0,0,1);return this},makeRotationAxis:function(a,b){var c=Math.cos(b),d=Math.sin(b),f=1-c,e=a.x,g=a.y,h=a.z,j=f*e,k=f*g;this.set(j*e+c,j*g-d*h,j*h+d*g,0,j*g+d*h,k*g+c,k*h-d*e,0,j*h-d*g,k*h+d*e,f*h*h+c,0,0,0,0,1);return this},makeScale:function(a,
b,c){this.set(a,0,0,0,0,b,0,0,0,0,c,0,0,0,0,1);return this},makeFrustum:function(a,b,c,d,f,e){var g=this.elements;g[0]=2*f/(b-a);g[4]=0;g[8]=(b+a)/(b-a);g[12]=0;g[1]=0;g[5]=2*f/(d-c);g[9]=(d+c)/(d-c);g[13]=0;g[2]=0;g[6]=0;g[10]=-(e+f)/(e-f);g[14]=-2*e*f/(e-f);g[3]=0;g[7]=0;g[11]=-1;g[15]=0;return this},makePerspective:function(a,b,c,d){a=c*Math.tan(a*Math.PI/360);var f=-a;return this.makeFrustum(f*b,a*b,f,a,c,d)},makeOrthographic:function(a,b,c,d,f,e){var g=this.elements,h=b-a,j=c-d,k=e-f;g[0]=2/
h;g[4]=0;g[8]=0;g[12]=-((b+a)/h);g[1]=0;g[5]=2/j;g[9]=0;g[13]=-((c+d)/j);g[2]=0;g[6]=0;g[10]=-2/k;g[14]=-((e+f)/k);g[3]=0;g[7]=0;g[11]=0;g[15]=1;return this},clone:function(){var a=this.elements;return new THREE.Matrix4(a[0],a[4],a[8],a[12],a[1],a[5],a[9],a[13],a[2],a[6],a[10],a[14],a[3],a[7],a[11],a[15])}};THREE.Matrix4.__v1=new THREE.Vector3;THREE.Matrix4.__v2=new THREE.Vector3;THREE.Matrix4.__v3=new THREE.Vector3;THREE.Matrix4.__m1=new THREE.Matrix4;THREE.Matrix4.__m2=new THREE.Matrix4;
THREE.EventTarget=function(){var a={};this.addEventListener=function(b,c){void 0===a[b]&&(a[b]=[]);-1===a[b].indexOf(c)&&a[b].push(c)};this.dispatchEvent=function(b){for(var c in a[b.type])a[b.type][c](b)};this.removeEventListener=function(b,c){var d=a[b].indexOf(c);-1!==d&&a[b].splice(d,1)}};THREE.Frustum=function(){this.planes=[new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4]};
THREE.Frustum.prototype.setFromMatrix=function(a){var b=this.planes,c=a.elements;a=c[0];var d=c[1],f=c[2],e=c[3],g=c[4],h=c[5],j=c[6],k=c[7],m=c[8],p=c[9],n=c[10],s=c[11],r=c[12],q=c[13],t=c[14],c=c[15];b[0].set(e-a,k-g,s-m,c-r);b[1].set(e+a,k+g,s+m,c+r);b[2].set(e+d,k+h,s+p,c+q);b[3].set(e-d,k-h,s-p,c-q);b[4].set(e-f,k-j,s-n,c-t);b[5].set(e+f,k+j,s+n,c+t);for(d=0;6>d;d++)a=b[d],a.divideScalar(Math.sqrt(a.x*a.x+a.y*a.y+a.z*a.z))};
THREE.Frustum.prototype.contains=function(a){var b=0,c=this.planes,b=a.matrixWorld,d=b.elements;a=-a.geometry.boundingSphere.radius*b.getMaxScaleOnAxis();for(var f=0;6>f;f++)if(b=c[f].x*d[12]+c[f].y*d[13]+c[f].z*d[14]+c[f].w,b<=a)return!1;return!0};THREE.Frustum.__v1=new THREE.Vector3;
(function(a){a.Ray=function(b,c,d,f){this.origin=b||new a.Vector3;this.direction=c||new a.Vector3;this.near=d||0;this.far=f||Infinity};var b=new a.Vector3,c=new a.Vector3,d=new a.Vector3,f=new a.Vector3,e=new a.Vector3,g=new a.Vector3,h=new a.Matrix4,j=function(a,b){return a.distance-b.distance},k=new a.Vector3,m=new a.Vector3,p=new a.Vector3,n=function(a,b,c){k.sub(c,a);var d=k.dot(b);a=m.add(a,p.copy(b).multiplyScalar(d));return c.distanceTo(a)},s=function(a,b,c,d){k.sub(d,b);m.sub(c,b);p.sub(a,
b);a=k.dot(k);b=k.dot(m);c=k.dot(p);var f=m.dot(m);d=m.dot(p);var e=1/(a*f-b*b),f=(f*c-b*d)*e;a=(a*d-b*c)*e;return 0<=f&&0<=a&&1>f+a},r=function(j,k,m){var p,q;if(j instanceof a.Particle){p=n(k.origin,k.direction,j.matrixWorld.getPosition());if(p>j.scale.x)return m;q={distance:p,point:j.position,face:null,object:j};m.push(q)}else if(j instanceof a.Mesh){var r=j.geometry.boundingSphere.radius*j.matrixWorld.getMaxScaleOnAxis();p=n(k.origin,k.direction,j.matrixWorld.getPosition());if(p>r)return m;var x,
C,G=j.geometry,A=G.vertices,J,H,I;J=j.geometry.materials;H=j.material instanceof a.MeshFaceMaterial;var E,Q=k.precision;j.matrixRotationWorld.extractRotation(j.matrixWorld);b.copy(k.origin);h.getInverse(j.matrixWorld);c.copy(b);h.multiplyVector3(c);d.copy(k.direction);h.rotateAxis(d).normalize();r=0;for(x=G.faces.length;r<x;r++)if(q=G.faces[r],p=!0===H?J[q.materialIndex]:j.material,void 0!==p&&(I=p.side,f.sub(q.centroid,c),e=q.normal,p=d.dot(e),!(Math.abs(p)<Q)&&(C=e.dot(f)/p,!(0>C)&&(I===a.DoubleSide||
(I===a.FrontSide?0>p:0<p)))))if(g.add(c,d.multiplyScalar(C)),q instanceof a.Face3)p=A[q.a],C=A[q.b],I=A[q.c],s(g,p,C,I)&&(C=j.matrixWorld.multiplyVector3(g.clone()),p=b.distanceTo(C),p<k.near||p>k.far||(q={distance:p,point:C,face:q,faceIndex:r,object:j},m.push(q)));else if(q instanceof a.Face4&&(p=A[q.a],C=A[q.b],I=A[q.c],E=A[q.d],s(g,p,C,E)||s(g,C,I,E)))C=j.matrixWorld.multiplyVector3(g.clone()),p=b.distanceTo(C),p<k.near||p>k.far||(q={distance:p,point:C,face:q,faceIndex:r,object:j},m.push(q))}},
q=function(a,b,c){a=a.getDescendants();for(var d=0,f=a.length;d<f;d++)r(a[d],b,c)};a.Ray.prototype.precision=1E-4;a.Ray.prototype.set=function(a,b){this.origin=a;this.direction=b};a.Ray.prototype.intersectObject=function(a,b){var c=[];!0===b&&q(a,this,c);r(a,this,c);c.sort(j);return c};a.Ray.prototype.intersectObjects=function(a,b){for(var c=[],d=0,f=a.length;d<f;d++)r(a[d],this,c),!0===b&&q(a[d],this,c);c.sort(j);return c}})(THREE);
THREE.Rectangle=function(){function a(){e=d-b;g=f-c}var b=0,c=0,d=0,f=0,e=0,g=0,h=!0;this.getX=function(){return b};this.getY=function(){return c};this.getWidth=function(){return e};this.getHeight=function(){return g};this.getLeft=function(){return b};this.getTop=function(){return c};this.getRight=function(){return d};this.getBottom=function(){return f};this.set=function(e,g,m,p){h=!1;b=e;c=g;d=m;f=p;a()};this.addPoint=function(e,g){!0===h?(h=!1,b=e,c=g,d=e,f=g):(b=b<e?b:e,c=c<g?c:g,d=d>e?d:e,f=f>
g?f:g);a()};this.add3Points=function(e,g,m,p,n,s){!0===h?(h=!1,b=e<m?e<n?e:n:m<n?m:n,c=g<p?g<s?g:s:p<s?p:s,d=e>m?e>n?e:n:m>n?m:n,f=g>p?g>s?g:s:p>s?p:s):(b=e<m?e<n?e<b?e:b:n<b?n:b:m<n?m<b?m:b:n<b?n:b,c=g<p?g<s?g<c?g:c:s<c?s:c:p<s?p<c?p:c:s<c?s:c,d=e>m?e>n?e>d?e:d:n>d?n:d:m>n?m>d?m:d:n>d?n:d,f=g>p?g>s?g>f?g:f:s>f?s:f:p>s?p>f?p:f:s>f?s:f);a()};this.addRectangle=function(e){!0===h?(h=!1,b=e.getLeft(),c=e.getTop(),d=e.getRight(),f=e.getBottom()):(b=b<e.getLeft()?b:e.getLeft(),c=c<e.getTop()?c:e.getTop(),
d=d>e.getRight()?d:e.getRight(),f=f>e.getBottom()?f:e.getBottom());a()};this.inflate=function(e){b-=e;c-=e;d+=e;f+=e;a()};this.minSelf=function(e){b=b>e.getLeft()?b:e.getLeft();c=c>e.getTop()?c:e.getTop();d=d<e.getRight()?d:e.getRight();f=f<e.getBottom()?f:e.getBottom();a()};this.intersects=function(a){return d<a.getLeft()||b>a.getRight()||f<a.getTop()||c>a.getBottom()?!1:!0};this.empty=function(){h=!0;f=d=c=b=0;a()};this.isEmpty=function(){return h}};
THREE.Math={clamp:function(a,b,c){return a<b?b:a>c?c:a},clampBottom:function(a,b){return a<b?b:a},mapLinear:function(a,b,c,d,f){return d+(a-b)*(f-d)/(c-b)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(a,b){return a+Math.floor(Math.random()*(b-a+1))},randFloat:function(a,b){return a+Math.random()*(b-a)},randFloatSpread:function(a){return a*(0.5-Math.random())},sign:function(a){return 0>a?-1:0<a?1:0}};
THREE.Object3D=function(){this.id=THREE.Object3DCount++;this.name="";this.properties={};this.parent=void 0;this.children=[];this.up=new THREE.Vector3(0,1,0);this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.eulerOrder="XYZ";this.scale=new THREE.Vector3(1,1,1);this.renderDepth=null;this.rotationAutoUpdate=!0;this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;this.matrixRotationWorld=new THREE.Matrix4;this.matrixWorldNeedsUpdate=this.matrixAutoUpdate=!0;this.quaternion=
new THREE.Quaternion;this.useQuaternion=!1;this.boundRadius=0;this.boundRadiusScale=1;this.visible=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this._vector=new THREE.Vector3};
THREE.Object3D.prototype={constructor:THREE.Object3D,applyMatrix:function(a){this.matrix.multiply(a,this.matrix);this.scale.getScaleFromMatrix(this.matrix);a=(new THREE.Matrix4).extractRotation(this.matrix);this.rotation.setEulerFromRotationMatrix(a,this.eulerOrder);this.position.getPositionFromMatrix(this.matrix)},translate:function(a,b){this.matrix.rotateAxis(b);this.position.addSelf(b.multiplyScalar(a))},translateX:function(a){this.translate(a,this._vector.set(1,0,0))},translateY:function(a){this.translate(a,
this._vector.set(0,1,0))},translateZ:function(a){this.translate(a,this._vector.set(0,0,1))},localToWorld:function(a){return this.matrixWorld.multiplyVector3(a)},worldToLocal:function(a){return THREE.Object3D.__m1.getInverse(this.matrixWorld).multiplyVector3(a)},lookAt:function(a){this.matrix.lookAt(a,this.position,this.up);this.rotationAutoUpdate&&this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder)},add:function(a){if(a===this)console.warn("THREE.Object3D.add: An object can't be added as a child of itself.");
else if(a instanceof THREE.Object3D){void 0!==a.parent&&a.parent.remove(a);a.parent=this;this.children.push(a);for(var b=this;void 0!==b.parent;)b=b.parent;void 0!==b&&b instanceof THREE.Scene&&b.__addObject(a)}},remove:function(a){var b=this.children.indexOf(a);if(-1!==b){a.parent=void 0;this.children.splice(b,1);for(b=this;void 0!==b.parent;)b=b.parent;void 0!==b&&b instanceof THREE.Scene&&b.__removeObject(a)}},getChildByName:function(a,b){var c,d,f;c=0;for(d=this.children.length;c<d;c++)if(f=this.children[c],
f.name===a||b&&(f=f.getChildByName(a,b),void 0!==f))return f},getDescendants:function(a){void 0===a&&(a=[]);Array.prototype.push.apply(a,this.children);for(var b=0,c=this.children.length;b<c;b++)this.children[b].getDescendants(a);return a},updateMatrix:function(){this.matrix.setPosition(this.position);!1===this.useQuaternion?this.matrix.setRotationFromEuler(this.rotation,this.eulerOrder):this.matrix.setRotationFromQuaternion(this.quaternion);if(1!==this.scale.x||1!==this.scale.y||1!==this.scale.z)this.matrix.scale(this.scale),
this.boundRadiusScale=Math.max(this.scale.x,Math.max(this.scale.y,this.scale.z));this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(a){!0===this.matrixAutoUpdate&&this.updateMatrix();if(!0===this.matrixWorldNeedsUpdate||!0===a)void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0;for(var b=0,c=this.children.length;b<c;b++)this.children[b].updateMatrixWorld(a)},clone:function(){}};
THREE.Object3D.__m1=new THREE.Matrix4;THREE.Object3DCount=0;
THREE.Projector=function(){function a(){if(e===h){var a=new THREE.RenderableObject;g.push(a);h++;e++;return a}return g[e++]}function b(){if(k===p){var a=new THREE.RenderableVertex;m.push(a);p++;k++;return a}return m[k++]}function c(a,b){return b.z-a.z}function d(a,b){var c=0,d=1,f=a.z+a.w,e=b.z+b.w,g=-a.z+a.w,h=-b.z+b.w;if(0<=f&&0<=e&&0<=g&&0<=h)return!0;if(0>f&&0>e||0>g&&0>h)return!1;0>f?c=Math.max(c,f/(f-e)):0>e&&(d=Math.min(d,f/(f-e)));0>g?c=Math.max(c,g/(g-h)):0>h&&(d=Math.min(d,g/(g-h)));if(d<
c)return!1;a.lerpSelf(b,c);b.lerpSelf(a,1-d);return!0}var f,e,g=[],h=0,j,k,m=[],p=0,n,s,r=[],q=0,t,v=[],w=0,y,u,D=[],x=0,C,G,A=[],J=0,H={objects:[],sprites:[],lights:[],elements:[]},I=new THREE.Vector3,E=new THREE.Vector4,Q=new THREE.Matrix4,M=new THREE.Matrix4,K=new THREE.Frustum,L=new THREE.Vector4,N=new THREE.Vector4;this.projectVector=function(a,b){b.matrixWorldInverse.getInverse(b.matrixWorld);Q.multiply(b.projectionMatrix,b.matrixWorldInverse);Q.multiplyVector3(a);return a};this.unprojectVector=
function(a,b){b.projectionMatrixInverse.getInverse(b.projectionMatrix);Q.multiply(b.matrixWorld,b.projectionMatrixInverse);Q.multiplyVector3(a);return a};this.pickingRay=function(a,b){var c;a.z=-1;c=new THREE.Vector3(a.x,a.y,1);this.unprojectVector(a,b);this.unprojectVector(c,b);c.subSelf(a).normalize();return new THREE.Ray(a,c)};this.projectScene=function(g,h,p,O){var da=h.near,S=h.far,ha=!1,va,fa,ia,P,W,ka,Ka,ra,wa,Ea,La,Za,la,rb,Qa,$a;G=u=t=s=0;H.elements.length=0;g.updateMatrixWorld();void 0===
h.parent&&h.updateMatrixWorld();h.matrixWorldInverse.getInverse(h.matrixWorld);Q.multiply(h.projectionMatrix,h.matrixWorldInverse);K.setFromMatrix(Q);e=0;H.objects.length=0;H.sprites.length=0;H.lights.length=0;var yb=function(b){for(var c=0,d=b.children.length;c<d;c++){var e=b.children[c];if(!1!==e.visible){if(e instanceof THREE.Light)H.lights.push(e);else if(e instanceof THREE.Mesh||e instanceof THREE.Line){if(!1===e.frustumCulled||!0===K.contains(e))f=a(),f.object=e,null!==e.renderDepth?f.z=e.renderDepth:
(I.copy(e.matrixWorld.getPosition()),Q.multiplyVector3(I),f.z=I.z),H.objects.push(f)}else e instanceof THREE.Sprite||e instanceof THREE.Particle?(f=a(),f.object=e,null!==e.renderDepth?f.z=e.renderDepth:(I.copy(e.matrixWorld.getPosition()),Q.multiplyVector3(I),f.z=I.z),H.sprites.push(f)):(f=a(),f.object=e,null!==e.renderDepth?f.z=e.renderDepth:(I.copy(e.matrixWorld.getPosition()),Q.multiplyVector3(I),f.z=I.z),H.objects.push(f));yb(e)}}};yb(g);!0===p&&H.objects.sort(c);g=0;for(p=H.objects.length;g<
p;g++)if(ra=H.objects[g].object,wa=ra.matrixWorld,k=0,ra instanceof THREE.Mesh){Ea=ra.geometry;La=ra.geometry.materials;ia=Ea.vertices;Za=Ea.faces;rb=Ea.faceVertexUvs;Ea=ra.matrixRotationWorld.extractRotation(wa);$a=ra.material instanceof THREE.MeshFaceMaterial;va=0;for(fa=ia.length;va<fa;va++)j=b(),j.positionWorld.copy(ia[va]),wa.multiplyVector3(j.positionWorld),j.positionScreen.copy(j.positionWorld),Q.multiplyVector4(j.positionScreen),j.positionScreen.x/=j.positionScreen.w,j.positionScreen.y/=j.positionScreen.w,
j.visible=j.positionScreen.z>da&&j.positionScreen.z<S;ia=0;for(va=Za.length;ia<va;ia++)if(Ka=Za[ia],fa=!0===$a?La[Ka.materialIndex]:ra.material,void 0!==fa){ka=fa.side;if(Ka instanceof THREE.Face3)if(P=m[Ka.a],W=m[Ka.b],la=m[Ka.c],!0===P.visible&&!0===W.visible&&!0===la.visible)if(ha=0>(la.positionScreen.x-P.positionScreen.x)*(W.positionScreen.y-P.positionScreen.y)-(la.positionScreen.y-P.positionScreen.y)*(W.positionScreen.x-P.positionScreen.x),ka===THREE.DoubleSide||ha===(ka===THREE.FrontSide))s===
q?(Qa=new THREE.RenderableFace3,r.push(Qa),q++,s++,n=Qa):n=r[s++],n.v1.copy(P),n.v2.copy(W),n.v3.copy(la);else continue;else continue;else if(Ka instanceof THREE.Face4)if(P=m[Ka.a],W=m[Ka.b],la=m[Ka.c],Qa=m[Ka.d],!0===P.visible&&!0===W.visible&&!0===la.visible&&!0===Qa.visible)if(ha=0>(Qa.positionScreen.x-P.positionScreen.x)*(W.positionScreen.y-P.positionScreen.y)-(Qa.positionScreen.y-P.positionScreen.y)*(W.positionScreen.x-P.positionScreen.x)||0>(W.positionScreen.x-la.positionScreen.x)*(Qa.positionScreen.y-
la.positionScreen.y)-(W.positionScreen.y-la.positionScreen.y)*(Qa.positionScreen.x-la.positionScreen.x),ka===THREE.DoubleSide||ha===(ka===THREE.FrontSide)){if(t===w){var zb=new THREE.RenderableFace4;v.push(zb);w++;t++;n=zb}else n=v[t++];n.v1.copy(P);n.v2.copy(W);n.v3.copy(la);n.v4.copy(Qa)}else continue;else continue;n.normalWorld.copy(Ka.normal);!1===ha&&(ka===THREE.BackSide||ka===THREE.DoubleSide)&&n.normalWorld.negate();Ea.multiplyVector3(n.normalWorld);n.centroidWorld.copy(Ka.centroid);wa.multiplyVector3(n.centroidWorld);
n.centroidScreen.copy(n.centroidWorld);Q.multiplyVector3(n.centroidScreen);Ka=Ka.vertexNormals;P=0;for(W=Ka.length;P<W;P++)la=n.vertexNormalsWorld[P],la.copy(Ka[P]),!1===ha&&(ka===THREE.BackSide||ka===THREE.DoubleSide)&&la.negate(),Ea.multiplyVector3(la);n.vertexNormalsLength=Ka.length;P=0;for(W=rb.length;P<W;P++)if(la=rb[P][ia],void 0!==la){ka=0;for(Ka=la.length;ka<Ka;ka++)n.uvs[P][ka]=la[ka]}n.material=fa;n.z=n.centroidScreen.z;H.elements.push(n)}}else if(ra instanceof THREE.Line){M.multiply(Q,
wa);ia=ra.geometry.vertices;P=b();P.positionScreen.copy(ia[0]);M.multiplyVector4(P.positionScreen);wa=ra.type===THREE.LinePieces?2:1;va=1;for(fa=ia.length;va<fa;va++)P=b(),P.positionScreen.copy(ia[va]),M.multiplyVector4(P.positionScreen),0<(va+1)%wa||(W=m[k-2],L.copy(P.positionScreen),N.copy(W.positionScreen),!0===d(L,N)&&(L.multiplyScalar(1/L.w),N.multiplyScalar(1/N.w),u===x?(La=new THREE.RenderableLine,D.push(La),x++,u++,y=La):y=D[u++],y.v1.positionScreen.copy(L),y.v2.positionScreen.copy(N),y.z=
Math.max(L.z,N.z),y.material=ra.material,H.elements.push(y)))}g=0;for(p=H.sprites.length;g<p;g++)ra=H.sprites[g].object,wa=ra.matrixWorld,ra instanceof THREE.Particle&&(E.set(wa.elements[12],wa.elements[13],wa.elements[14],1),Q.multiplyVector4(E),E.z/=E.w,0<E.z&&1>E.z&&(G===J?(da=new THREE.RenderableParticle,A.push(da),J++,G++,C=da):C=A[G++],C.object=ra,C.x=E.x/E.w,C.y=E.y/E.w,C.z=E.z,C.rotation=ra.rotation.z,C.scale.x=ra.scale.x*Math.abs(C.x-(E.x+h.projectionMatrix.elements[0])/(E.w+h.projectionMatrix.elements[12])),
C.scale.y=ra.scale.y*Math.abs(C.y-(E.y+h.projectionMatrix.elements[5])/(E.w+h.projectionMatrix.elements[13])),C.material=ra.material,H.elements.push(C)));!0===O&&H.elements.sort(c);return H}};THREE.Quaternion=function(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=void 0!==d?d:1};
THREE.Quaternion.prototype={constructor:THREE.Quaternion,set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w;return this},setFromEuler:function(a,b){var c=Math.cos(a.x/2),d=Math.cos(a.y/2),f=Math.cos(a.z/2),e=Math.sin(a.x/2),g=Math.sin(a.y/2),h=Math.sin(a.z/2);void 0===b||"XYZ"===b?(this.x=e*d*f+c*g*h,this.y=c*g*f-e*d*h,this.z=c*d*h+e*g*f,this.w=c*d*f-e*g*h):"YXZ"===b?(this.x=e*d*f+c*g*h,this.y=c*g*f-e*d*h,this.z=c*d*
h-e*g*f,this.w=c*d*f+e*g*h):"ZXY"===b?(this.x=e*d*f-c*g*h,this.y=c*g*f+e*d*h,this.z=c*d*h+e*g*f,this.w=c*d*f-e*g*h):"ZYX"===b?(this.x=e*d*f-c*g*h,this.y=c*g*f+e*d*h,this.z=c*d*h-e*g*f,this.w=c*d*f+e*g*h):"YZX"===b?(this.x=e*d*f+c*g*h,this.y=c*g*f+e*d*h,this.z=c*d*h-e*g*f,this.w=c*d*f-e*g*h):"XZY"===b&&(this.x=e*d*f-c*g*h,this.y=c*g*f-e*d*h,this.z=c*d*h+e*g*f,this.w=c*d*f+e*g*h);return this},setFromAxisAngle:function(a,b){var c=b/2,d=Math.sin(c);this.x=a.x*d;this.y=a.y*d;this.z=a.z*d;this.w=Math.cos(c);
return this},setFromRotationMatrix:function(a){var b=a.elements,c=b[0];a=b[4];var d=b[8],f=b[1],e=b[5],g=b[9],h=b[2],j=b[6],b=b[10],k=c+e+b;0<k?(c=0.5/Math.sqrt(k+1),this.w=0.25/c,this.x=(j-g)*c,this.y=(d-h)*c,this.z=(f-a)*c):c>e&&c>b?(c=2*Math.sqrt(1+c-e-b),this.w=(j-g)/c,this.x=0.25*c,this.y=(a+f)/c,this.z=(d+h)/c):e>b?(c=2*Math.sqrt(1+e-c-b),this.w=(d-h)/c,this.x=(a+f)/c,this.y=0.25*c,this.z=(g+j)/c):(c=2*Math.sqrt(1+b-c-e),this.w=(f-a)/c,this.x=(d+h)/c,this.y=(g+j)/c,this.z=0.25*c);return this},
calculateW:function(){this.w=-Math.sqrt(Math.abs(1-this.x*this.x-this.y*this.y-this.z*this.z));return this},inverse:function(){this.x*=-1;this.y*=-1;this.z*=-1;return this},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},normalize:function(){var a=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);0===a?this.w=this.z=this.y=this.x=0:(a=1/a,this.x*=a,this.y*=a,this.z*=a,this.w*=a);return this},multiply:function(a,b){var c=a.x,d=a.y,f=a.z,
e=a.w,g=b.x,h=b.y,j=b.z,k=b.w;this.x=c*k+d*j-f*h+e*g;this.y=-c*j+d*k+f*g+e*h;this.z=c*h-d*g+f*k+e*j;this.w=-c*g-d*h-f*j+e*k;return this},multiplySelf:function(a){var b=this.x,c=this.y,d=this.z,f=this.w,e=a.x,g=a.y,h=a.z;a=a.w;this.x=b*a+f*e+c*h-d*g;this.y=c*a+f*g+d*e-b*h;this.z=d*a+f*h+b*g-c*e;this.w=f*a-b*e-c*g-d*h;return this},multiplyVector3:function(a,b){b||(b=a);var c=a.x,d=a.y,f=a.z,e=this.x,g=this.y,h=this.z,j=this.w,k=j*c+g*f-h*d,m=j*d+h*c-e*f,p=j*f+e*d-g*c,c=-e*c-g*d-h*f;b.x=k*j+c*-e+m*-h-
p*-g;b.y=m*j+c*-g+p*-e-k*-h;b.z=p*j+c*-h+k*-g-m*-e;return b},slerpSelf:function(a,b){var c=this.x,d=this.y,f=this.z,e=this.w,g=e*a.w+c*a.x+d*a.y+f*a.z;0>g?(this.w=-a.w,this.x=-a.x,this.y=-a.y,this.z=-a.z,g=-g):this.copy(a);if(1<=g)return this.w=e,this.x=c,this.y=d,this.z=f,this;var h=Math.acos(g),j=Math.sqrt(1-g*g);if(0.001>Math.abs(j))return this.w=0.5*(e+this.w),this.x=0.5*(c+this.x),this.y=0.5*(d+this.y),this.z=0.5*(f+this.z),this;g=Math.sin((1-b)*h)/j;h=Math.sin(b*h)/j;this.w=e*g+this.w*h;this.x=
c*g+this.x*h;this.y=d*g+this.y*h;this.z=f*g+this.z*h;return this},clone:function(){return new THREE.Quaternion(this.x,this.y,this.z,this.w)}};
THREE.Quaternion.slerp=function(a,b,c,d){var f=a.w*b.w+a.x*b.x+a.y*b.y+a.z*b.z;0>f?(c.w=-b.w,c.x=-b.x,c.y=-b.y,c.z=-b.z,f=-f):c.copy(b);if(1<=Math.abs(f))return c.w=a.w,c.x=a.x,c.y=a.y,c.z=a.z,c;b=Math.acos(f);var e=Math.sqrt(1-f*f);if(0.001>Math.abs(e))return c.w=0.5*(a.w+c.w),c.x=0.5*(a.x+c.x),c.y=0.5*(a.y+c.y),c.z=0.5*(a.z+c.z),c;f=Math.sin((1-d)*b)/e;d=Math.sin(d*b)/e;c.w=a.w*f+c.w*d;c.x=a.x*f+c.x*d;c.y=a.y*f+c.y*d;c.z=a.z*f+c.z*d;return c};
THREE.Vertex=function(a){console.warn("THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead.");return a};THREE.Face3=function(a,b,c,d,f,e){this.a=a;this.b=b;this.c=c;this.normal=d instanceof THREE.Vector3?d:new THREE.Vector3;this.vertexNormals=d instanceof Array?d:[];this.color=f instanceof THREE.Color?f:new THREE.Color;this.vertexColors=f instanceof Array?f:[];this.vertexTangents=[];this.materialIndex=e;this.centroid=new THREE.Vector3};
THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var a=new THREE.Face3(this.a,this.b,this.c);a.normal.copy(this.normal);a.color.copy(this.color);a.centroid.copy(this.centroid);a.materialIndex=this.materialIndex;var b,c;b=0;for(c=this.vertexNormals.length;b<c;b++)a.vertexNormals[b]=this.vertexNormals[b].clone();b=0;for(c=this.vertexColors.length;b<c;b++)a.vertexColors[b]=this.vertexColors[b].clone();b=0;for(c=this.vertexTangents.length;b<c;b++)a.vertexTangents[b]=this.vertexTangents[b].clone();
return a}};THREE.Face4=function(a,b,c,d,f,e,g){this.a=a;this.b=b;this.c=c;this.d=d;this.normal=f instanceof THREE.Vector3?f:new THREE.Vector3;this.vertexNormals=f instanceof Array?f:[];this.color=e instanceof THREE.Color?e:new THREE.Color;this.vertexColors=e instanceof Array?e:[];this.vertexTangents=[];this.materialIndex=g;this.centroid=new THREE.Vector3};
THREE.Face4.prototype={constructor:THREE.Face4,clone:function(){var a=new THREE.Face4(this.a,this.b,this.c,this.d);a.normal.copy(this.normal);a.color.copy(this.color);a.centroid.copy(this.centroid);a.materialIndex=this.materialIndex;var b,c;b=0;for(c=this.vertexNormals.length;b<c;b++)a.vertexNormals[b]=this.vertexNormals[b].clone();b=0;for(c=this.vertexColors.length;b<c;b++)a.vertexColors[b]=this.vertexColors[b].clone();b=0;for(c=this.vertexTangents.length;b<c;b++)a.vertexTangents[b]=this.vertexTangents[b].clone();
return a}};THREE.UV=function(a,b){this.u=a||0;this.v=b||0};THREE.UV.prototype={constructor:THREE.UV,set:function(a,b){this.u=a;this.v=b;return this},copy:function(a){this.u=a.u;this.v=a.v;return this},lerpSelf:function(a,b){this.u+=(a.u-this.u)*b;this.v+=(a.v-this.v)*b;return this},clone:function(){return new THREE.UV(this.u,this.v)}};
THREE.Geometry=function(){this.id=THREE.GeometryCount++;this.name="";this.vertices=[];this.colors=[];this.materials=[];this.faces=[];this.faceUvs=[[]];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.boundingSphere=this.boundingBox=null;this.hasTangents=!1;this.dynamic=!0};
THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(a){var b=new THREE.Matrix4;b.extractRotation(a);for(var c=0,d=this.vertices.length;c<d;c++)a.multiplyVector3(this.vertices[c]);c=0;for(d=this.faces.length;c<d;c++){var f=this.faces[c];b.multiplyVector3(f.normal);for(var e=0,g=f.vertexNormals.length;e<g;e++)b.multiplyVector3(f.vertexNormals[e]);a.multiplyVector3(f.centroid)}},computeCentroids:function(){var a,b,c;a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c.centroid.set(0,
0,0),c instanceof THREE.Face3?(c.centroid.addSelf(this.vertices[c.a]),c.centroid.addSelf(this.vertices[c.b]),c.centroid.addSelf(this.vertices[c.c]),c.centroid.divideScalar(3)):c instanceof THREE.Face4&&(c.centroid.addSelf(this.vertices[c.a]),c.centroid.addSelf(this.vertices[c.b]),c.centroid.addSelf(this.vertices[c.c]),c.centroid.addSelf(this.vertices[c.d]),c.centroid.divideScalar(4))},computeFaceNormals:function(){var a,b,c,d,f,e,g=new THREE.Vector3,h=new THREE.Vector3;a=0;for(b=this.faces.length;a<
b;a++)c=this.faces[a],d=this.vertices[c.a],f=this.vertices[c.b],e=this.vertices[c.c],g.sub(e,f),h.sub(d,f),g.crossSelf(h),g.isZero()||g.normalize(),c.normal.copy(g)},computeVertexNormals:function(){var a,b,c,d;if(void 0===this.__tmpVertices){d=this.__tmpVertices=Array(this.vertices.length);a=0;for(b=this.vertices.length;a<b;a++)d[a]=new THREE.Vector3;a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c instanceof THREE.Face3?c.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]:
c instanceof THREE.Face4&&(c.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3])}else{d=this.__tmpVertices;a=0;for(b=this.vertices.length;a<b;a++)d[a].set(0,0,0)}a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c instanceof THREE.Face3?(d[c.a].addSelf(c.normal),d[c.b].addSelf(c.normal),d[c.c].addSelf(c.normal)):c instanceof THREE.Face4&&(d[c.a].addSelf(c.normal),d[c.b].addSelf(c.normal),d[c.c].addSelf(c.normal),d[c.d].addSelf(c.normal));a=0;for(b=this.vertices.length;a<
b;a++)d[a].normalize();a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c instanceof THREE.Face3?(c.vertexNormals[0].copy(d[c.a]),c.vertexNormals[1].copy(d[c.b]),c.vertexNormals[2].copy(d[c.c])):c instanceof THREE.Face4&&(c.vertexNormals[0].copy(d[c.a]),c.vertexNormals[1].copy(d[c.b]),c.vertexNormals[2].copy(d[c.c]),c.vertexNormals[3].copy(d[c.d]))},computeMorphNormals:function(){var a,b,c,d,f;c=0;for(d=this.faces.length;c<d;c++){f=this.faces[c];f.__originalFaceNormal?f.__originalFaceNormal.copy(f.normal):
f.__originalFaceNormal=f.normal.clone();f.__originalVertexNormals||(f.__originalVertexNormals=[]);a=0;for(b=f.vertexNormals.length;a<b;a++)f.__originalVertexNormals[a]?f.__originalVertexNormals[a].copy(f.vertexNormals[a]):f.__originalVertexNormals[a]=f.vertexNormals[a].clone()}var e=new THREE.Geometry;e.faces=this.faces;a=0;for(b=this.morphTargets.length;a<b;a++){if(!this.morphNormals[a]){this.morphNormals[a]={};this.morphNormals[a].faceNormals=[];this.morphNormals[a].vertexNormals=[];var g=this.morphNormals[a].faceNormals,
h=this.morphNormals[a].vertexNormals,j,k;c=0;for(d=this.faces.length;c<d;c++)f=this.faces[c],j=new THREE.Vector3,k=f instanceof THREE.Face3?{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3}:{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3,d:new THREE.Vector3},g.push(j),h.push(k)}g=this.morphNormals[a];e.vertices=this.morphTargets[a].vertices;e.computeFaceNormals();e.computeVertexNormals();c=0;for(d=this.faces.length;c<d;c++)f=this.faces[c],j=g.faceNormals[c],k=g.vertexNormals[c],
j.copy(f.normal),f instanceof THREE.Face3?(k.a.copy(f.vertexNormals[0]),k.b.copy(f.vertexNormals[1]),k.c.copy(f.vertexNormals[2])):(k.a.copy(f.vertexNormals[0]),k.b.copy(f.vertexNormals[1]),k.c.copy(f.vertexNormals[2]),k.d.copy(f.vertexNormals[3]))}c=0;for(d=this.faces.length;c<d;c++)f=this.faces[c],f.normal=f.__originalFaceNormal,f.vertexNormals=f.__originalVertexNormals},computeTangents:function(){function a(a,b,c,d,f,e,E){h=a.vertices[b];j=a.vertices[c];k=a.vertices[d];m=g[f];p=g[e];n=g[E];s=j.x-
h.x;r=k.x-h.x;q=j.y-h.y;t=k.y-h.y;v=j.z-h.z;w=k.z-h.z;y=p.u-m.u;u=n.u-m.u;D=p.v-m.v;x=n.v-m.v;C=1/(y*x-u*D);H.set((x*s-D*r)*C,(x*q-D*t)*C,(x*v-D*w)*C);I.set((y*r-u*s)*C,(y*t-u*q)*C,(y*w-u*v)*C);A[b].addSelf(H);A[c].addSelf(H);A[d].addSelf(H);J[b].addSelf(I);J[c].addSelf(I);J[d].addSelf(I)}var b,c,d,f,e,g,h,j,k,m,p,n,s,r,q,t,v,w,y,u,D,x,C,G,A=[],J=[],H=new THREE.Vector3,I=new THREE.Vector3,E=new THREE.Vector3,Q=new THREE.Vector3,M=new THREE.Vector3;b=0;for(c=this.vertices.length;b<c;b++)A[b]=new THREE.Vector3,
J[b]=new THREE.Vector3;b=0;for(c=this.faces.length;b<c;b++)e=this.faces[b],g=this.faceVertexUvs[0][b],e instanceof THREE.Face3?a(this,e.a,e.b,e.c,0,1,2):e instanceof THREE.Face4&&(a(this,e.a,e.b,e.d,0,1,3),a(this,e.b,e.c,e.d,1,2,3));var K=["a","b","c","d"];b=0;for(c=this.faces.length;b<c;b++){e=this.faces[b];for(d=0;d<e.vertexNormals.length;d++)M.copy(e.vertexNormals[d]),f=e[K[d]],G=A[f],E.copy(G),E.subSelf(M.multiplyScalar(M.dot(G))).normalize(),Q.cross(e.vertexNormals[d],G),f=Q.dot(J[f]),f=0>f?
-1:1,e.vertexTangents[d]=new THREE.Vector4(E.x,E.y,E.z,f)}this.hasTangents=!0},computeBoundingBox:function(){this.boundingBox||(this.boundingBox={min:new THREE.Vector3,max:new THREE.Vector3});if(0<this.vertices.length){var a;a=this.vertices[0];this.boundingBox.min.copy(a);this.boundingBox.max.copy(a);for(var b=this.boundingBox.min,c=this.boundingBox.max,d=1,f=this.vertices.length;d<f;d++)a=this.vertices[d],a.x<b.x?b.x=a.x:a.x>c.x&&(c.x=a.x),a.y<b.y?b.y=a.y:a.y>c.y&&(c.y=a.y),a.z<b.z?b.z=a.z:a.z>c.z&&
(c.z=a.z)}else this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)},computeBoundingSphere:function(){var a=0;null===this.boundingSphere&&(this.boundingSphere={radius:0});for(var b=0,c=this.vertices.length;b<c;b++){var d=this.vertices[b].lengthSq();d>a&&(a=d)}this.boundingSphere.radius=Math.sqrt(a)},mergeVertices:function(){var a={},b=[],c=[],d,f=Math.pow(10,4),e,g,h,j;e=0;for(g=this.vertices.length;e<g;e++)d=this.vertices[e],d=[Math.round(d.x*f),Math.round(d.y*f),Math.round(d.z*f)].join("_"),
void 0===a[d]?(a[d]=e,b.push(this.vertices[e]),c[e]=b.length-1):c[e]=c[a[d]];e=0;for(g=this.faces.length;e<g;e++)if(a=this.faces[e],a instanceof THREE.Face3)a.a=c[a.a],a.b=c[a.b],a.c=c[a.c];else if(a instanceof THREE.Face4){a.a=c[a.a];a.b=c[a.b];a.c=c[a.c];a.d=c[a.d];d=[a.a,a.b,a.c,a.d];for(f=3;0<f;f--)if(d.indexOf(a["abcd"[f]])!==f){d.splice(f,1);this.faces[e]=new THREE.Face3(d[0],d[1],d[2],a.normal,a.color,a.materialIndex);d=0;for(h=this.faceVertexUvs.length;d<h;d++)(j=this.faceVertexUvs[d][e])&&
j.splice(f,1);this.faces[e].vertexColors=a.vertexColors;break}}c=this.vertices.length-b.length;this.vertices=b;return c},clone:function(){}};THREE.GeometryCount=0;THREE.BufferGeometry=function(){this.id=THREE.GeometryCount++;this.attributes={};this.dynamic=!1;this.boundingSphere=this.boundingBox=null;this.hasTangents=!1;this.morphTargets=[]};
THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,applyMatrix:function(a){var b,c;this.attributes.position&&(b=this.attributes.position.array);this.attributes.normal&&(c=this.attributes.normal.array);void 0!==b&&(a.multiplyVector3Array(b),this.verticesNeedUpdate=!0);void 0!==c&&(b=new THREE.Matrix4,b.extractRotation(a),b.multiplyVector3Array(c),this.normalsNeedUpdate=!0)},computeBoundingBox:function(){this.boundingBox||(this.boundingBox={min:new THREE.Vector3(Infinity,Infinity,Infinity),
max:new THREE.Vector3(-Infinity,-Infinity,-Infinity)});var a=this.attributes.position.array;if(a)for(var b=this.boundingBox,c,d,f,e=0,g=a.length;e<g;e+=3)c=a[e],d=a[e+1],f=a[e+2],c<b.min.x?b.min.x=c:c>b.max.x&&(b.max.x=c),d<b.min.y?b.min.y=d:d>b.max.y&&(b.max.y=d),f<b.min.z?b.min.z=f:f>b.max.z&&(b.max.z=f);if(void 0===a||0===a.length)this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)},computeBoundingSphere:function(){this.boundingSphere||(this.boundingSphere={radius:0});var a=this.attributes.position.array;
if(a){for(var b,c=0,d,f,e=0,g=a.length;e<g;e+=3)b=a[e],d=a[e+1],f=a[e+2],b=b*b+d*d+f*f,b>c&&(c=b);this.boundingSphere.radius=Math.sqrt(c)}},computeVertexNormals:function(){if(this.attributes.position&&this.attributes.index){var a,b,c,d;a=this.attributes.position.array.length;if(void 0===this.attributes.normal)this.attributes.normal={itemSize:3,array:new Float32Array(a),numItems:a};else{a=0;for(b=this.attributes.normal.array.length;a<b;a++)this.attributes.normal.array[a]=0}var f=this.offsets,e=this.attributes.index.array,
g=this.attributes.position.array,h=this.attributes.normal.array,j,k,m,p,n,s,r=new THREE.Vector3,q=new THREE.Vector3,t=new THREE.Vector3,v=new THREE.Vector3,w=new THREE.Vector3;c=0;for(d=f.length;c<d;++c){b=f[c].start;j=f[c].count;var y=f[c].index;a=b;for(b+=j;a<b;a+=3)j=y+e[a],k=y+e[a+1],m=y+e[a+2],p=g[3*j],n=g[3*j+1],s=g[3*j+2],r.set(p,n,s),p=g[3*k],n=g[3*k+1],s=g[3*k+2],q.set(p,n,s),p=g[3*m],n=g[3*m+1],s=g[3*m+2],t.set(p,n,s),v.sub(t,q),w.sub(r,q),v.crossSelf(w),h[3*j]+=v.x,h[3*j+1]+=v.y,h[3*j+
2]+=v.z,h[3*k]+=v.x,h[3*k+1]+=v.y,h[3*k+2]+=v.z,h[3*m]+=v.x,h[3*m+1]+=v.y,h[3*m+2]+=v.z}a=0;for(b=h.length;a<b;a+=3)p=h[a],n=h[a+1],s=h[a+2],c=1/Math.sqrt(p*p+n*n+s*s),h[a]*=c,h[a+1]*=c,h[a+2]*=c;this.normalsNeedUpdate=!0}},computeTangents:function(){function a(a){$.x=d[3*a];$.y=d[3*a+1];$.z=d[3*a+2];ba.copy($);da=j[a];N.copy(da);N.subSelf($.multiplyScalar($.dot(da))).normalize();X.cross(ba,da);S=X.dot(k[a]);O=0>S?-1:1;h[4*a]=N.x;h[4*a+1]=N.y;h[4*a+2]=N.z;h[4*a+3]=O}if(void 0===this.attributes.index||
void 0===this.attributes.position||void 0===this.attributes.normal||void 0===this.attributes.uv)console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");else{var b=this.attributes.index.array,c=this.attributes.position.array,d=this.attributes.normal.array,f=this.attributes.uv.array,e=c.length/3;if(void 0===this.attributes.tangent){var g=4*e;this.attributes.tangent={itemSize:4,array:new Float32Array(g),numItems:g}}for(var h=this.attributes.tangent.array,
j=[],k=[],g=0;g<e;g++)j[g]=new THREE.Vector3,k[g]=new THREE.Vector3;var m,p,n,s,r,q,t,v,w,y,u,D,x,C,G,e=new THREE.Vector3,g=new THREE.Vector3,A,J,H,I,E,Q,M,K=this.offsets;H=0;for(I=K.length;H<I;++H){J=K[H].start;E=K[H].count;var L=K[H].index;A=J;for(J+=E;A<J;A+=3)E=L+b[A],Q=L+b[A+1],M=L+b[A+2],m=c[3*E],p=c[3*E+1],n=c[3*E+2],s=c[3*Q],r=c[3*Q+1],q=c[3*Q+2],t=c[3*M],v=c[3*M+1],w=c[3*M+2],y=f[2*E],u=f[2*E+1],D=f[2*Q],x=f[2*Q+1],C=f[2*M],G=f[2*M+1],s-=m,m=t-m,r-=p,p=v-p,q-=n,n=w-n,D-=y,y=C-y,x-=u,u=G-
u,G=1/(D*u-y*x),e.set((u*s-x*m)*G,(u*r-x*p)*G,(u*q-x*n)*G),g.set((D*m-y*s)*G,(D*p-y*r)*G,(D*n-y*q)*G),j[E].addSelf(e),j[Q].addSelf(e),j[M].addSelf(e),k[E].addSelf(g),k[Q].addSelf(g),k[M].addSelf(g)}var N=new THREE.Vector3,X=new THREE.Vector3,$=new THREE.Vector3,ba=new THREE.Vector3,O,da,S;H=0;for(I=K.length;H<I;++H){J=K[H].start;E=K[H].count;L=K[H].index;A=J;for(J+=E;A<J;A+=3)E=L+b[A],Q=L+b[A+1],M=L+b[A+2],a(E),a(Q),a(M)}this.tangentsNeedUpdate=this.hasTangents=!0}}};
THREE.Spline=function(a){function b(a,b,c,d,f,e,g){a=0.5*(c-a);d=0.5*(d-b);return(2*(b-c)+a+d)*g+(-3*(b-c)-2*a-d)*e+a*f+b}this.points=a;var c=[],d={x:0,y:0,z:0},f,e,g,h,j,k,m,p,n;this.initFromArray=function(a){this.points=[];for(var b=0;b<a.length;b++)this.points[b]={x:a[b][0],y:a[b][1],z:a[b][2]}};this.getPoint=function(a){f=(this.points.length-1)*a;e=Math.floor(f);g=f-e;c[0]=0===e?e:e-1;c[1]=e;c[2]=e>this.points.length-2?this.points.length-1:e+1;c[3]=e>this.points.length-3?this.points.length-1:
e+2;k=this.points[c[0]];m=this.points[c[1]];p=this.points[c[2]];n=this.points[c[3]];h=g*g;j=g*h;d.x=b(k.x,m.x,p.x,n.x,g,h,j);d.y=b(k.y,m.y,p.y,n.y,g,h,j);d.z=b(k.z,m.z,p.z,n.z,g,h,j);return d};this.getControlPointsArray=function(){var a,b,c=this.points.length,d=[];for(a=0;a<c;a++)b=this.points[a],d[a]=[b.x,b.y,b.z];return d};this.getLength=function(a){var b,c,d,f=0,e=new THREE.Vector3,g=new THREE.Vector3,h=[],j=0;h[0]=0;a||(a=100);c=this.points.length*a;e.copy(this.points[0]);for(a=1;a<c;a++)b=a/
c,d=this.getPoint(b),g.copy(d),j+=g.distanceTo(e),e.copy(d),b*=this.points.length-1,b=Math.floor(b),b!=f&&(h[b]=j,f=b);h[h.length]=j;return{chunks:h,total:j}};this.reparametrizeByArcLength=function(a){var b,c,d,f,e,g,h=[],j=new THREE.Vector3,m=this.getLength();h.push(j.copy(this.points[0]).clone());for(b=1;b<this.points.length;b++){c=m.chunks[b]-m.chunks[b-1];g=Math.ceil(a*c/m.total);f=(b-1)/(this.points.length-1);e=b/(this.points.length-1);for(c=1;c<g-1;c++)d=f+c*(1/g)*(e-f),d=this.getPoint(d),h.push(j.copy(d).clone());
h.push(j.copy(this.points[b]).clone())}this.points=h}};THREE.Camera=function(){THREE.Object3D.call(this);this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=new THREE.Matrix4;this.projectionMatrixInverse=new THREE.Matrix4};THREE.Camera.prototype=Object.create(THREE.Object3D.prototype);THREE.Camera.prototype.lookAt=function(a){this.matrix.lookAt(this.position,a,this.up);!0===this.rotationAutoUpdate&&this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder)};
THREE.OrthographicCamera=function(a,b,c,d,f,e){THREE.Camera.call(this);this.left=a;this.right=b;this.top=c;this.bottom=d;this.near=void 0!==f?f:0.1;this.far=void 0!==e?e:2E3;this.updateProjectionMatrix()};THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype);THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)};
THREE.PerspectiveCamera=function(a,b,c,d){THREE.Camera.call(this);this.fov=void 0!==a?a:50;this.aspect=void 0!==b?b:1;this.near=void 0!==c?c:0.1;this.far=void 0!==d?d:2E3;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype);THREE.PerspectiveCamera.prototype.setLens=function(a,b){void 0===b&&(b=24);this.fov=2*Math.atan(b/(2*a))*(180/Math.PI);this.updateProjectionMatrix()};
THREE.PerspectiveCamera.prototype.setViewOffset=function(a,b,c,d,f,e){this.fullWidth=a;this.fullHeight=b;this.x=c;this.y=d;this.width=f;this.height=e;this.updateProjectionMatrix()};
THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var a=this.fullWidth/this.fullHeight,b=Math.tan(this.fov*Math.PI/360)*this.near,c=-b,d=a*c,a=Math.abs(a*b-d),c=Math.abs(b-c);this.projectionMatrix.makeFrustum(d+this.x*a/this.fullWidth,d+(this.x+this.width)*a/this.fullWidth,b-(this.y+this.height)*c/this.fullHeight,b-this.y*c/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)};
THREE.Light=function(a){THREE.Object3D.call(this);this.color=new THREE.Color(a)};THREE.Light.prototype=Object.create(THREE.Object3D.prototype);THREE.AmbientLight=function(a){THREE.Light.call(this,a)};THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype);
THREE.DirectionalLight=function(a,b,c){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraLeft=-500;this.shadowCameraTop=this.shadowCameraRight=500;this.shadowCameraBottom=-500;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowCascade=
!1;this.shadowCascadeOffset=new THREE.Vector3(0,0,-1E3);this.shadowCascadeCount=2;this.shadowCascadeBias=[0,0,0];this.shadowCascadeWidth=[512,512,512];this.shadowCascadeHeight=[512,512,512];this.shadowCascadeNearZ=[-1,0.99,0.998];this.shadowCascadeFarZ=[0.99,0.998,1];this.shadowCascadeArray=[];this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null};THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype);
THREE.HemisphereLight=function(a,b,c){THREE.Light.call(this,a);this.groundColor=new THREE.Color(b);this.position=new THREE.Vector3(0,100,0);this.intensity=void 0!==c?c:1};THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype);THREE.PointLight=function(a,b,c){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,0,0);this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0};THREE.PointLight.prototype=Object.create(THREE.Light.prototype);
THREE.SpotLight=function(a,b,c,d,f){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0;this.angle=void 0!==d?d:Math.PI/2;this.exponent=void 0!==f?f:10;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraFov=50;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowMatrix=this.shadowCamera=
this.shadowMapSize=this.shadowMap=null};THREE.SpotLight.prototype=Object.create(THREE.Light.prototype);THREE.Loader=function(a){this.statusDomElement=(this.showStatus=a)?THREE.Loader.prototype.addStatusElement():null;this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}};
THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:"anonymous",addStatusElement:function(){var a=document.createElement("div");a.style.position="absolute";a.style.right="0px";a.style.top="0px";a.style.fontSize="0.8em";a.style.textAlign="left";a.style.background="rgba(0,0,0,0.25)";a.style.color="#fff";a.style.width="120px";a.style.padding="0.5em 0.5em 0.5em 0.5em";a.style.zIndex=1E3;a.innerHTML="Loading ...";return a},updateProgress:function(a){var b="Loaded ",b=a.total?b+((100*a.loaded/
a.total).toFixed(0)+"%"):b+((a.loaded/1E3).toFixed(2)+" KB");this.statusDomElement.innerHTML=b},extractUrlBase:function(a){a=a.split("/");a.pop();return(1>a.length?".":a.join("/"))+"/"},initMaterials:function(a,b,c){a.materials=[];for(var d=0;d<b.length;++d)a.materials[d]=THREE.Loader.prototype.createMaterial(b[d],c)},hasNormals:function(a){var b,c,d=a.materials.length;for(c=0;c<d;c++)if(b=a.materials[c],b instanceof THREE.ShaderMaterial)return!0;return!1},createMaterial:function(a,b){function c(a){a=
Math.log(a)/Math.LN2;return Math.floor(a)==a}function d(a){a=Math.log(a)/Math.LN2;return Math.pow(2,Math.round(a))}function f(a,f,e,h,j,k,t){var v=e.toLowerCase().endsWith(".dds"),w=b+"/"+e;if(v){var y=THREE.ImageUtils.loadCompressedTexture(w);a[f]=y}else y=document.createElement("canvas"),a[f]=new THREE.Texture(y);a[f].sourceFile=e;h&&(a[f].repeat.set(h[0],h[1]),1!==h[0]&&(a[f].wrapS=THREE.RepeatWrapping),1!==h[1]&&(a[f].wrapT=THREE.RepeatWrapping));j&&a[f].offset.set(j[0],j[1]);k&&(e={repeat:THREE.RepeatWrapping,
mirror:THREE.MirroredRepeatWrapping},void 0!==e[k[0]]&&(a[f].wrapS=e[k[0]]),void 0!==e[k[1]]&&(a[f].wrapT=e[k[1]]));t&&(a[f].anisotropy=t);if(!v){var u=a[f];a=new Image;a.onload=function(){if(!c(this.width)||!c(this.height)){var a=d(this.width),b=d(this.height);u.image.width=a;u.image.height=b;u.image.getContext("2d").drawImage(this,0,0,a,b)}else u.image=this;u.needsUpdate=!0};a.crossOrigin=g.crossOrigin;a.src=w}}function e(a){return(255*a[0]<<16)+(255*a[1]<<8)+255*a[2]}var g=this,h="MeshLambertMaterial",
j={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(a.shading){var k=a.shading.toLowerCase();"phong"===k?h="MeshPhongMaterial":"basic"===k&&(h="MeshBasicMaterial")}void 0!==a.blending&&void 0!==THREE[a.blending]&&(j.blending=THREE[a.blending]);if(void 0!==a.transparent||1>a.opacity)j.transparent=a.transparent;void 0!==a.depthTest&&(j.depthTest=a.depthTest);void 0!==a.depthWrite&&(j.depthWrite=a.depthWrite);void 0!==a.visible&&(j.visible=a.visible);void 0!==
a.flipSided&&(j.side=THREE.BackSide);void 0!==a.doubleSided&&(j.side=THREE.DoubleSide);void 0!==a.wireframe&&(j.wireframe=a.wireframe);void 0!==a.vertexColors&&("face"===a.vertexColors?j.vertexColors=THREE.FaceColors:a.vertexColors&&(j.vertexColors=THREE.VertexColors));a.colorDiffuse?j.color=e(a.colorDiffuse):a.DbgColor&&(j.color=a.DbgColor);a.colorSpecular&&(j.specular=e(a.colorSpecular));a.colorAmbient&&(j.ambient=e(a.colorAmbient));a.transparency&&(j.opacity=a.transparency);a.specularCoef&&(j.shininess=
a.specularCoef);a.mapDiffuse&&b&&f(j,"map",a.mapDiffuse,a.mapDiffuseRepeat,a.mapDiffuseOffset,a.mapDiffuseWrap,a.mapDiffuseAnisotropy);a.mapLight&&b&&f(j,"lightMap",a.mapLight,a.mapLightRepeat,a.mapLightOffset,a.mapLightWrap,a.mapLightAnisotropy);a.mapBump&&b&&f(j,"bumpMap",a.mapBump,a.mapBumpRepeat,a.mapBumpOffset,a.mapBumpWrap,a.mapBumpAnisotropy);a.mapNormal&&b&&f(j,"normalMap",a.mapNormal,a.mapNormalRepeat,a.mapNormalOffset,a.mapNormalWrap,a.mapNormalAnisotropy);a.mapSpecular&&b&&f(j,"specularMap",
a.mapSpecular,a.mapSpecularRepeat,a.mapSpecularOffset,a.mapSpecularWrap,a.mapSpecularAnisotropy);a.mapBumpScale&&(j.bumpScale=a.mapBumpScale);a.mapNormal?(h=THREE.ShaderUtils.lib.normal,k=THREE.UniformsUtils.clone(h.uniforms),k.tNormal.value=j.normalMap,a.mapNormalFactor&&k.uNormalScale.value.set(a.mapNormalFactor,a.mapNormalFactor),j.map&&(k.tDiffuse.value=j.map,k.enableDiffuse.value=!0),j.specularMap&&(k.tSpecular.value=j.specularMap,k.enableSpecular.value=!0),j.lightMap&&(k.tAO.value=j.lightMap,
k.enableAO.value=!0),k.uDiffuseColor.value.setHex(j.color),k.uSpecularColor.value.setHex(j.specular),k.uAmbientColor.value.setHex(j.ambient),k.uShininess.value=j.shininess,void 0!==j.opacity&&(k.uOpacity.value=j.opacity),j=new THREE.ShaderMaterial({fragmentShader:h.fragmentShader,vertexShader:h.vertexShader,uniforms:k,lights:!0,fog:!0})):j=new THREE[h](j);void 0!==a.DbgName&&(j.name=a.DbgName);return j}};THREE.BinaryLoader=function(a){THREE.Loader.call(this,a)};THREE.BinaryLoader.prototype=Object.create(THREE.Loader.prototype);
THREE.BinaryLoader.prototype.load=function(a,b,c,d){c=c?c:this.extractUrlBase(a);d=d?d:this.extractUrlBase(a);var f=this.showProgress?THREE.Loader.prototype.updateProgress:null;this.onLoadStart();this.loadAjaxJSON(this,a,b,c,d,f)};
THREE.BinaryLoader.prototype.loadAjaxJSON=function(a,b,c,d,f,e){var g=new XMLHttpRequest;g.onreadystatechange=function(){if(4==g.readyState)if(200==g.status||0==g.status){var h=JSON.parse(g.responseText);a.loadAjaxBuffers(h,c,f,d,e)}else console.error("THREE.BinaryLoader: Couldn't load ["+b+"] ["+g.status+"]")};g.open("GET",b,!0);g.send(null)};
THREE.BinaryLoader.prototype.loadAjaxBuffers=function(a,b,c,d,f){var e=new XMLHttpRequest,g=c+"/"+a.buffers,h=0;e.onreadystatechange=function(){if(4==e.readyState)if(200==e.status||0==e.status){var c=e.response;void 0===c&&(c=(new Uint8Array(e.responseBody)).buffer);THREE.BinaryLoader.prototype.createBinModel(c,b,d,a.materials)}else console.error("THREE.BinaryLoader: Couldn't load ["+g+"] ["+e.status+"]");else 3==e.readyState?f&&(0==h&&(h=e.getResponseHeader("Content-Length")),f({total:h,loaded:e.responseText.length})):
2==e.readyState&&(h=e.getResponseHeader("Content-Length"))};e.open("GET",g,!0);e.responseType="arraybuffer";e.send(null)};
THREE.BinaryLoader.prototype.createBinModel=function(a,b,c,d){var f=function(b){function c(a){return a%4?4-a%4:0}function f(a,b){return(new Uint8Array(a,b,1))[0]}function j(a,b){return(new Uint32Array(a,b,1))[0]}function k(b,c){var d,f,e,g,h,j,k,m,p=new Uint32Array(a,c,3*b);for(d=0;d<b;d++){f=p[3*d];e=p[3*d+1];g=p[3*d+2];h=L[2*f];f=L[2*f+1];j=L[2*e];k=L[2*e+1];e=L[2*g];m=L[2*g+1];g=Q.faceVertexUvs[0];var n=[];n.push(new THREE.UV(h,f));n.push(new THREE.UV(j,k));n.push(new THREE.UV(e,m));g.push(n)}}
function m(b,c){var d,f,e,g,h,j,k,m,p,n,q=new Uint32Array(a,c,4*b);for(d=0;d<b;d++){f=q[4*d];e=q[4*d+1];g=q[4*d+2];h=q[4*d+3];j=L[2*f];f=L[2*f+1];k=L[2*e];p=L[2*e+1];m=L[2*g];n=L[2*g+1];g=L[2*h];e=L[2*h+1];h=Q.faceVertexUvs[0];var r=[];r.push(new THREE.UV(j,f));r.push(new THREE.UV(k,p));r.push(new THREE.UV(m,n));r.push(new THREE.UV(g,e));h.push(r)}}function p(b,c,d){var f,e,g,h;c=new Uint32Array(a,c,3*b);var j=new Uint16Array(a,d,b);for(d=0;d<b;d++)f=c[3*d],e=c[3*d+1],g=c[3*d+2],h=j[d],Q.faces.push(new THREE.Face3(f,
e,g,null,null,h))}function n(b,c,d){var f,e,g,h,j;c=new Uint32Array(a,c,4*b);var k=new Uint16Array(a,d,b);for(d=0;d<b;d++)f=c[4*d],e=c[4*d+1],g=c[4*d+2],h=c[4*d+3],j=k[d],Q.faces.push(new THREE.Face4(f,e,g,h,null,null,j))}function s(b,c,d,f){var e,g,h,j,k,m,p;c=new Uint32Array(a,c,3*b);d=new Uint32Array(a,d,3*b);var n=new Uint16Array(a,f,b);for(f=0;f<b;f++){e=c[3*f];g=c[3*f+1];h=c[3*f+2];k=d[3*f];m=d[3*f+1];p=d[3*f+2];j=n[f];var q=K[3*m],r=K[3*m+1];m=K[3*m+2];var s=K[3*p],t=K[3*p+1];p=K[3*p+2];Q.faces.push(new THREE.Face3(e,
g,h,[new THREE.Vector3(K[3*k],K[3*k+1],K[3*k+2]),new THREE.Vector3(q,r,m),new THREE.Vector3(s,t,p)],null,j))}}function r(b,c,d,f){var e,g,h,j,k,m,p,n,q;c=new Uint32Array(a,c,4*b);d=new Uint32Array(a,d,4*b);var r=new Uint16Array(a,f,b);for(f=0;f<b;f++){e=c[4*f];g=c[4*f+1];h=c[4*f+2];j=c[4*f+3];m=d[4*f];p=d[4*f+1];n=d[4*f+2];q=d[4*f+3];k=r[f];var s=K[3*p],t=K[3*p+1];p=K[3*p+2];var u=K[3*n],v=K[3*n+1];n=K[3*n+2];var x=K[3*q],w=K[3*q+1];q=K[3*q+2];Q.faces.push(new THREE.Face4(e,g,h,j,[new THREE.Vector3(K[3*
m],K[3*m+1],K[3*m+2]),new THREE.Vector3(s,t,p),new THREE.Vector3(u,v,n),new THREE.Vector3(x,w,q)],null,k))}}var q,t,v,w,y,u,D,x,C,G,A,J,H,I,E,Q=this,M=0,K=[],L=[],N,X,$;THREE.Geometry.call(this);THREE.Loader.prototype.initMaterials(Q,d,b);E=a;X=M;b=new Uint8Array(E,X,12);G="";for(H=0;12>H;H++)G+=String.fromCharCode(b[X+H]);q=f(E,X+12);f(E,X+13);f(E,X+14);f(E,X+15);t=f(E,X+16);v=f(E,X+17);w=f(E,X+18);y=f(E,X+19);u=j(E,X+20);D=j(E,X+20+4);x=j(E,X+20+8);C=j(E,X+20+12);G=j(E,X+20+16);A=j(E,X+20+20);J=
j(E,X+20+24);H=j(E,X+20+28);b=j(E,X+20+32);I=j(E,X+20+36);E=j(E,X+20+40);M+=q;X=3*t+y;$=4*t+y;N=C*X;q=G*(X+3*v);t=A*(X+3*w);y=J*(X+3*v+3*w);X=H*$;v=b*($+4*v);w=I*($+4*w);$=M;var M=new Float32Array(a,M,3*u),ba,O,da,S;for(ba=0;ba<u;ba++)O=M[3*ba],da=M[3*ba+1],S=M[3*ba+2],Q.vertices.push(new THREE.Vector3(O,da,S));u=M=$+3*u*Float32Array.BYTES_PER_ELEMENT;if(D){M=new Int8Array(a,M,3*D);for($=0;$<D;$++)ba=M[3*$],O=M[3*$+1],da=M[3*$+2],K.push(ba/127,O/127,da/127)}M=u+3*D*Int8Array.BYTES_PER_ELEMENT;D=M+=
c(3*D);if(x){M=new Float32Array(a,M,2*x);for(u=0;u<x;u++)$=M[2*u],ba=M[2*u+1],L.push($,ba)}x=M=D+2*x*Float32Array.BYTES_PER_ELEMENT;N=x+N+c(2*C);D=N+q+c(2*G);q=D+t+c(2*A);t=q+y+c(2*J);X=t+X+c(2*H);y=X+v+c(2*b);v=y+w+c(2*I);A&&(w=D+3*A*Uint32Array.BYTES_PER_ELEMENT,p(A,D,w+3*A*Uint32Array.BYTES_PER_ELEMENT),k(A,w));J&&(A=q+3*J*Uint32Array.BYTES_PER_ELEMENT,w=A+3*J*Uint32Array.BYTES_PER_ELEMENT,s(J,q,A,w+3*J*Uint32Array.BYTES_PER_ELEMENT),k(J,w));I&&(J=y+4*I*Uint32Array.BYTES_PER_ELEMENT,n(I,y,J+4*
I*Uint32Array.BYTES_PER_ELEMENT),m(I,J));E&&(I=v+4*E*Uint32Array.BYTES_PER_ELEMENT,J=I+4*E*Uint32Array.BYTES_PER_ELEMENT,r(E,v,I,J+4*E*Uint32Array.BYTES_PER_ELEMENT),m(E,J));C&&p(C,x,x+3*C*Uint32Array.BYTES_PER_ELEMENT);G&&(C=N+3*G*Uint32Array.BYTES_PER_ELEMENT,s(G,N,C,C+3*G*Uint32Array.BYTES_PER_ELEMENT));H&&n(H,t,t+4*H*Uint32Array.BYTES_PER_ELEMENT);b&&(G=X+4*b*Uint32Array.BYTES_PER_ELEMENT,r(b,X,G,G+4*b*Uint32Array.BYTES_PER_ELEMENT));this.computeCentroids();this.computeFaceNormals();THREE.Loader.prototype.hasNormals(this)&&
this.computeTangents()};f.prototype=Object.create(THREE.Geometry.prototype);b(new f(c))};THREE.ImageLoader=function(){THREE.EventTarget.call(this);this.crossOrigin=null};
THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(a,b){var c=this;void 0===b&&(b=new Image);b.addEventListener("load",function(){c.dispatchEvent({type:"load",content:b})},!1);b.addEventListener("error",function(){c.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]"})},!1);c.crossOrigin&&(b.crossOrigin=c.crossOrigin);b.src=a}};THREE.JSONLoader=function(a){THREE.Loader.call(this,a)};THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype);
THREE.JSONLoader.prototype.load=function(a,b,c){c=c?c:this.extractUrlBase(a);this.onLoadStart();this.loadAjaxJSON(this,a,b,c)};
THREE.JSONLoader.prototype.loadAjaxJSON=function(a,b,c,d,f){var e=new XMLHttpRequest,g=0;e.onreadystatechange=function(){if(e.readyState===e.DONE)if(200===e.status||0===e.status){if(e.responseText){var h=JSON.parse(e.responseText);a.createModel(h,c,d)}else console.warn("THREE.JSONLoader: ["+b+"] seems to be unreachable or file there is empty");a.onLoadComplete()}else console.error("THREE.JSONLoader: Couldn't load ["+b+"] ["+e.status+"]");else e.readyState===e.LOADING?f&&(0===g&&(g=e.getResponseHeader("Content-Length")),
f({total:g,loaded:e.responseText.length})):e.readyState===e.HEADERS_RECEIVED&&(g=e.getResponseHeader("Content-Length"))};e.open("GET",b,!0);e.send(null)};
THREE.JSONLoader.prototype.createModel=function(a,b,c){var d=new THREE.Geometry,f=void 0!==a.scale?1/a.scale:1;this.initMaterials(d,a.materials,c);var e,g,h,j,k,m,p,n,s,r,q,t,v,w,y=a.faces;s=a.vertices;var u=a.normals,D=a.colors,x=0;for(e=0;e<a.uvs.length;e++)a.uvs[e].length&&x++;for(e=0;e<x;e++)d.faceUvs[e]=[],d.faceVertexUvs[e]=[];c=0;for(j=s.length;c<j;)k=new THREE.Vector3,k.x=s[c++]*f,k.y=s[c++]*f,k.z=s[c++]*f,d.vertices.push(k);c=0;for(j=y.length;c<j;){s=y[c++];k=s&1;h=s&2;e=s&4;g=s&8;p=s&16;
m=s&32;r=s&64;s&=128;k?(q=new THREE.Face4,q.a=y[c++],q.b=y[c++],q.c=y[c++],q.d=y[c++],k=4):(q=new THREE.Face3,q.a=y[c++],q.b=y[c++],q.c=y[c++],k=3);h&&(h=y[c++],q.materialIndex=h);h=d.faces.length;if(e)for(e=0;e<x;e++)t=a.uvs[e],n=y[c++],w=t[2*n],n=t[2*n+1],d.faceUvs[e][h]=new THREE.UV(w,n);if(g)for(e=0;e<x;e++){t=a.uvs[e];v=[];for(g=0;g<k;g++)n=y[c++],w=t[2*n],n=t[2*n+1],v[g]=new THREE.UV(w,n);d.faceVertexUvs[e][h]=v}p&&(p=3*y[c++],g=new THREE.Vector3,g.x=u[p++],g.y=u[p++],g.z=u[p],q.normal=g);if(m)for(e=
0;e<k;e++)p=3*y[c++],g=new THREE.Vector3,g.x=u[p++],g.y=u[p++],g.z=u[p],q.vertexNormals.push(g);r&&(m=y[c++],m=new THREE.Color(D[m]),q.color=m);if(s)for(e=0;e<k;e++)m=y[c++],m=new THREE.Color(D[m]),q.vertexColors.push(m);d.faces.push(q)}if(a.skinWeights){c=0;for(j=a.skinWeights.length;c<j;c+=2)y=a.skinWeights[c],u=a.skinWeights[c+1],d.skinWeights.push(new THREE.Vector4(y,u,0,0))}if(a.skinIndices){c=0;for(j=a.skinIndices.length;c<j;c+=2)y=a.skinIndices[c],u=a.skinIndices[c+1],d.skinIndices.push(new THREE.Vector4(y,
u,0,0))}d.bones=a.bones;d.animation=a.animation;if(void 0!==a.morphTargets){c=0;for(j=a.morphTargets.length;c<j;c++){d.morphTargets[c]={};d.morphTargets[c].name=a.morphTargets[c].name;d.morphTargets[c].vertices=[];D=d.morphTargets[c].vertices;x=a.morphTargets[c].vertices;y=0;for(u=x.length;y<u;y+=3)s=new THREE.Vector3,s.x=x[y]*f,s.y=x[y+1]*f,s.z=x[y+2]*f,D.push(s)}}if(void 0!==a.morphColors){c=0;for(j=a.morphColors.length;c<j;c++){d.morphColors[c]={};d.morphColors[c].name=a.morphColors[c].name;d.morphColors[c].colors=
[];u=d.morphColors[c].colors;D=a.morphColors[c].colors;f=0;for(y=D.length;f<y;f+=3)x=new THREE.Color(16755200),x.setRGB(D[f],D[f+1],D[f+2]),u.push(x)}}d.computeCentroids();d.computeFaceNormals();this.hasNormals(d)&&d.computeTangents();b(d)};THREE.GeometryLoader=function(){THREE.EventTarget.call(this);this.path=this.crossOrigin=null};
THREE.GeometryLoader.prototype={constructor:THREE.GeometryLoader,load:function(a){var b=this,c=null;if(null===b.path){var d=a.split("/");d.pop();b.path=1>d.length?".":d.join("/")}d=new XMLHttpRequest;d.addEventListener("load",function(d){d.target.responseText?c=b.parse(JSON.parse(d.target.responseText),f):b.dispatchEvent({type:"error",message:"Invalid file ["+a+"]"})},!1);d.addEventListener("error",function(){b.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]"})},!1);d.open("GET",a,
!0);d.send(null);var f=new THREE.LoadingMonitor;f.addEventListener("load",function(){b.dispatchEvent({type:"load",content:c})});f.add(d)},parse:function(a,b){var c=this,d=new THREE.Geometry,f=void 0!==a.scale?1/a.scale:1;if(a.materials){d.materials=[];for(var e=0;e<a.materials.length;++e){var g=a.materials[e],h=function(a){a=Math.log(a)/Math.LN2;return Math.floor(a)==a},j=function(a){a=Math.log(a)/Math.LN2;return Math.pow(2,Math.round(a))},k=function(a,d,f,e,g,k){a[d]=new THREE.Texture;a[d].sourceFile=
f;e&&(a[d].repeat.set(e[0],e[1]),1!==e[0]&&(a[d].wrapS=THREE.RepeatWrapping),1!==e[1]&&(a[d].wrapT=THREE.RepeatWrapping));g&&a[d].offset.set(g[0],g[1]);k&&(e={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==e[k[0]]&&(a[d].wrapS=e[k[0]]),void 0!==e[k[1]]&&(a[d].wrapT=e[k[1]]));var m=a[d];a=new THREE.ImageLoader;a.addEventListener("load",function(a){a=a.content;if(!h(a.width)||!h(a.height)){var b=j(a.width),c=j(a.height);m.image=document.createElement("canvas");m.image.width=
b;m.image.height=c;m.image.getContext("2d").drawImage(a,0,0,b,c)}else m.image=a;m.needsUpdate=!0});a.crossOrigin=c.crossOrigin;a.load(c.path+"/"+f);b&&b.add(a)},m=function(a){return(255*a[0]<<16)+(255*a[1]<<8)+255*a[2]},p="MeshLambertMaterial",n={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(g.shading){var s=g.shading.toLowerCase();"phong"===s?p="MeshPhongMaterial":"basic"===s&&(p="MeshBasicMaterial")}void 0!==g.blending&&void 0!==THREE[g.blending]&&
(n.blending=THREE[g.blending]);if(void 0!==g.transparent||1>g.opacity)n.transparent=g.transparent;void 0!==g.depthTest&&(n.depthTest=g.depthTest);void 0!==g.depthWrite&&(n.depthWrite=g.depthWrite);void 0!==g.vertexColors&&("face"==g.vertexColors?n.vertexColors=THREE.FaceColors:g.vertexColors&&(n.vertexColors=THREE.VertexColors));g.colorDiffuse?n.color=m(g.colorDiffuse):g.DbgColor&&(n.color=g.DbgColor);g.colorSpecular&&(n.specular=m(g.colorSpecular));g.colorAmbient&&(n.ambient=m(g.colorAmbient));g.transparency&&
(n.opacity=g.transparency);g.specularCoef&&(n.shininess=g.specularCoef);void 0!==g.visible&&(n.visible=g.visible);void 0!==g.flipSided&&(n.side=THREE.BackSide);void 0!==g.doubleSided&&(n.side=THREE.DoubleSide);void 0!==g.wireframe&&(n.wireframe=g.wireframe);g.mapDiffuse&&k(n,"map",g.mapDiffuse,g.mapDiffuseRepeat,g.mapDiffuseOffset,g.mapDiffuseWrap);g.mapLight&&k(n,"lightMap",g.mapLight,g.mapLightRepeat,g.mapLightOffset,g.mapLightWrap);g.mapBump&&k(n,"bumpMap",g.mapBump,g.mapBumpRepeat,g.mapBumpOffset,
g.mapBumpWrap);g.mapNormal&&k(n,"normalMap",g.mapNormal,g.mapNormalRepeat,g.mapNormalOffset,g.mapNormalWrap);g.mapSpecular&&k(n,"specularMap",g.mapSpecular,g.mapSpecularRepeat,g.mapSpecularOffset,g.mapSpecularWrap);g.mapNormal?(k=THREE.ShaderUtils.lib.normal,m=THREE.UniformsUtils.clone(k.uniforms),m.tNormal.value=n.normalMap,g.mapNormalFactor&&m.uNormalScale.value.set(g.mapNormalFactor,g.mapNormalFactor),n.map&&(m.tDiffuse.value=n.map,m.enableDiffuse.value=!0),n.specularMap&&(m.tSpecular.value=n.specularMap,
m.enableSpecular.value=!0),n.lightMap&&(m.tAO.value=n.lightMap,m.enableAO.value=!0),m.uDiffuseColor.value.setHex(n.color),m.uSpecularColor.value.setHex(n.specular),m.uAmbientColor.value.setHex(n.ambient),m.uShininess.value=n.shininess,void 0!==n.opacity&&(m.uOpacity.value=n.opacity),n=new THREE.ShaderMaterial({fragmentShader:k.fragmentShader,vertexShader:k.vertexShader,uniforms:m,lights:!0,fog:!0})):n=new THREE[p](n);void 0!==g.DbgName&&(n.name=g.DbgName);d.materials[e]=n}}var g=a.faces,r=a.vertices,
n=a.normals,k=a.colors,m=0;if(a.uvs)for(e=0;e<a.uvs.length;e++)a.uvs[e].length&&m++;for(e=0;e<m;e++)d.faceUvs[e]=[],d.faceVertexUvs[e]=[];p=0;for(s=r.length;p<s;){var q=new THREE.Vector3;q.x=r[p++]*f;q.y=r[p++]*f;q.z=r[p++]*f;d.vertices.push(q)}p=0;for(s=g.length;p<s;){var t=g[p++],v=t&2,e=t&4,w=t&8,y=t&16,r=t&32,u=t&64,q=t&128;if(t&1){t=new THREE.Face4;t.a=g[p++];t.b=g[p++];t.c=g[p++];t.d=g[p++];var D=4}else t=new THREE.Face3,t.a=g[p++],t.b=g[p++],t.c=g[p++],D=3;v&&(v=g[p++],t.materialIndex=v);var x=
d.faces.length;if(e)for(e=0;e<m;e++){var C=a.uvs[e],v=g[p++],G=C[2*v],v=C[2*v+1];d.faceUvs[e][x]=new THREE.UV(G,v)}if(w)for(e=0;e<m;e++){for(var C=a.uvs[e],w=[],A=0;A<D;A++)v=g[p++],G=C[2*v],v=C[2*v+1],w[A]=new THREE.UV(G,v);d.faceVertexUvs[e][x]=w}y&&(y=3*g[p++],v=new THREE.Vector3,v.x=n[y++],v.y=n[y++],v.z=n[y],t.normal=v);if(r)for(e=0;e<D;e++)y=3*g[p++],v=new THREE.Vector3,v.x=n[y++],v.y=n[y++],v.z=n[y],t.vertexNormals.push(v);u&&(r=g[p++],t.color=new THREE.Color(k[r]));if(q)for(e=0;e<D;e++)r=
g[p++],t.vertexColors.push(new THREE.Color(k[r]));d.faces.push(t)}if(a.skinWeights){e=0;for(g=a.skinWeights.length;e<g;e+=2)d.skinWeights.push(new THREE.Vector4(a.skinWeights[e],a.skinWeights[e+1],0,0))}if(a.skinIndices){e=0;for(g=a.skinIndices.length;e<g;e+=2)n=0,d.skinIndices.push(new THREE.Vector4(a.skinIndices[e],a.skinIndices[e+1],n,0))}d.bones=a.bones;d.animation=a.animation;if(a.morphTargets){e=0;for(g=a.morphTargets.length;e<g;e++){d.morphTargets[e]={};d.morphTargets[e].name=a.morphTargets[e].name;
d.morphTargets[e].vertices=[];n=d.morphTargets[e].vertices;k=a.morphTargets[e].vertices;v=0;for(m=k.length;v<m;v+=3)q=new THREE.Vector3,q.x=k[v]*f,q.y=k[v+1]*f,q.z=k[v+2]*f,n.push(q)}}if(a.morphColors){e=0;for(g=a.morphColors.length;e<g;e++){d.morphColors[e]={};d.morphColors[e].name=a.morphColors[e].name;d.morphColors[e].colors=[];f=d.morphColors[e].colors;k=a.morphColors[e].colors;n=0;for(m=k.length;n<m;n+=3)p=new THREE.Color(16755200),p.setRGB(k[n],k[n+1],k[n+2]),f.push(p)}}d.computeCentroids();
d.computeFaceNormals();return d}};THREE.SceneLoader=function(){this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){};this.callbackSync=function(){};this.callbackProgress=function(){};this.geometryHandlerMap={};this.addGeometryHandler("ascii",THREE.JSONLoader);this.addGeometryHandler("binary",THREE.BinaryLoader)};THREE.SceneLoader.prototype.constructor=THREE.SceneLoader;
THREE.SceneLoader.prototype.load=function(a,b){var c=this,d=new XMLHttpRequest;d.onreadystatechange=function(){if(4===d.readyState)if(200===d.status||0===d.status){var f=JSON.parse(d.responseText);c.parse(f,b,a)}else console.error("THREE.SceneLoader: Couldn't load ["+a+"] ["+d.status+"]")};d.open("GET",a,!0);d.send(null)};THREE.SceneLoader.prototype.addGeometryHandler=function(a,b){this.geometryHandlerMap[a]={loaderClass:b}};
THREE.SceneLoader.prototype.parse=function(a,b,c){function d(a,b){return"relativeToHTML"==b?a:k+"/"+a}function f(a,b){for(var c in b)if(void 0===L.objects[c]){var d=b[c],e=null;if(void 0!==d.geometry){if(G=L.geometries[d.geometry])A=L.materials[d.materials[0]],A instanceof THREE.ShaderMaterial&&G.computeTangents(),w=d.position,y=d.rotation,u=d.quaternion,D=d.scale,t=d.matrix,u=0,0===d.materials.length&&(A=new THREE.MeshFaceMaterial),1<d.materials.length&&(A=new THREE.MeshFaceMaterial),d.morph?(e=
new THREE.MorphAnimMesh(G,A),void 0!==d.duration&&(e.duration=d.duration),void 0!==d.time&&(e.time=d.time),void 0!==d.mirroredLoop&&(e.mirroredLoop=d.mirroredLoop),A.morphNormals&&G.computeMorphNormals()):e=new THREE.Mesh(G,A),e.name=c,t?(e.matrixAutoUpdate=!1,e.matrix.set(t[0],t[1],t[2],t[3],t[4],t[5],t[6],t[7],t[8],t[9],t[10],t[11],t[12],t[13],t[14],t[15])):(e.position.set(w[0],w[1],w[2]),u?(e.quaternion.set(u[0],u[1],u[2],u[3]),e.useQuaternion=!0):e.rotation.set(y[0],y[1],y[2]),e.scale.set(D[0],
D[1],D[2])),e.visible=d.visible,e.castShadow=d.castShadow,e.receiveShadow=d.receiveShadow,a.add(e),L.objects[c]=e}else w=d.position,y=d.rotation,u=d.quaternion,D=d.scale,u=0,e=new THREE.Object3D,e.name=c,e.position.set(w[0],w[1],w[2]),u?(e.quaternion.set(u[0],u[1],u[2],u[3]),e.useQuaternion=!0):e.rotation.set(y[0],y[1],y[2]),e.scale.set(D[0],D[1],D[2]),e.visible=void 0!==d.visible?d.visible:!1,a.add(e),L.objects[c]=e,L.empties[c]=e;if(e){if(void 0!==d.properties)for(var g in d.properties)e.properties[g]=
d.properties[g];void 0!==d.children&&f(e,d.children)}}}function e(a){return function(b){L.geometries[a]=b;f(L.scene,N.objects);E-=1;j.onLoadComplete();h()}}function g(a){return function(b){L.geometries[a]=b}}function h(){j.callbackProgress({totalModels:M,totalTextures:K,loadedModels:M-E,loadedTextures:K-Q},L);j.onLoadProgress();0===E&&0===Q&&b(L)}var j=this,k=THREE.Loader.prototype.extractUrlBase(c),m,p,n,s,r,q,t,v,w,y,u,D,x,C,G,A,J,H,I,E,Q,M,K,L,N=a;for(x in this.geometryHandlerMap)this.geometryHandlerMap[x].loaderObject=
new this.geometryHandlerMap[x].loaderClass;Q=E=0;L={scene:new THREE.Scene,geometries:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},empties:{}};if(N.transform&&(a=N.transform.position,c=N.transform.rotation,x=N.transform.scale,a&&L.scene.position.set(a[0],a[1],a[2]),c&&L.scene.rotation.set(c[0],c[1],c[2]),x&&L.scene.scale.set(x[0],x[1],x[2]),a||c||x))L.scene.updateMatrix(),L.scene.updateMatrixWorld();a=function(a){return function(){Q-=a;h();j.onLoadComplete()}};for(s in N.cameras)x=
N.cameras[s],"perspective"===x.type?J=new THREE.PerspectiveCamera(x.fov,x.aspect,x.near,x.far):"ortho"===x.type&&(J=new THREE.OrthographicCamera(x.left,x.right,x.top,x.bottom,x.near,x.far)),w=x.position,c=x.target,x=x.up,J.position.set(w[0],w[1],w[2]),J.target=new THREE.Vector3(c[0],c[1],c[2]),x&&J.up.set(x[0],x[1],x[2]),L.cameras[s]=J;for(n in N.lights)c=N.lights[n],s=void 0!==c.color?c.color:16777215,J=void 0!==c.intensity?c.intensity:1,"directional"===c.type?(w=c.direction,v=new THREE.DirectionalLight(s,
J),v.position.set(w[0],w[1],w[2]),v.position.normalize()):"point"===c.type?(w=c.position,v=c.distance,v=new THREE.PointLight(s,J,v),v.position.set(w[0],w[1],w[2])):"ambient"===c.type&&(v=new THREE.AmbientLight(s)),L.scene.add(v),L.lights[n]=v;for(r in N.fogs)n=N.fogs[r],"linear"===n.type?H=new THREE.Fog(0,n.near,n.far):"exp2"===n.type&&(H=new THREE.FogExp2(0,n.density)),x=n.color,H.color.setRGB(x[0],x[1],x[2]),L.fogs[r]=H;L.cameras&&N.defaults.camera&&(L.currentCamera=L.cameras[N.defaults.camera]);
L.fogs&&N.defaults.fog&&(L.scene.fog=L.fogs[N.defaults.fog]);x=N.defaults.bgcolor;L.bgColor=new THREE.Color;L.bgColor.setRGB(x[0],x[1],x[2]);L.bgColorAlpha=N.defaults.bgalpha;for(m in N.geometries)r=N.geometries[m],r.type in this.geometryHandlerMap&&(E+=1,j.onLoadStart());M=E;for(m in N.geometries)if(r=N.geometries[m],"cube"===r.type)G=new THREE.CubeGeometry(r.width,r.height,r.depth,r.segmentsWidth,r.segmentsHeight,r.segmentsDepth,null,r.flipped,r.sides),L.geometries[m]=G;else if("plane"===r.type)G=
new THREE.PlaneGeometry(r.width,r.height,r.segmentsWidth,r.segmentsHeight),L.geometries[m]=G;else if("sphere"===r.type)G=new THREE.SphereGeometry(r.radius,r.segmentsWidth,r.segmentsHeight),L.geometries[m]=G;else if("cylinder"===r.type)G=new THREE.CylinderGeometry(r.topRad,r.botRad,r.height,r.radSegs,r.heightSegs),L.geometries[m]=G;else if("torus"===r.type)G=new THREE.TorusGeometry(r.radius,r.tube,r.segmentsR,r.segmentsT),L.geometries[m]=G;else if("icosahedron"===r.type)G=new THREE.IcosahedronGeometry(r.radius,
r.subdivisions),L.geometries[m]=G;else if(r.type in this.geometryHandlerMap){H={};for(I in r)"type"!==I&&"url"!==I&&(H[I]=r[I]);this.geometryHandlerMap[r.type].loaderObject.load(d(r.url,N.urlBaseType),e(m),H)}else"embedded"===r.type&&(r=N.embeds[r.id],r.metadata=N.metadata,r&&this.geometryHandlerMap.ascii.loaderObject.createModel(r,g(m),""));for(q in N.textures)if(m=N.textures[q],m.url instanceof Array){Q+=m.url.length;for(I=0;I<m.url.length;I++)j.onLoadStart()}else Q+=1,j.onLoadStart();K=Q;for(q in N.textures){m=
N.textures[q];void 0!==m.mapping&&void 0!==THREE[m.mapping]&&(m.mapping=new THREE[m.mapping]);if(m.url instanceof Array){r=m.url.length;H=[];for(I=0;I<r;I++)H[I]=d(m.url[I],N.urlBaseType);I=(I=H[0].endsWith(".dds"))?THREE.ImageUtils.loadCompressedTextureCube(H,m.mapping,a(r)):THREE.ImageUtils.loadTextureCube(H,m.mapping,a(r))}else I=m.url.toLowerCase().endsWith(".dds"),r=d(m.url,N.urlBaseType),H=a(1),I=I?THREE.ImageUtils.loadCompressedTexture(r,m.mapping,H):THREE.ImageUtils.loadTexture(r,m.mapping,
H),void 0!==THREE[m.minFilter]&&(I.minFilter=THREE[m.minFilter]),void 0!==THREE[m.magFilter]&&(I.magFilter=THREE[m.magFilter]),m.anisotropy&&(I.anisotropy=m.anisotropy),m.repeat&&(I.repeat.set(m.repeat[0],m.repeat[1]),1!==m.repeat[0]&&(I.wrapS=THREE.RepeatWrapping),1!==m.repeat[1]&&(I.wrapT=THREE.RepeatWrapping)),m.offset&&I.offset.set(m.offset[0],m.offset[1]),m.wrap&&(r={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==r[m.wrap[0]]&&(I.wrapS=r[m.wrap[0]]),void 0!==r[m.wrap[1]]&&
(I.wrapT=r[m.wrap[1]]));L.textures[q]=I}for(p in N.materials){t=N.materials[p];for(C in t.parameters)"envMap"===C||"map"===C||"lightMap"===C||"bumpMap"===C?t.parameters[C]=L.textures[t.parameters[C]]:"shading"===C?t.parameters[C]="flat"===t.parameters[C]?THREE.FlatShading:THREE.SmoothShading:"side"===C?t.parameters[C]="double"==t.parameters[C]?THREE.DoubleSide:"back"==t.parameters[C]?THREE.BackSide:THREE.FrontSide:"blending"===C?t.parameters[C]=t.parameters[C]in THREE?THREE[t.parameters[C]]:THREE.NormalBlending:
"combine"===C?t.parameters[C]="MixOperation"==t.parameters[C]?THREE.MixOperation:THREE.MultiplyOperation:"vertexColors"===C?"face"==t.parameters[C]?t.parameters[C]=THREE.FaceColors:t.parameters[C]&&(t.parameters[C]=THREE.VertexColors):"wrapRGB"===C&&(q=t.parameters[C],t.parameters[C]=new THREE.Vector3(q[0],q[1],q[2]));void 0!==t.parameters.opacity&&1>t.parameters.opacity&&(t.parameters.transparent=!0);t.parameters.normalMap?(q=THREE.ShaderUtils.lib.normal,a=THREE.UniformsUtils.clone(q.uniforms),m=
t.parameters.color,I=t.parameters.specular,r=t.parameters.ambient,H=t.parameters.shininess,a.tNormal.value=L.textures[t.parameters.normalMap],t.parameters.normalScale&&a.uNormalScale.value.set(t.parameters.normalScale[0],t.parameters.normalScale[1]),t.parameters.map&&(a.tDiffuse.value=t.parameters.map,a.enableDiffuse.value=!0),t.parameters.envMap&&(a.tCube.value=t.parameters.envMap,a.enableReflection.value=!0,a.uReflectivity.value=t.parameters.reflectivity),t.parameters.lightMap&&(a.tAO.value=t.parameters.lightMap,
a.enableAO.value=!0),t.parameters.specularMap&&(a.tSpecular.value=L.textures[t.parameters.specularMap],a.enableSpecular.value=!0),t.parameters.displacementMap&&(a.tDisplacement.value=L.textures[t.parameters.displacementMap],a.enableDisplacement.value=!0,a.uDisplacementBias.value=t.parameters.displacementBias,a.uDisplacementScale.value=t.parameters.displacementScale),a.uDiffuseColor.value.setHex(m),a.uSpecularColor.value.setHex(I),a.uAmbientColor.value.setHex(r),a.uShininess.value=H,t.parameters.opacity&&
(a.uOpacity.value=t.parameters.opacity),A=new THREE.ShaderMaterial({fragmentShader:q.fragmentShader,vertexShader:q.vertexShader,uniforms:a,lights:!0,fog:!0})):A=new THREE[t.type](t.parameters);L.materials[p]=A}f(L.scene,N.objects);j.callbackSync(L);h()};THREE.TextureLoader=function(){THREE.EventTarget.call(this);this.crossOrigin=null};
THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(a){var b=this,c=new Image;c.addEventListener("load",function(){var a=new THREE.Texture(c);a.needsUpdate=!0;b.dispatchEvent({type:"load",content:a})},!1);c.addEventListener("error",function(){b.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]"})},!1);b.crossOrigin&&(c.crossOrigin=b.crossOrigin);c.src=a}};
THREE.Material=function(){this.id=THREE.MaterialCount++;this.name="";this.side=THREE.FrontSide;this.opacity=1;this.transparent=!1;this.blending=THREE.NormalBlending;this.blendSrc=THREE.SrcAlphaFactor;this.blendDst=THREE.OneMinusSrcAlphaFactor;this.blendEquation=THREE.AddEquation;this.depthWrite=this.depthTest=!0;this.polygonOffset=!1;this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=0;this.overdraw=!1;this.needsUpdate=this.visible=!0};
THREE.Material.prototype.setValues=function(a){if(void 0!==a)for(var b in a){var c=a[b];if(void 0===c)console.warn("THREE.Material: '"+b+"' parameter is undefined.");else if(b in this){var d=this[b];d instanceof THREE.Color&&c instanceof THREE.Color?d.copy(c):d instanceof THREE.Color&&"number"===typeof c?d.setHex(c):d instanceof THREE.Vector3&&c instanceof THREE.Vector3?d.copy(c):this[b]=c}}};
THREE.Material.prototype.clone=function(a){void 0===a&&(a=new THREE.Material);a.name=this.name;a.side=this.side;a.opacity=this.opacity;a.transparent=this.transparent;a.blending=this.blending;a.blendSrc=this.blendSrc;a.blendDst=this.blendDst;a.blendEquation=this.blendEquation;a.depthTest=this.depthTest;a.depthWrite=this.depthWrite;a.polygonOffset=this.polygonOffset;a.polygonOffsetFactor=this.polygonOffsetFactor;a.polygonOffsetUnits=this.polygonOffsetUnits;a.alphaTest=this.alphaTest;a.overdraw=this.overdraw;
a.visible=this.visible;return a};THREE.MaterialCount=0;THREE.LineBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.linewidth=1;this.linejoin=this.linecap="round";this.vertexColors=!1;this.fog=!0;this.setValues(a)};THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.LineBasicMaterial.prototype.clone=function(){var a=new THREE.LineBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.linewidth=this.linewidth;a.linecap=this.linecap;a.linejoin=this.linejoin;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};
THREE.MeshBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.envMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphTargets=this.skinning=!1;this.setValues(a)};
THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshBasicMaterial.prototype.clone=function(){var a=new THREE.MeshBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.lightMap=this.lightMap;a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=
this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;return a};
THREE.MeshLambertMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.wrapAround=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.envMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap=
"round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshLambertMaterial.prototype.clone=function(){var a=new THREE.MeshLambertMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.ambient.copy(this.ambient);a.emissive.copy(this.emissive);a.wrapAround=this.wrapAround;a.wrapRGB.copy(this.wrapRGB);a.map=this.map;a.lightMap=this.lightMap;a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;
a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;return a};
THREE.MeshPhongMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.specular=new THREE.Color(1118481);this.shininess=30;this.wrapAround=this.perPixel=this.metal=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.bumpMap=this.lightMap=this.map=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new THREE.Vector2(1,1);this.envMap=this.specularMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=
1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshPhongMaterial.prototype.clone=function(){var a=new THREE.MeshPhongMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.ambient.copy(this.ambient);a.emissive.copy(this.emissive);a.specular.copy(this.specular);a.shininess=this.shininess;a.metal=this.metal;a.perPixel=this.perPixel;a.wrapAround=this.wrapAround;a.wrapRGB.copy(this.wrapRGB);a.map=this.map;a.lightMap=this.lightMap;a.bumpMap=this.bumpMap;a.bumpScale=this.bumpScale;a.normalMap=this.normalMap;a.normalScale.copy(this.normalScale);
a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;return a};
THREE.MeshDepthMaterial=function(a){THREE.Material.call(this);this.wireframe=!1;this.wireframeLinewidth=1;this.setValues(a)};THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshDepthMaterial.prototype.clone=function(){var a=new THREE.LineBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;return a};
THREE.MeshNormalMaterial=function(a){THREE.Material.call(this,a);this.shading=THREE.FlatShading;this.wireframe=!1;this.wireframeLinewidth=1;this.setValues(a)};THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshNormalMaterial.prototype.clone=function(){var a=new THREE.MeshNormalMaterial;THREE.Material.prototype.clone.call(this,a);a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;return a};THREE.MeshFaceMaterial=function(){};
THREE.MeshFaceMaterial.prototype.clone=function(){return new THREE.MeshFaceMaterial};THREE.ParticleBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=null;this.size=1;this.sizeAttenuation=!0;this.vertexColors=!1;this.fog=!0;this.setValues(a)};THREE.ParticleBasicMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.ParticleBasicMaterial.prototype.clone=function(){var a=new THREE.ParticleBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.size=this.size;a.sizeAttenuation=this.sizeAttenuation;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};THREE.ParticleCanvasMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.program=function(){};this.setValues(a)};THREE.ParticleCanvasMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.ParticleCanvasMaterial.prototype.clone=function(){var a=new THREE.ParticleCanvasMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.program=this.program;return a};THREE.ParticleDOMMaterial=function(a){this.element=a};THREE.ParticleDOMMaterial.prototype.clone=function(){return new THREE.ParticleDOMMaterial(this.element)};
THREE.ShaderMaterial=function(a){THREE.Material.call(this);this.vertexShader=this.fragmentShader="void main() {}";this.uniforms={};this.attributes=null;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.lights=this.fog=!1;this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.ShaderMaterial.prototype.clone=function(){var a=new THREE.ShaderMaterial;THREE.Material.prototype.clone.call(this,a);a.fragmentShader=this.fragmentShader;a.vertexShader=this.vertexShader;a.uniforms=this.uniforms;a.attributes=this.attributes;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.fog=this.fog;a.lights=this.lights;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;
return a};
THREE.Texture=function(a,b,c,d,f,e,g,h,j){this.id=THREE.TextureCount++;this.image=a;this.mapping=void 0!==b?b:new THREE.UVMapping;this.wrapS=void 0!==c?c:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==d?d:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==f?f:THREE.LinearFilter;this.minFilter=void 0!==e?e:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==j?j:1;this.format=void 0!==g?g:THREE.RGBAFormat;this.type=void 0!==h?h:THREE.UnsignedByteType;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,
1);this.generateMipmaps=!0;this.premultiplyAlpha=!1;this.flipY=!0;this.needsUpdate=!1;this.onUpdate=null};
THREE.Texture.prototype={constructor:THREE.Texture,clone:function(){var a=new THREE.Texture;a.image=this.image;a.mapping=this.mapping;a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.anisotropy=this.anisotropy;a.format=this.format;a.type=this.type;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.generateMipmaps=this.generateMipmaps;a.premultiplyAlpha=this.premultiplyAlpha;a.flipY=this.flipY;return a}};THREE.TextureCount=0;
THREE.CompressedTexture=function(a,b,c,d,f,e,g,h,j,k){THREE.Texture.call(this,null,e,g,h,j,k,d,f);this.image={width:b,height:c};this.mipmaps=a};THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype);
THREE.CompressedTexture.prototype.clone=function(){var a=new THREE.CompressedTexture;a.image=this.image;a.mipmaps=this.mipmaps;a.format=this.format;a.type=this.type;a.mapping=this.mapping;a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.anisotropy=this.anisotropy;a.offset.copy(this.offset);a.repeat.copy(this.repeat);return a};THREE.DataTexture=function(a,b,c,d,f,e,g,h,j,k){THREE.Texture.call(this,null,e,g,h,j,k,d,f);this.image={data:a,width:b,height:c}};
THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype);THREE.DataTexture.prototype.clone=function(){var a=new THREE.DataTexture(this.image.data,this.image.width,this.image.height,this.format,this.type,this.mapping,this.wrapS,this.wrapT,this.magFilter,this.minFilter);a.offset.copy(this.offset);a.repeat.copy(this.repeat);return a};THREE.Particle=function(a){THREE.Object3D.call(this);this.material=a};THREE.Particle.prototype=Object.create(THREE.Object3D.prototype);
THREE.ParticleSystem=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=void 0!==b?b:new THREE.ParticleBasicMaterial({color:16777215*Math.random()});this.sortParticles=!1;this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere(),this.boundRadius=a.boundingSphere.radius);this.frustumCulled=!1};THREE.ParticleSystem.prototype=Object.create(THREE.Object3D.prototype);
THREE.Line=function(a,b,c){THREE.Object3D.call(this);this.geometry=a;this.material=void 0!==b?b:new THREE.LineBasicMaterial({color:16777215*Math.random()});this.type=void 0!==c?c:THREE.LineStrip;this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere())};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=Object.create(THREE.Object3D.prototype);
THREE.Mesh=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=void 0!==b?b:new THREE.MeshBasicMaterial({color:16777215*Math.random(),wireframe:!0});if(this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere(),this.boundRadius=a.boundingSphere.radius,this.geometry.morphTargets.length)){this.morphTargetBase=-1;this.morphTargetForcedOrder=[];this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var c=0;c<this.geometry.morphTargets.length;c++)this.morphTargetInfluences.push(0),
this.morphTargetDictionary[this.geometry.morphTargets[c].name]=c}};THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype);THREE.Mesh.prototype.getMorphTargetIndexByName=function(a){if(void 0!==this.morphTargetDictionary[a])return this.morphTargetDictionary[a];console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+a+" does not exist. Returning 0.");return 0};THREE.Bone=function(a){THREE.Object3D.call(this);this.skin=a;this.skinMatrix=new THREE.Matrix4};THREE.Bone.prototype=Object.create(THREE.Object3D.prototype);
THREE.Bone.prototype.update=function(a,b){this.matrixAutoUpdate&&(b|=this.updateMatrix());if(b||this.matrixWorldNeedsUpdate)a?this.skinMatrix.multiply(a,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,b=!0;var c,d=this.children.length;for(c=0;c<d;c++)this.children[c].update(this.skinMatrix,b)};
THREE.SkinnedMesh=function(a,b,c){THREE.Mesh.call(this,a,b);this.useVertexTexture=void 0!==c?c:!0;this.identityMatrix=new THREE.Matrix4;this.bones=[];this.boneMatrices=[];var d,f,e;if(void 0!==this.geometry.bones){for(a=0;a<this.geometry.bones.length;a++)c=this.geometry.bones[a],d=c.pos,f=c.rotq,e=c.scl,b=this.addBone(),b.name=c.name,b.position.set(d[0],d[1],d[2]),b.quaternion.set(f[0],f[1],f[2],f[3]),b.useQuaternion=!0,void 0!==e?b.scale.set(e[0],e[1],e[2]):b.scale.set(1,1,1);for(a=0;a<this.bones.length;a++)c=
this.geometry.bones[a],b=this.bones[a],-1===c.parent?this.add(b):this.bones[c.parent].add(b);a=this.bones.length;this.useVertexTexture?(this.boneTextureHeight=this.boneTextureWidth=256<a?64:64<a?32:16<a?16:8,this.boneMatrices=new Float32Array(4*this.boneTextureWidth*this.boneTextureHeight),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),this.boneTexture.minFilter=THREE.NearestFilter,this.boneTexture.magFilter=
THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1):this.boneMatrices=new Float32Array(16*a);this.pose()}};THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.SkinnedMesh.prototype.addBone=function(a){void 0===a&&(a=new THREE.Bone(this));this.bones.push(a);return a};
THREE.SkinnedMesh.prototype.updateMatrixWorld=function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1;a=0;for(var b=this.children.length;a<b;a++){var c=this.children[a];c instanceof THREE.Bone?c.update(this.identityMatrix,!1):c.updateMatrixWorld(!0)}if(void 0==this.boneInverses){this.boneInverses=[];a=0;for(b=this.bones.length;a<
b;a++)c=new THREE.Matrix4,c.getInverse(this.bones[a].skinMatrix),this.boneInverses.push(c)}a=0;for(b=this.bones.length;a<b;a++)THREE.SkinnedMesh.offsetMatrix.multiply(this.bones[a].skinMatrix,this.boneInverses[a]),THREE.SkinnedMesh.offsetMatrix.flattenToArrayOffset(this.boneMatrices,16*a);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)};
THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0);for(var a=0;a<this.geometry.skinIndices.length;a++){var b=this.geometry.skinWeights[a],c=1/b.lengthManhattan();Infinity!==c?b.multiplyScalar(c):b.set(1)}};THREE.SkinnedMesh.offsetMatrix=new THREE.Matrix4;
THREE.MorphAnimMesh=function(a,b){THREE.Mesh.call(this,a,b);this.duration=1E3;this.mirroredLoop=!1;this.currentKeyframe=this.lastKeyframe=this.time=0;this.direction=1;this.directionBackwards=!1;this.setFrameRange(0,this.geometry.morphTargets.length-1)};THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphAnimMesh.prototype.setFrameRange=function(a,b){this.startKeyframe=a;this.endKeyframe=b;this.length=this.endKeyframe-this.startKeyframe+1};
THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1;this.directionBackwards=!1};THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1;this.directionBackwards=!0};
THREE.MorphAnimMesh.prototype.parseAnimations=function(){var a=this.geometry;a.animations||(a.animations={});for(var b,c=a.animations,d=/([a-z]+)(\d+)/,f=0,e=a.morphTargets.length;f<e;f++){var g=a.morphTargets[f].name.match(d);if(g&&1<g.length){g=g[1];c[g]||(c[g]={start:Infinity,end:-Infinity});var h=c[g];f<h.start&&(h.start=f);f>h.end&&(h.end=f);b||(b=g)}}a.firstAnimation=b};
THREE.MorphAnimMesh.prototype.setAnimationLabel=function(a,b,c){this.geometry.animations||(this.geometry.animations={});this.geometry.animations[a]={start:b,end:c}};THREE.MorphAnimMesh.prototype.playAnimation=function(a,b){var c=this.geometry.animations[a];c?(this.setFrameRange(c.start,c.end),this.duration=1E3*((c.end-c.start)/b),this.time=0):console.warn("animation["+a+"] undefined")};
THREE.MorphAnimMesh.prototype.updateAnimation=function(a){var b=this.duration/this.length;this.time+=this.direction*a;if(this.mirroredLoop){if(this.time>this.duration||0>this.time)this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),0>this.time&&(this.time=0,this.directionBackwards=!1)}else this.time%=this.duration,0>this.time&&(this.time+=this.duration);a=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/b),0,this.length-1);a!==this.currentKeyframe&&
(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[a]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=a);b=this.time%b/b;this.directionBackwards&&(b=1-b);this.morphTargetInfluences[this.currentKeyframe]=b;this.morphTargetInfluences[this.lastKeyframe]=1-b};THREE.Ribbon=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=b};THREE.Ribbon.prototype=Object.create(THREE.Object3D.prototype);
THREE.LOD=function(){THREE.Object3D.call(this);this.LODs=[]};THREE.LOD.prototype=Object.create(THREE.Object3D.prototype);THREE.LOD.prototype.addLevel=function(a,b){void 0===b&&(b=0);b=Math.abs(b);for(var c=0;c<this.LODs.length&&!(b<this.LODs[c].visibleAtDistance);c++);this.LODs.splice(c,0,{visibleAtDistance:b,object3D:a});this.add(a)};
THREE.LOD.prototype.update=function(a){if(1<this.LODs.length){a.matrixWorldInverse.getInverse(a.matrixWorld);a=a.matrixWorldInverse;a=-(a.elements[2]*this.matrixWorld.elements[12]+a.elements[6]*this.matrixWorld.elements[13]+a.elements[10]*this.matrixWorld.elements[14]+a.elements[14]);this.LODs[0].object3D.visible=!0;for(var b=1;b<this.LODs.length;b++)if(a>=this.LODs[b].visibleAtDistance)this.LODs[b-1].object3D.visible=!1,this.LODs[b].object3D.visible=!0;else break;for(;b<this.LODs.length;b++)this.LODs[b].object3D.visible=
!1}};
THREE.Sprite=function(a){THREE.Object3D.call(this);this.color=void 0!==a.color?new THREE.Color(a.color):new THREE.Color(16777215);this.map=void 0!==a.map?a.map:new THREE.Texture;this.blending=void 0!==a.blending?a.blending:THREE.NormalBlending;this.blendSrc=void 0!==a.blendSrc?a.blendSrc:THREE.SrcAlphaFactor;this.blendDst=void 0!==a.blendDst?a.blendDst:THREE.OneMinusSrcAlphaFactor;this.blendEquation=void 0!==a.blendEquation?a.blendEquation:THREE.AddEquation;this.useScreenCoordinates=void 0!==a.useScreenCoordinates?
a.useScreenCoordinates:!0;this.mergeWith3D=void 0!==a.mergeWith3D?a.mergeWith3D:!this.useScreenCoordinates;this.affectedByDistance=void 0!==a.affectedByDistance?a.affectedByDistance:!this.useScreenCoordinates;this.scaleByViewport=void 0!==a.scaleByViewport?a.scaleByViewport:!this.affectedByDistance;this.alignment=a.alignment instanceof THREE.Vector2?a.alignment:THREE.SpriteAlignment.center;this.rotation3d=this.rotation;this.rotation=0;this.opacity=1;this.uvOffset=new THREE.Vector2(0,0);this.uvScale=
new THREE.Vector2(1,1)};THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype);THREE.Sprite.prototype.updateMatrix=function(){this.matrix.setPosition(this.position);this.rotation3d.set(0,0,this.rotation);this.matrix.setRotationFromEuler(this.rotation3d);if(1!==this.scale.x||1!==this.scale.y)this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,this.scale.y);this.matrixWorldNeedsUpdate=!0};THREE.SpriteAlignment={};THREE.SpriteAlignment.topLeft=new THREE.Vector2(1,-1);
THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,-1);THREE.SpriteAlignment.topRight=new THREE.Vector2(-1,-1);THREE.SpriteAlignment.centerLeft=new THREE.Vector2(1,0);THREE.SpriteAlignment.center=new THREE.Vector2(0,0);THREE.SpriteAlignment.centerRight=new THREE.Vector2(-1,0);THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(1,1);THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,1);THREE.SpriteAlignment.bottomRight=new THREE.Vector2(-1,1);
THREE.Scene=function(){THREE.Object3D.call(this);this.overrideMaterial=this.fog=null;this.matrixAutoUpdate=!1;this.__objects=[];this.__lights=[];this.__objectsAdded=[];this.__objectsRemoved=[]};THREE.Scene.prototype=Object.create(THREE.Object3D.prototype);
THREE.Scene.prototype.__addObject=function(a){if(a instanceof THREE.Light)-1===this.__lights.indexOf(a)&&this.__lights.push(a),a.target&&void 0===a.target.parent&&this.add(a.target);else if(!(a instanceof THREE.Camera||a instanceof THREE.Bone)&&-1===this.__objects.indexOf(a)){this.__objects.push(a);this.__objectsAdded.push(a);var b=this.__objectsRemoved.indexOf(a);-1!==b&&this.__objectsRemoved.splice(b,1)}for(b=0;b<a.children.length;b++)this.__addObject(a.children[b])};
THREE.Scene.prototype.__removeObject=function(a){if(a instanceof THREE.Light){var b=this.__lights.indexOf(a);-1!==b&&this.__lights.splice(b,1)}else a instanceof THREE.Camera||(b=this.__objects.indexOf(a),-1!==b&&(this.__objects.splice(b,1),this.__objectsRemoved.push(a),b=this.__objectsAdded.indexOf(a),-1!==b&&this.__objectsAdded.splice(b,1)));for(b=0;b<a.children.length;b++)this.__removeObject(a.children[b])};
THREE.Fog=function(a,b,c){this.color=new THREE.Color(a);this.near=void 0!==b?b:1;this.far=void 0!==c?c:1E3};THREE.FogExp2=function(a,b){this.color=new THREE.Color(a);this.density=void 0!==b?b:2.5E-4};
THREE.CanvasRenderer=function(a){function b(a){w!==a&&(w=q.globalAlpha=a)}function c(a){y!==a&&(a===THREE.NormalBlending?q.globalCompositeOperation="source-over":a===THREE.AdditiveBlending?q.globalCompositeOperation="lighter":a===THREE.SubtractiveBlending&&(q.globalCompositeOperation="darker"),y=a)}function d(a){u!==a&&(u=q.strokeStyle=a)}function f(a){D!==a&&(D=q.fillStyle=a)}console.log("THREE.CanvasRenderer",THREE.REVISION);a=a||{};var e=this,g,h,j,k=new THREE.Projector,m=void 0!==a.canvas?a.canvas:
document.createElement("canvas"),p,n,s,r,q=m.getContext("2d"),t=new THREE.Color(0),v=0,w=1,y=0,u=null,D=null,x=null,C=null,G=null,A,J,H,I,E=new THREE.RenderableVertex,Q=new THREE.RenderableVertex,M,K,L,N,X,$,ba,O,da,S,ha,va,fa=new THREE.Color,ia=new THREE.Color,P=new THREE.Color,W=new THREE.Color,ka=new THREE.Color,Ka={},ra={},wa,Ea,La,Za,la,rb,Qa,$a,yb,zb,hb=new THREE.Rectangle,Ha=new THREE.Rectangle,za=new THREE.Rectangle,sb=!1,Ia=new THREE.Color,bb=new THREE.Color,tb=new THREE.Color,Fa=new THREE.Vector3,
cb,db,ib,Ra,Sa,jb;a=16;cb=document.createElement("canvas");cb.width=cb.height=2;db=cb.getContext("2d");db.fillStyle="rgba(0,0,0,1)";db.fillRect(0,0,2,2);ib=db.getImageData(0,0,2,2);Ra=ib.data;Sa=document.createElement("canvas");Sa.width=Sa.height=a;jb=Sa.getContext("2d");jb.translate(-a/2,-a/2);jb.scale(a,a);a--;this.domElement=m;this.sortElements=this.sortObjects=this.autoClear=!0;this.info={render:{vertices:0,faces:0}};this.setSize=function(a,b){p=a;n=b;s=Math.floor(p/2);r=Math.floor(n/2);m.width=
p;m.height=n;hb.set(-s,-r,s,r);Ha.set(-s,-r,s,r);w=1;y=0;G=C=x=D=u=null};this.setClearColor=function(a,b){t.copy(a);v=void 0!==b?b:1;Ha.set(-s,-r,s,r)};this.setClearColorHex=function(a,b){t.setHex(a);v=void 0!==b?b:1;Ha.set(-s,-r,s,r)};this.getMaxAnisotropy=function(){return 0};this.clear=function(){q.setTransform(1,0,0,-1,s,r);!1===Ha.isEmpty()&&(Ha.minSelf(hb),Ha.inflate(2),1>v&&q.clearRect(Math.floor(Ha.getX()),Math.floor(Ha.getY()),Math.floor(Ha.getWidth()),Math.floor(Ha.getHeight())),0<v&&(c(THREE.NormalBlending),
b(1),f("rgba("+Math.floor(255*t.r)+","+Math.floor(255*t.g)+","+Math.floor(255*t.b)+","+v+")"),q.fillRect(Math.floor(Ha.getX()),Math.floor(Ha.getY()),Math.floor(Ha.getWidth()),Math.floor(Ha.getHeight()))),Ha.empty())};this.render=function(a,l){function m(a,b,c){for(var d=0,f=j.length;d<f;d++){var e=j[d],g=e.color;if(e instanceof THREE.DirectionalLight){var h=e.matrixWorld.getPosition().normalize(),l=b.dot(h);0>=l||(l*=e.intensity,c.r+=g.r*l,c.g+=g.g*l,c.b+=g.b*l)}else e instanceof THREE.PointLight&&
(h=e.matrixWorld.getPosition(),l=b.dot(Fa.sub(h,a).normalize()),0>=l||(l*=0==e.distance?1:1-Math.min(a.distanceTo(h)/e.distance,1),0!=l&&(l*=e.intensity,c.r+=g.r*l,c.g+=g.g*l,c.b+=g.b*l)))}}function p(a,d,f,g,h,j,k,q){e.info.render.vertices+=3;e.info.render.faces++;b(q.opacity);c(q.blending);M=a.positionScreen.x;K=a.positionScreen.y;L=d.positionScreen.x;N=d.positionScreen.y;X=f.positionScreen.x;$=f.positionScreen.y;n(M,K,L,N,X,$);(q instanceof THREE.MeshLambertMaterial||q instanceof THREE.MeshPhongMaterial)&&
null===q.map&&null===q.map?!0===sb?(g=q.color,h=q.emissive,!1===q.wireframe&&q.shading==THREE.SmoothShading&&3==k.vertexNormalsLength?(ia.r=P.r=W.r=Ia.r,ia.g=P.g=W.g=Ia.g,ia.b=P.b=W.b=Ia.b,m(k.v1.positionWorld,k.vertexNormalsWorld[0],ia),m(k.v2.positionWorld,k.vertexNormalsWorld[1],P),m(k.v3.positionWorld,k.vertexNormalsWorld[2],W),ia.r=g.r*ia.r+h.r,ia.g=g.g*ia.g+h.g,ia.b=g.b*ia.b+h.b,P.r=g.r*P.r+h.r,P.g=g.g*P.g+h.g,P.b=g.b*P.b+h.b,W.r=g.r*W.r+h.r,W.g=g.g*W.g+h.g,W.b=g.b*W.b+h.b,ka.r=0.5*(P.r+W.r),
ka.g=0.5*(P.g+W.g),ka.b=0.5*(P.b+W.b),La=xa(ia,P,W,ka),y(M,K,L,N,X,$,0,0,1,0,0,1,La)):(fa.r=Ia.r,fa.g=Ia.g,fa.b=Ia.b,m(k.centroidWorld,k.normalWorld,fa),fa.r=g.r*fa.r+h.r,fa.g=g.g*fa.g+h.g,fa.b=g.b*fa.b+h.b,!0===q.wireframe?u(fa,q.wireframeLinewidth,q.wireframeLinecap,q.wireframeLinejoin):v(fa))):!0===q.wireframe?u(q.color,q.wireframeLinewidth,q.wireframeLinecap,q.wireframeLinejoin):v(q.color):q instanceof THREE.MeshBasicMaterial||q instanceof THREE.MeshLambertMaterial||q instanceof THREE.MeshPhongMaterial?
null!==q.map?q.map.mapping instanceof THREE.UVMapping&&(Za=k.uvs[0],w(M,K,L,N,X,$,Za[g].u,Za[g].v,Za[h].u,Za[h].v,Za[j].u,Za[j].v,q.map)):null!==q.envMap?q.envMap.mapping instanceof THREE.SphericalReflectionMapping&&(a=l.matrixWorldInverse,Fa.copy(k.vertexNormalsWorld[g]),la=0.5*(Fa.x*a.elements[0]+Fa.y*a.elements[4]+Fa.z*a.elements[8])+0.5,rb=0.5*(Fa.x*a.elements[1]+Fa.y*a.elements[5]+Fa.z*a.elements[9])+0.5,Fa.copy(k.vertexNormalsWorld[h]),Qa=0.5*(Fa.x*a.elements[0]+Fa.y*a.elements[4]+Fa.z*a.elements[8])+
0.5,$a=0.5*(Fa.x*a.elements[1]+Fa.y*a.elements[5]+Fa.z*a.elements[9])+0.5,Fa.copy(k.vertexNormalsWorld[j]),yb=0.5*(Fa.x*a.elements[0]+Fa.y*a.elements[4]+Fa.z*a.elements[8])+0.5,zb=0.5*(Fa.x*a.elements[1]+Fa.y*a.elements[5]+Fa.z*a.elements[9])+0.5,w(M,K,L,N,X,$,la,rb,Qa,$a,yb,zb,q.envMap)):!0===q.wireframe?u(q.color,q.wireframeLinewidth,q.wireframeLinecap,q.wireframeLinejoin):v(q.color):q instanceof THREE.MeshDepthMaterial?(wa=l.near,Ea=l.far,ia.r=ia.g=ia.b=1-hc(a.positionScreen.z,wa,Ea),P.r=P.g=P.b=
1-hc(d.positionScreen.z,wa,Ea),W.r=W.g=W.b=1-hc(f.positionScreen.z,wa,Ea),ka.r=0.5*(P.r+W.r),ka.g=0.5*(P.g+W.g),ka.b=0.5*(P.b+W.b),La=xa(ia,P,W,ka),y(M,K,L,N,X,$,0,0,1,0,0,1,La)):q instanceof THREE.MeshNormalMaterial&&(fa.r=lc(k.normalWorld.x),fa.g=lc(k.normalWorld.y),fa.b=lc(k.normalWorld.z),!0===q.wireframe?u(fa,q.wireframeLinewidth,q.wireframeLinecap,q.wireframeLinejoin):v(fa))}function n(a,b,c,d,f,e){q.beginPath();q.moveTo(a,b);q.lineTo(c,d);q.lineTo(f,e);q.closePath()}function t(a,b,c,d,f,e,
g,h){q.beginPath();q.moveTo(a,b);q.lineTo(c,d);q.lineTo(f,e);q.lineTo(g,h);q.closePath()}function u(a,b,c,f){x!==b&&(x=q.lineWidth=b);C!==c&&(C=q.lineCap=c);G!==f&&(G=q.lineJoin=f);d(a.getContextStyle());q.stroke();za.inflate(2*b)}function v(a){f(a.getContextStyle());q.fill()}function w(a,b,c,d,e,g,h,j,l,k,m,p,n){if(!(n instanceof THREE.DataTexture||void 0===n.image||0==n.image.width)){if(!0===n.needsUpdate){var xa=n.wrapS==THREE.RepeatWrapping,r=n.wrapT==THREE.RepeatWrapping;Ka[n.id]=q.createPattern(n.image,
!0===xa&&!0===r?"repeat":!0===xa&&!1===r?"repeat-x":!1===xa&&!0===r?"repeat-y":"no-repeat");n.needsUpdate=!1}void 0===Ka[n.id]?f("rgba(0,0,0,1)"):f(Ka[n.id]);var xa=n.offset.x/n.repeat.x,r=n.offset.y/n.repeat.y,s=n.image.width*n.repeat.x,ub=n.image.height*n.repeat.y;h=(h+xa)*s;j=(1-j+r)*ub;c-=a;d-=b;e-=a;g-=b;l=(l+xa)*s-h;k=(1-k+r)*ub-j;m=(m+xa)*s-h;p=(1-p+r)*ub-j;xa=l*p-m*k;0===xa?(void 0===ra[n.id]&&(b=document.createElement("canvas"),b.width=n.image.width,b.height=n.image.height,b=b.getContext("2d"),
b.drawImage(n.image,0,0),ra[n.id]=b.getImageData(0,0,n.image.width,n.image.height).data),b=ra[n.id],h=4*(Math.floor(h)+Math.floor(j)*n.image.width),fa.setRGB(b[h]/255,b[h+1]/255,b[h+2]/255),v(fa)):(xa=1/xa,n=(p*c-k*e)*xa,k=(p*d-k*g)*xa,c=(l*e-m*c)*xa,d=(l*g-m*d)*xa,a=a-n*h-c*j,h=b-k*h-d*j,q.save(),q.transform(n,k,c,d,a,h),q.fill(),q.restore())}}function y(a,b,c,d,f,e,g,h,j,l,k,m,n){var p,xa;p=n.width-1;xa=n.height-1;g*=p;h*=xa;c-=a;d-=b;f-=a;e-=b;j=j*p-g;l=l*xa-h;k=k*p-g;m=m*xa-h;xa=1/(j*m-k*l);p=
(m*c-l*f)*xa;l=(m*d-l*e)*xa;c=(j*f-k*c)*xa;d=(j*e-k*d)*xa;a=a-p*g-c*h;b=b-l*g-d*h;q.save();q.transform(p,l,c,d,a,b);q.clip();q.drawImage(n,0,0);q.restore()}function xa(a,b,c,d){Ra[0]=255*a.r|0;Ra[1]=255*a.g|0;Ra[2]=255*a.b|0;Ra[4]=255*b.r|0;Ra[5]=255*b.g|0;Ra[6]=255*b.b|0;Ra[8]=255*c.r|0;Ra[9]=255*c.g|0;Ra[10]=255*c.b|0;Ra[12]=255*d.r|0;Ra[13]=255*d.g|0;Ra[14]=255*d.b|0;db.putImageData(ib,0,0);jb.drawImage(cb,0,0);return Sa}function hc(a,b,c){a=(a-b)/(c-b);return a*a*(3-2*a)}function lc(a){a=0.5*
(a+1);return 0>a?0:1<a?1:a}function ub(a,b){var c=b.x-a.x,d=b.y-a.y,f=c*c+d*d;0!==f&&(f=1/Math.sqrt(f),c*=f,d*=f,b.x+=c,b.y+=d,a.x-=c,a.y-=d)}if(!1===l instanceof THREE.Camera)console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.");else{var Xb,Gc,D,Z;!0===this.autoClear?this.clear():q.setTransform(1,0,0,-1,s,r);e.info.render.vertices=0;e.info.render.faces=0;g=k.projectScene(a,l,this.sortObjects,this.sortElements);h=g.elements;j=g.lights;sb=0<j.length;if(!0===sb){Ia.setRGB(0,
0,0);bb.setRGB(0,0,0);tb.setRGB(0,0,0);Xb=0;for(Gc=j.length;Xb<Gc;Xb++){Z=j[Xb];var ea=Z.color;Z instanceof THREE.AmbientLight?(Ia.r+=ea.r,Ia.g+=ea.g,Ia.b+=ea.b):Z instanceof THREE.DirectionalLight?(bb.r+=ea.r,bb.g+=ea.g,bb.b+=ea.b):Z instanceof THREE.PointLight&&(tb.r+=ea.r,tb.g+=ea.g,tb.b+=ea.b)}}Xb=0;for(Gc=h.length;Xb<Gc;Xb++)if(D=h[Xb],Z=D.material,!(void 0===Z||!1===Z.visible)){za.empty();if(D instanceof THREE.RenderableParticle){A=D;A.x*=s;A.y*=r;var ea=A,qa=D;b(Z.opacity);c(Z.blending);var Ga=
void 0,vb=void 0,lb=void 0,mb=void 0,Yb=void 0,Vc=D=void 0;Z instanceof THREE.ParticleBasicMaterial?null===Z.map?(lb=qa.object.scale.x,mb=qa.object.scale.y,lb=lb*qa.scale.x*s,mb=mb*qa.scale.y*r,za.set(ea.x-lb,ea.y-mb,ea.x+lb,ea.y+mb),!1!==hb.intersects(za)&&(f(Z.color.getContextStyle()),q.save(),q.translate(ea.x,ea.y),q.rotate(-qa.rotation),q.scale(lb,mb),q.fillRect(-1,-1,2,2),q.restore())):(Yb=Z.map.image,D=Yb.width>>1,Vc=Yb.height>>1,lb=qa.scale.x*s,mb=qa.scale.y*r,Ga=lb*D,vb=mb*Vc,za.set(ea.x-
Ga,ea.y-vb,ea.x+Ga,ea.y+vb),!1!==hb.intersects(za)&&(q.save(),q.translate(ea.x,ea.y),q.rotate(-qa.rotation),q.scale(lb,-mb),q.translate(-D,-Vc),q.drawImage(Yb,0,0),q.restore())):Z instanceof THREE.ParticleCanvasMaterial&&(Ga=qa.scale.x*s,vb=qa.scale.y*r,za.set(ea.x-Ga,ea.y-vb,ea.x+Ga,ea.y+vb),!1!==hb.intersects(za)&&(d(Z.color.getContextStyle()),f(Z.color.getContextStyle()),q.save(),q.translate(ea.x,ea.y),q.rotate(-qa.rotation),q.scale(Ga,vb),Z.program(q),q.restore()))}else D instanceof THREE.RenderableLine?
(A=D.v1,J=D.v2,A.positionScreen.x*=s,A.positionScreen.y*=r,J.positionScreen.x*=s,J.positionScreen.y*=r,za.addPoint(A.positionScreen.x,A.positionScreen.y),za.addPoint(J.positionScreen.x,J.positionScreen.y),!0===hb.intersects(za)&&(ea=A,qa=J,b(Z.opacity),c(Z.blending),q.beginPath(),q.moveTo(ea.positionScreen.x,ea.positionScreen.y),q.lineTo(qa.positionScreen.x,qa.positionScreen.y),Z instanceof THREE.LineBasicMaterial&&(ea=Z.linewidth,x!==ea&&(x=q.lineWidth=ea),ea=Z.linecap,C!==ea&&(C=q.lineCap=ea),ea=
Z.linejoin,G!==ea&&(G=q.lineJoin=ea),d(Z.color.getContextStyle()),q.stroke(),za.inflate(2*Z.linewidth)))):D instanceof THREE.RenderableFace3?(A=D.v1,J=D.v2,H=D.v3,A.positionScreen.x*=s,A.positionScreen.y*=r,J.positionScreen.x*=s,J.positionScreen.y*=r,H.positionScreen.x*=s,H.positionScreen.y*=r,!0===Z.overdraw&&(ub(A.positionScreen,J.positionScreen),ub(J.positionScreen,H.positionScreen),ub(H.positionScreen,A.positionScreen)),za.add3Points(A.positionScreen.x,A.positionScreen.y,J.positionScreen.x,J.positionScreen.y,
H.positionScreen.x,H.positionScreen.y),!0===hb.intersects(za)&&p(A,J,H,0,1,2,D,Z,a)):D instanceof THREE.RenderableFace4&&(A=D.v1,J=D.v2,H=D.v3,I=D.v4,A.positionScreen.x*=s,A.positionScreen.y*=r,J.positionScreen.x*=s,J.positionScreen.y*=r,H.positionScreen.x*=s,H.positionScreen.y*=r,I.positionScreen.x*=s,I.positionScreen.y*=r,E.positionScreen.copy(J.positionScreen),Q.positionScreen.copy(I.positionScreen),!0===Z.overdraw&&(ub(A.positionScreen,J.positionScreen),ub(J.positionScreen,I.positionScreen),ub(I.positionScreen,
A.positionScreen),ub(H.positionScreen,E.positionScreen),ub(H.positionScreen,Q.positionScreen)),za.addPoint(A.positionScreen.x,A.positionScreen.y),za.addPoint(J.positionScreen.x,J.positionScreen.y),za.addPoint(H.positionScreen.x,H.positionScreen.y),za.addPoint(I.positionScreen.x,I.positionScreen.y),!0===hb.intersects(za)&&(qa=A,Ga=J,vb=H,lb=I,mb=E,Yb=Q,ea=D,D=a,e.info.render.vertices+=4,e.info.render.faces++,b(Z.opacity),c(Z.blending),void 0!==Z.map&&null!==Z.map||void 0!==Z.envMap&&null!==Z.envMap?
(p(qa,Ga,lb,0,1,3,ea,Z,D),p(mb,vb,Yb,1,2,3,ea,Z,D)):(M=qa.positionScreen.x,K=qa.positionScreen.y,L=Ga.positionScreen.x,N=Ga.positionScreen.y,X=vb.positionScreen.x,$=vb.positionScreen.y,ba=lb.positionScreen.x,O=lb.positionScreen.y,da=mb.positionScreen.x,S=mb.positionScreen.y,ha=Yb.positionScreen.x,va=Yb.positionScreen.y,Z instanceof THREE.MeshLambertMaterial||Z instanceof THREE.MeshPhongMaterial?!0===sb?(qa=Z.color,Ga=Z.emissive,!1===Z.wireframe&&Z.shading==THREE.SmoothShading&&4==ea.vertexNormalsLength?
(ia.r=P.r=W.r=ka.r=Ia.r,ia.g=P.g=W.g=ka.g=Ia.g,ia.b=P.b=W.b=ka.b=Ia.b,m(ea.v1.positionWorld,ea.vertexNormalsWorld[0],ia),m(ea.v2.positionWorld,ea.vertexNormalsWorld[1],P),m(ea.v4.positionWorld,ea.vertexNormalsWorld[3],W),m(ea.v3.positionWorld,ea.vertexNormalsWorld[2],ka),ia.r=qa.r*ia.r+Ga.r,ia.g=qa.g*ia.g+Ga.g,ia.b=qa.b*ia.b+Ga.b,P.r=qa.r*P.r+Ga.r,P.g=qa.g*P.g+Ga.g,P.b=qa.b*P.b+Ga.b,W.r=qa.r*W.r+Ga.r,W.g=qa.g*W.g+Ga.g,W.b=qa.b*W.b+Ga.b,ka.r=qa.r*ka.r+Ga.r,ka.g=qa.g*ka.g+Ga.g,ka.b=qa.b*ka.b+Ga.b,La=
xa(ia,P,W,ka),n(M,K,L,N,ba,O),y(M,K,L,N,ba,O,0,0,1,0,0,1,La),n(da,S,X,$,ha,va),y(da,S,X,$,ha,va,1,0,1,1,0,1,La)):(fa.r=Ia.r,fa.g=Ia.g,fa.b=Ia.b,m(ea.centroidWorld,ea.normalWorld,fa),fa.r=qa.r*fa.r+Ga.r,fa.g=qa.g*fa.g+Ga.g,fa.b=qa.b*fa.b+Ga.b,t(M,K,L,N,X,$,ba,O),!0===Z.wireframe?u(fa,Z.wireframeLinewidth,Z.wireframeLinecap,Z.wireframeLinejoin):v(fa))):(t(M,K,L,N,X,$,ba,O),!0===Z.wireframe?u(Z.color,Z.wireframeLinewidth,Z.wireframeLinecap,Z.wireframeLinejoin):v(Z.color)):Z instanceof THREE.MeshBasicMaterial?
(t(M,K,L,N,X,$,ba,O),!0===Z.wireframe?u(Z.color,Z.wireframeLinewidth,Z.wireframeLinecap,Z.wireframeLinejoin):v(Z.color)):Z instanceof THREE.MeshNormalMaterial?(fa.r=lc(ea.normalWorld.x),fa.g=lc(ea.normalWorld.y),fa.b=lc(ea.normalWorld.z),t(M,K,L,N,X,$,ba,O),!0===Z.wireframe?u(fa,Z.wireframeLinewidth,Z.wireframeLinecap,Z.wireframeLinejoin):v(fa)):Z instanceof THREE.MeshDepthMaterial&&(wa=l.near,Ea=l.far,ia.r=ia.g=ia.b=1-hc(qa.positionScreen.z,wa,Ea),P.r=P.g=P.b=1-hc(Ga.positionScreen.z,wa,Ea),W.r=
W.g=W.b=1-hc(lb.positionScreen.z,wa,Ea),ka.r=ka.g=ka.b=1-hc(vb.positionScreen.z,wa,Ea),La=xa(ia,P,W,ka),n(M,K,L,N,ba,O),y(M,K,L,N,ba,O,0,0,1,0,0,1,La),n(da,S,X,$,ha,va),y(da,S,X,$,ha,va,1,0,1,1,0,1,La)))));Ha.addRectangle(za)}q.setTransform(1,0,0,1,0,0)}}};
THREE.ShaderChunk={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\nuniform float reflectivity;\nuniform samplerCube envMap;\nuniform float flipEnvMap;\nuniform int combine;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nuniform bool useRefract;\nuniform float refractionRatio;\n#else\nvarying vec3 vReflect;\n#endif\n#endif",
envmap_fragment:"#ifdef USE_ENVMAP\nvec3 reflectVec;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nreflectVec = refract( cameraToVertex, normal, refractionRatio );\n} else { \nreflectVec = reflect( cameraToVertex, normal );\n}\n#else\nreflectVec = vReflect;\n#endif\n#ifdef DOUBLE_SIDED\nfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\nvec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#else\nvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#endif\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\nif ( combine == 1 ) {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );\n} else {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );\n}\n#endif",
envmap_pars_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvarying vec3 vReflect;\nuniform float refractionRatio;\nuniform bool useRefract;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n#ifdef USE_SKINNING\nvec4 mPosition = modelMatrix * skinned;\n#endif\n#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 mPosition = modelMatrix * vec4( morphed, 1.0 );\n#endif\n#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 mPosition = modelMatrix * vec4( position, 1.0 );\n#endif\n#endif",
envmap_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvec3 nWorld = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\nif ( useRefract ) {\nvReflect = refract( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ), refractionRatio );\n} else {\nvReflect = reflect( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ) );\n}\n#endif",map_particle_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",
map_particle_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\n#endif",map_pars_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\nuniform vec4 offsetRepeat;\n#endif",map_pars_fragment:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\nuniform sampler2D map;\n#endif",
map_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",map_fragment:"#ifdef USE_MAP\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( map, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( map, vUv );\n#endif\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\nuniform sampler2D lightMap;\n#endif",
lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\n#endif",lightmap_fragment:"#ifdef USE_LIGHTMAP\ngl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\nvUv2 = uv2;\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\nuniform sampler2D bumpMap;\nuniform float bumpScale;\nvec2 dHdxy_fwd() {\nvec2 dSTdx = dFdx( vUv );\nvec2 dSTdy = dFdy( vUv );\nfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\nfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\nfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\nreturn vec2( dBx, dBy );\n}\nvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\nvec3 vSigmaX = dFdx( surf_pos );\nvec3 vSigmaY = dFdy( surf_pos );\nvec3 vN = surf_norm;\nvec3 R1 = cross( vSigmaY, vN );\nvec3 R2 = cross( vN, vSigmaX );\nfloat fDet = dot( vSigmaX, R1 );\nvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\nreturn normalize( abs( fDet ) * surf_norm - vGrad );\n}\n#endif",
normalmap_pars_fragment:"#ifdef USE_NORMALMAP\nuniform sampler2D normalMap;\nuniform vec2 normalScale;\nvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\nvec3 q0 = dFdx( eye_pos.xyz );\nvec3 q1 = dFdy( eye_pos.xyz );\nvec2 st0 = dFdx( vUv.st );\nvec2 st1 = dFdy( vUv.st );\nvec3 S = normalize(  q0 * st1.t - q1 * st0.t );\nvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\nvec3 N = normalize( surf_norm );\nvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\nmapN.xy = normalScale * mapN.xy;\nmat3 tsn = mat3( S, T, N );\nreturn normalize( tsn * mapN );\n}\n#endif",
specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\nuniform sampler2D specularMap;\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\nvec4 texelSpecular = texture2D( specularMap, vUv );\nspecularStrength = texelSpecular.r;\n#else\nspecularStrength = 1.0;\n#endif",lights_lambert_pars_vertex:"uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightPosition[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngle[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif",
lights_lambert_vertex:"vLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\nvLightBack = vec3( 0.0 );\n#endif\ntransformedNormal = normalize( transformedNormal );\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, dirVector );\nvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\ndirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\ndirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n#ifdef DOUBLE_SIDED\nvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n#endif\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\npointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\npointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n#ifdef DOUBLE_SIDED\nvLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nlVector = normalize( lVector );\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - mPosition.xyz ) );\nif ( spotEffect > spotLightAngle[ i ] ) {\nspotEffect = pow( spotEffect, spotLightExponent[ i ] );\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\nspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\nspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n#ifdef DOUBLE_SIDED\nvLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( hemisphereLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nfloat hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\nvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n#ifdef DOUBLE_SIDED\nvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n#endif\n}\n#endif\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n#ifdef DOUBLE_SIDED\nvLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n#endif",
lights_phong_pars_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif",
lights_phong_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nvSpotLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvWorldPosition = mPosition.xyz;\n#endif",
lights_phong_pars_fragment:"uniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightPosition[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#else\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngle[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#else\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",
lights_phong_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#ifdef DOUBLE_SIDED\nnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n#endif\n#ifdef USE_NORMALMAP\nnormal = perturbNormal2Arb( -viewPosition, normal );\n#elif defined( USE_BUMPMAP )\nnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse  = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vPointLight[ i ].xyz );\nfloat lDistance = vPointLight[ i ].w;\n#endif\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dotProduct, 0.0 );\n#endif\npointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\nvec3 pointHalfVector = normalize( lVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n#else\npointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse  = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vSpotLight[ i ].xyz );\nfloat lDistance = vSpotLight[ i ].w;\n#endif\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngle[ i ] ) {\nspotEffect = pow( spotEffect, spotLightExponent[ i ] );\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dotProduct, 0.0 );\n#endif\nspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\nvec3 spotHalfVector = normalize( lVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += specular * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse  = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, dirVector );\n#ifdef WRAP_AROUND\nfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dotProduct, 0.0 );\n#endif\ndirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( hemisphereLightPosition[ i ], 1.0 );\nvec3 lVector = normalize( lPosition.xyz + vViewPosition.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += diffuse * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularStrength * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\nvec3 lVectorGround = normalize( -lPosition.xyz + vViewPosition.xyz );\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularStrength * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n#else\nhemiSpecular += specular * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n#endif",
color_pars_fragment:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\ngl_FragColor = gl_FragColor * vec4( vColor, opacity );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n#ifdef GAMMA_INPUT\nvColor = color * color;\n#else\nvColor = color;\n#endif\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n#ifdef BONE_TEXTURE\nuniform sampler2D boneTexture;\nmat4 getBoneMatrix( const in float i ) {\nfloat j = i * 4.0;\nfloat x = mod( j, N_BONE_PIXEL_X );\nfloat y = floor( j / N_BONE_PIXEL_X );\nconst float dx = 1.0 / N_BONE_PIXEL_X;\nconst float dy = 1.0 / N_BONE_PIXEL_Y;\ny = dy * ( y + 0.5 );\nvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\nvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\nvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\nvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\nmat4 bone = mat4( v1, v2, v3, v4 );\nreturn bone;\n}\n#else\nuniform mat4 boneGlobalMatrices[ MAX_BONES ];\nmat4 getBoneMatrix( const in float i ) {\nmat4 bone = boneGlobalMatrices[ int(i) ];\nreturn bone;\n}\n#endif\n#endif",
skinbase_vertex:"#ifdef USE_SKINNING\nmat4 boneMatX = getBoneMatrix( skinIndex.x );\nmat4 boneMatY = getBoneMatrix( skinIndex.y );\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n#ifdef USE_MORPHTARGETS\nvec4 skinVertex = vec4( morphed, 1.0 );\n#else\nvec4 skinVertex = vec4( position, 1.0 );\n#endif\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n#ifndef USE_MORPHNORMALS\nuniform float morphTargetInfluences[ 8 ];\n#else\nuniform float morphTargetInfluences[ 4 ];\n#endif\n#endif",
morphtarget_vertex:"#ifdef USE_MORPHTARGETS\nvec3 morphed = vec3( 0.0 );\nmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\nmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\nmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\nmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n#ifndef USE_MORPHNORMALS\nmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\nmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\nmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\nmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n#endif\nmorphed += position;\n#endif",
default_vertex:"vec4 mvPosition;\n#ifdef USE_SKINNING\nmvPosition = modelViewMatrix * skinned;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( position, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\nvec3 morphedNormal = vec3( 0.0 );\nmorphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\nmorphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\nmorphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\nmorphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\nmorphedNormal += normal;\n#endif",
skinnormal_vertex:"#ifdef USE_SKINNING\nmat4 skinMatrix = skinWeight.x * boneMatX;\nskinMatrix \t+= skinWeight.y * boneMatY;\n#ifdef USE_MORPHNORMALS\nvec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n#else\nvec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n#endif\n#endif",defaultnormal_vertex:"vec3 objectNormal;\n#ifdef USE_SKINNING\nobjectNormal = skinnedNormal.xyz;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )\nobjectNormal = morphedNormal;\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )\nobjectNormal = normal;\n#endif\n#ifdef FLIP_SIDED\nobjectNormal = -objectNormal;\n#endif\nvec3 transformedNormal = normalMatrix * objectNormal;",
shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\nuniform sampler2D shadowMap[ MAX_SHADOWS ];\nuniform vec2 shadowMapSize[ MAX_SHADOWS ];\nuniform float shadowDarkness[ MAX_SHADOWS ];\nuniform float shadowBias[ MAX_SHADOWS ];\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nfloat unpackDepth( const in vec4 rgba_depth ) {\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\nfloat depth = dot( rgba_depth, bit_shift );\nreturn depth;\n}\n#endif",shadowmap_fragment:"#ifdef USE_SHADOWMAP\n#ifdef SHADOWMAP_DEBUG\nvec3 frustumColors[3];\nfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\nfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\nfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n#endif\n#ifdef SHADOWMAP_CASCADE\nint inFrustumCount = 0;\n#endif\nfloat fDepth;\nvec3 shadowColor = vec3( 1.0 );\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\nbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\nbool inFrustum = all( inFrustumVec );\n#ifdef SHADOWMAP_CASCADE\ninFrustumCount += int( inFrustum );\nbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n#else\nbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n#endif\nbool frustumTest = all( frustumTestVec );\nif ( frustumTest ) {\nshadowCoord.z += shadowBias[ i ];\n#ifdef SHADOWMAP_SOFT\nfloat shadow = 0.0;\nconst float shadowDelta = 1.0 / 9.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.25 * xPixelOffset;\nfloat dy0 = -1.25 * yPixelOffset;\nfloat dx1 = 1.25 * xPixelOffset;\nfloat dy1 = 1.25 * yPixelOffset;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#else\nvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < shadowCoord.z )\nshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n#endif\n}\n#ifdef SHADOWMAP_DEBUG\n#ifdef SHADOWMAP_CASCADE\nif ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n#else\nif ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n#endif\n#endif\n}\n#ifdef GAMMA_OUTPUT\nshadowColor *= shadowColor;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n#endif",
shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * mPosition;\n}\n#endif",alphatest_fragment:"#ifdef ALPHATEST\nif ( gl_FragColor.a < ALPHATEST ) discard;\n#endif",linear_to_gamma_fragment:"#ifdef GAMMA_OUTPUT\ngl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n#endif"};
THREE.UniformsUtils={merge:function(a){var b,c,d,f={};for(b=0;b<a.length;b++)for(c in d=this.clone(a[b]),d)f[c]=d[c];return f},clone:function(a){var b,c,d,f={};for(b in a)for(c in f[b]={},a[b])d=a[b][c],f[b][c]=d instanceof THREE.Color||d instanceof THREE.Vector2||d instanceof THREE.Vector3||d instanceof THREE.Vector4||d instanceof THREE.Matrix4||d instanceof THREE.Texture?d.clone():d instanceof Array?d.slice():d;return f}};
THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:0.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",
value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightPosition:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",
value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngle:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",
value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}};
THREE.ShaderLib={depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3},opacity:{type:"f",value:1}},vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float mNear;\nuniform float mFar;\nuniform float opacity;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), opacity );\n}"},normal:{uniforms:{opacity:{type:"f",
value:1}},vertexShader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalMatrix * normal;\ngl_Position = projectionMatrix * mvPosition;\n}",fragmentShader:"uniform float opacity;\nvarying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\n}"},basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,
THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,"#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,
"#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,
THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,
THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,
THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,
THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,
"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"#ifdef DOUBLE_SIDED\nif ( gl_FrontFacing )\ngl_FragColor.xyz *= vLightFront;\nelse\ngl_FragColor.xyz *= vLightBack;\n#else\ngl_FragColor.xyz *= vLightFront;\n#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,
THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",
THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,
THREE.ShaderChunk.defaultnormal_vertex,"vNormal = transformedNormal;",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;",
THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,
THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.color_pars_vertex,
THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n#ifdef USE_SIZEATTENUATION\ngl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n#else\ngl_PointSize = size;\n#endif\ngl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,
THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,"void main() {",
THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"vec4 pack_depth( const in float depth ) {\nconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\nconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\nvec4 res = fract( depth * bit_shift );\nres -= res.xxyz * bit_mask;\nreturn res;\n}\nvoid main() {\ngl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n}"}};
THREE.WebGLRenderer=function(a){function b(a,b){var c=a.vertices.length,d=b.material;if(d.attributes){void 0===a.__webglCustomAttributesList&&(a.__webglCustomAttributesList=[]);for(var f in d.attributes){var e=d.attributes[f];if(!e.__webglInitialized||e.createUniqueBuffers){e.__webglInitialized=!0;var g=1;"v2"===e.type?g=2:"v3"===e.type?g=3:"v4"===e.type?g=4:"c"===e.type&&(g=3);e.size=g;e.array=new Float32Array(c*g);e.buffer=l.createBuffer();e.buffer.belongsToAttribute=f;e.needsUpdate=!0}a.__webglCustomAttributesList.push(e)}}}
function c(a,b){if(a.material&&!(a.material instanceof THREE.MeshFaceMaterial))return a.material;if(0<=b.materialIndex)return a.geometry.materials[b.materialIndex]}function d(a){return a instanceof THREE.MeshBasicMaterial&&!a.envMap||a instanceof THREE.MeshDepthMaterial?!1:a&&void 0!==a.shading&&a.shading===THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading}function f(a){return a.map||a.lightMap||a.bumpMap||a.normalMap||a.specularMap||a instanceof THREE.ShaderMaterial?!0:!1}function e(a){var b,
c,d;for(b in a.attributes)d="index"===b?l.ELEMENT_ARRAY_BUFFER:l.ARRAY_BUFFER,c=a.attributes[b],c.buffer=l.createBuffer(),l.bindBuffer(d,c.buffer),l.bufferData(d,c.array,l.STATIC_DRAW)}function g(a,b,c){var d,f,e,g,h=a.vertices;g=h.length;var j=a.colors,k=j.length,m=a.__vertexArray,n=a.__colorArray,p=a.__sortArray,q=a.verticesNeedUpdate,r=a.colorsNeedUpdate,s=a.__webglCustomAttributesList;if(c.sortParticles){ib.copy(db);ib.multiplySelf(c.matrixWorld);for(d=0;d<g;d++)f=h[d],Ra.copy(f),ib.multiplyVector3(Ra),
p[d]=[Ra.z,d];p.sort(function(a,b){return b[0]-a[0]});for(d=0;d<g;d++)f=h[p[d][1]],e=3*d,m[e]=f.x,m[e+1]=f.y,m[e+2]=f.z;for(d=0;d<k;d++)e=3*d,f=j[p[d][1]],n[e]=f.r,n[e+1]=f.g,n[e+2]=f.b;if(s){j=0;for(k=s.length;j<k;j++)if(h=s[j],void 0===h.boundTo||"vertices"===h.boundTo)if(e=0,f=h.value.length,1===h.size)for(d=0;d<f;d++)g=p[d][1],h.array[d]=h.value[g];else if(2===h.size)for(d=0;d<f;d++)g=p[d][1],g=h.value[g],h.array[e]=g.x,h.array[e+1]=g.y,e+=2;else if(3===h.size)if("c"===h.type)for(d=0;d<f;d++)g=
p[d][1],g=h.value[g],h.array[e]=g.r,h.array[e+1]=g.g,h.array[e+2]=g.b,e+=3;else for(d=0;d<f;d++)g=p[d][1],g=h.value[g],h.array[e]=g.x,h.array[e+1]=g.y,h.array[e+2]=g.z,e+=3;else if(4===h.size)for(d=0;d<f;d++)g=p[d][1],g=h.value[g],h.array[e]=g.x,h.array[e+1]=g.y,h.array[e+2]=g.z,h.array[e+3]=g.w,e+=4}}else{if(q)for(d=0;d<g;d++)f=h[d],e=3*d,m[e]=f.x,m[e+1]=f.y,m[e+2]=f.z;if(r)for(d=0;d<k;d++)f=j[d],e=3*d,n[e]=f.r,n[e+1]=f.g,n[e+2]=f.b;if(s){j=0;for(k=s.length;j<k;j++)if(h=s[j],h.needsUpdate&&(void 0===
h.boundTo||"vertices"===h.boundTo))if(f=h.value.length,e=0,1===h.size)for(d=0;d<f;d++)h.array[d]=h.value[d];else if(2===h.size)for(d=0;d<f;d++)g=h.value[d],h.array[e]=g.x,h.array[e+1]=g.y,e+=2;else if(3===h.size)if("c"===h.type)for(d=0;d<f;d++)g=h.value[d],h.array[e]=g.r,h.array[e+1]=g.g,h.array[e+2]=g.b,e+=3;else for(d=0;d<f;d++)g=h.value[d],h.array[e]=g.x,h.array[e+1]=g.y,h.array[e+2]=g.z,e+=3;else if(4===h.size)for(d=0;d<f;d++)g=h.value[d],h.array[e]=g.x,h.array[e+1]=g.y,h.array[e+2]=g.z,h.array[e+
3]=g.w,e+=4}}if(q||c.sortParticles)l.bindBuffer(l.ARRAY_BUFFER,a.__webglVertexBuffer),l.bufferData(l.ARRAY_BUFFER,m,b);if(r||c.sortParticles)l.bindBuffer(l.ARRAY_BUFFER,a.__webglColorBuffer),l.bufferData(l.ARRAY_BUFFER,n,b);if(s){j=0;for(k=s.length;j<k;j++)if(h=s[j],h.needsUpdate||c.sortParticles)l.bindBuffer(l.ARRAY_BUFFER,h.buffer),l.bufferData(l.ARRAY_BUFFER,h.array,b)}}function h(a,b,c){var d=a.attributes,f=d.index,e=d.position,g=d.normal,h=d.uv,j=d.color,d=d.tangent;a.elementsNeedUpdate&&void 0!==
f&&(l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,f.buffer),l.bufferData(l.ELEMENT_ARRAY_BUFFER,f.array,b));a.verticesNeedUpdate&&void 0!==e&&(l.bindBuffer(l.ARRAY_BUFFER,e.buffer),l.bufferData(l.ARRAY_BUFFER,e.array,b));a.normalsNeedUpdate&&void 0!==g&&(l.bindBuffer(l.ARRAY_BUFFER,g.buffer),l.bufferData(l.ARRAY_BUFFER,g.array,b));a.uvsNeedUpdate&&void 0!==h&&(l.bindBuffer(l.ARRAY_BUFFER,h.buffer),l.bufferData(l.ARRAY_BUFFER,h.array,b));a.colorsNeedUpdate&&void 0!==j&&(l.bindBuffer(l.ARRAY_BUFFER,j.buffer),
l.bufferData(l.ARRAY_BUFFER,j.array,b));a.tangentsNeedUpdate&&void 0!==d&&(l.bindBuffer(l.ARRAY_BUFFER,d.buffer),l.bufferData(l.ARRAY_BUFFER,d.array,b));if(c)for(var k in a.attributes)delete a.attributes[k].array}function j(a,b){return b.z-a.z}function k(a,b){return b[1]-a[1]}function m(a,b,c){if(a.length)for(var d=0,f=a.length;d<f;d++)ka=fa=null,P=W=Ea=wa=$a=Qa=La=-1,jb=!0,a[d].render(b,c,tb,Fa),ka=fa=null,P=W=Ea=wa=$a=Qa=La=-1,jb=!0}function p(a,b,c,d,f,e,g,h){var j,l,k,m;b?(l=a.length-1,m=b=-1):
(l=0,b=a.length,m=1);for(var n=l;n!==b;n+=m)if(j=a[n],j.render){l=j.object;k=j.buffer;if(h)j=h;else{j=j[c];if(!j)continue;g&&S.setBlending(j.blending,j.blendEquation,j.blendSrc,j.blendDst);S.setDepthTest(j.depthTest);S.setDepthWrite(j.depthWrite);C(j.polygonOffset,j.polygonOffsetFactor,j.polygonOffsetUnits)}S.setMaterialFaces(j);k instanceof THREE.BufferGeometry?S.renderBufferDirect(d,f,e,j,k,l):S.renderBuffer(d,f,e,j,k,l)}}function n(a,b,c,d,f,e,g){for(var h,j,l=0,k=a.length;l<k;l++)if(h=a[l],j=
h.object,j.visible){if(g)h=g;else{h=h[b];if(!h)continue;e&&S.setBlending(h.blending,h.blendEquation,h.blendSrc,h.blendDst);S.setDepthTest(h.depthTest);S.setDepthWrite(h.depthWrite);C(h.polygonOffset,h.polygonOffsetFactor,h.polygonOffsetUnits)}S.renderImmediateObject(c,d,f,h,j)}}function s(a,b,c){a.push({buffer:b,object:c,opaque:null,transparent:null})}function r(a){for(var b in a.attributes)if(a.attributes[b].needsUpdate)return!0;return!1}function q(a){for(var b in a.attributes)a.attributes[b].needsUpdate=
!1}function t(a,b){for(var c=a.length-1;0<=c;c--)a[c].object===b&&a.splice(c,1)}function v(a,b){for(var c=a.length-1;0<=c;c--)a[c]===b&&a.splice(c,1)}function w(a,b,c,d,f){ra=0;d.needsUpdate&&(d.program&&S.deallocateMaterial(d),S.initMaterial(d,b,c,f),d.needsUpdate=!1);d.morphTargets&&!f.__webglMorphTargetInfluences&&(f.__webglMorphTargetInfluences=new Float32Array(S.maxMorphTargets));var e=!1,g=d.program,h=g.uniforms,j=d.uniforms;g!==fa&&(l.useProgram(g),fa=g,e=!0);d.id!==P&&(P=d.id,e=!0);if(e||
a!==ka)l.uniformMatrix4fv(h.projectionMatrix,!1,a._projectionMatrixArray),a!==ka&&(ka=a);if(d.skinning)if(gc&&f.useVertexTexture){if(null!==h.boneTexture){var k=y();l.uniform1i(h.boneTexture,k);S.setTexture(f.boneTexture,k)}}else null!==h.boneGlobalMatrices&&l.uniformMatrix4fv(h.boneGlobalMatrices,!1,f.boneMatrices);if(e){c&&d.fog&&(j.fogColor.value=c.color,c instanceof THREE.Fog?(j.fogNear.value=c.near,j.fogFar.value=c.far):c instanceof THREE.FogExp2&&(j.fogDensity.value=c.density));if(d instanceof
THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d.lights){if(jb){var m=0,n=0,p=0,q,r,s,t,u=sc,v=u.directional.colors,w=u.directional.positions,A=u.point.colors,C=u.point.positions,G=u.point.distances,I=u.spot.colors,H=u.spot.positions,L=u.spot.distances,K=u.spot.directions,M=u.spot.angles,N=u.spot.exponents,O=u.hemi.skyColors,W=u.hemi.groundColors,ia=u.hemi.positions,X=0,ba=0,da=0,$=0;c=0;for(e=b.length;c<e;c++)k=b[c],!k.onlyShadow&&k.visible&&(q=k.color,t=k.intensity,r=k.distance,
k instanceof THREE.AmbientLight?S.gammaInput?(m+=q.r*q.r,n+=q.g*q.g,p+=q.b*q.b):(m+=q.r,n+=q.g,p+=q.b):k instanceof THREE.DirectionalLight?(r=3*X,S.gammaInput?D(v,r,q,t*t):x(v,r,q,t),Sa.copy(k.matrixWorld.getPosition()),Sa.subSelf(k.target.matrixWorld.getPosition()),Sa.normalize(),w[r]=Sa.x,w[r+1]=Sa.y,w[r+2]=Sa.z,X+=1):k instanceof THREE.PointLight?(s=3*ba,S.gammaInput?D(A,s,q,t*t):x(A,s,q,t),t=k.matrixWorld.getPosition(),C[s]=t.x,C[s+1]=t.y,C[s+2]=t.z,G[ba]=r,ba+=1):k instanceof THREE.SpotLight?
(s=3*da,S.gammaInput?D(I,s,q,t*t):x(I,s,q,t),t=k.matrixWorld.getPosition(),H[s]=t.x,H[s+1]=t.y,H[s+2]=t.z,L[da]=r,Sa.copy(t),Sa.subSelf(k.target.matrixWorld.getPosition()),Sa.normalize(),K[s]=Sa.x,K[s+1]=Sa.y,K[s+2]=Sa.z,M[da]=Math.cos(k.angle),N[da]=k.exponent,da+=1):k instanceof THREE.HemisphereLight&&(r=k.color,s=k.groundColor,q=3*$,S.gammaInput?(t*=t,D(O,q,r,t),D(W,q,s,t)):(x(O,q,r,t),x(W,q,s,t)),t=k.matrixWorld.getPosition(),ia[q]=t.x,ia[q+1]=t.y,ia[q+2]=t.z,$+=1));c=3*X;for(e=v.length;c<e;c++)v[c]=
0;c=3*ba;for(e=A.length;c<e;c++)A[c]=0;c=3*da;for(e=I.length;c<e;c++)I[c]=0;c=3*$;for(e=O.length;c<e;c++)O[c]=0;c=3*$;for(e=W.length;c<e;c++)W[c]=0;u.directional.length=X;u.point.length=ba;u.spot.length=da;u.hemi.length=$;u.ambient[0]=m;u.ambient[1]=n;u.ambient[2]=p;jb=!1}c=sc;j.ambientLightColor.value=c.ambient;j.directionalLightColor.value=c.directional.colors;j.directionalLightDirection.value=c.directional.positions;j.pointLightColor.value=c.point.colors;j.pointLightPosition.value=c.point.positions;
j.pointLightDistance.value=c.point.distances;j.spotLightColor.value=c.spot.colors;j.spotLightPosition.value=c.spot.positions;j.spotLightDistance.value=c.spot.distances;j.spotLightDirection.value=c.spot.directions;j.spotLightAngle.value=c.spot.angles;j.spotLightExponent.value=c.spot.exponents;j.hemisphereLightSkyColor.value=c.hemi.skyColors;j.hemisphereLightGroundColor.value=c.hemi.groundColors;j.hemisphereLightPosition.value=c.hemi.positions}if(d instanceof THREE.MeshBasicMaterial||d instanceof THREE.MeshLambertMaterial||
d instanceof THREE.MeshPhongMaterial){j.opacity.value=d.opacity;S.gammaInput?j.diffuse.value.copyGammaToLinear(d.color):j.diffuse.value=d.color;j.map.value=d.map;j.lightMap.value=d.lightMap;j.specularMap.value=d.specularMap;d.bumpMap&&(j.bumpMap.value=d.bumpMap,j.bumpScale.value=d.bumpScale);d.normalMap&&(j.normalMap.value=d.normalMap,j.normalScale.value.copy(d.normalScale));var ha;d.map?ha=d.map:d.specularMap?ha=d.specularMap:d.normalMap?ha=d.normalMap:d.bumpMap&&(ha=d.bumpMap);void 0!==ha&&(c=ha.offset,
ha=ha.repeat,j.offsetRepeat.value.set(c.x,c.y,ha.x,ha.y));j.envMap.value=d.envMap;j.flipEnvMap.value=d.envMap instanceof THREE.WebGLRenderTargetCube?1:-1;j.reflectivity.value=d.reflectivity;j.refractionRatio.value=d.refractionRatio;j.combine.value=d.combine;j.useRefract.value=d.envMap&&d.envMap.mapping instanceof THREE.CubeRefractionMapping}d instanceof THREE.LineBasicMaterial?(j.diffuse.value=d.color,j.opacity.value=d.opacity):d instanceof THREE.ParticleBasicMaterial?(j.psColor.value=d.color,j.opacity.value=
d.opacity,j.size.value=d.size,j.scale.value=Q.height/2,j.map.value=d.map):d instanceof THREE.MeshPhongMaterial?(j.shininess.value=d.shininess,S.gammaInput?(j.ambient.value.copyGammaToLinear(d.ambient),j.emissive.value.copyGammaToLinear(d.emissive),j.specular.value.copyGammaToLinear(d.specular)):(j.ambient.value=d.ambient,j.emissive.value=d.emissive,j.specular.value=d.specular),d.wrapAround&&j.wrapRGB.value.copy(d.wrapRGB)):d instanceof THREE.MeshLambertMaterial?(S.gammaInput?(j.ambient.value.copyGammaToLinear(d.ambient),
j.emissive.value.copyGammaToLinear(d.emissive)):(j.ambient.value=d.ambient,j.emissive.value=d.emissive),d.wrapAround&&j.wrapRGB.value.copy(d.wrapRGB)):d instanceof THREE.MeshDepthMaterial?(j.mNear.value=a.near,j.mFar.value=a.far,j.opacity.value=d.opacity):d instanceof THREE.MeshNormalMaterial&&(j.opacity.value=d.opacity);if(f.receiveShadow&&!d._shadowPass&&j.shadowMatrix){c=ha=0;for(e=b.length;c<e;c++)if(k=b[c],k.castShadow&&(k instanceof THREE.SpotLight||k instanceof THREE.DirectionalLight&&!k.shadowCascade))j.shadowMap.value[ha]=
k.shadowMap,j.shadowMapSize.value[ha]=k.shadowMapSize,j.shadowMatrix.value[ha]=k.shadowMatrix,j.shadowDarkness.value[ha]=k.shadowDarkness,j.shadowBias.value[ha]=k.shadowBias,ha++}b=d.uniformsList;j=0;for(ha=b.length;j<ha;j++)if(e=g.uniforms[b[j][1]])if(c=b[j][0],m=c.type,k=c.value,"i"===m)l.uniform1i(e,k);else if("f"===m)l.uniform1f(e,k);else if("v2"===m)l.uniform2f(e,k.x,k.y);else if("v3"===m)l.uniform3f(e,k.x,k.y,k.z);else if("v4"===m)l.uniform4f(e,k.x,k.y,k.z,k.w);else if("c"===m)l.uniform3f(e,
k.r,k.g,k.b);else if("iv1"===m)l.uniform1iv(e,k);else if("iv"===m)l.uniform3iv(e,k);else if("fv1"===m)l.uniform1fv(e,k);else if("fv"===m)l.uniform3fv(e,k);else if("v2v"===m){void 0===c._array&&(c._array=new Float32Array(2*k.length));m=0;for(n=k.length;m<n;m++)p=2*m,c._array[p]=k[m].x,c._array[p+1]=k[m].y;l.uniform2fv(e,c._array)}else if("v3v"===m){void 0===c._array&&(c._array=new Float32Array(3*k.length));m=0;for(n=k.length;m<n;m++)p=3*m,c._array[p]=k[m].x,c._array[p+1]=k[m].y,c._array[p+2]=k[m].z;
l.uniform3fv(e,c._array)}else if("v4v"===m){void 0===c._array&&(c._array=new Float32Array(4*k.length));m=0;for(n=k.length;m<n;m++)p=4*m,c._array[p]=k[m].x,c._array[p+1]=k[m].y,c._array[p+2]=k[m].z,c._array[p+3]=k[m].w;l.uniform4fv(e,c._array)}else if("m4"===m)void 0===c._array&&(c._array=new Float32Array(16)),k.flattenToArray(c._array),l.uniformMatrix4fv(e,!1,c._array);else if("m4v"===m){void 0===c._array&&(c._array=new Float32Array(16*k.length));m=0;for(n=k.length;m<n;m++)k[m].flattenToArrayOffset(c._array,
16*m);l.uniformMatrix4fv(e,!1,c._array)}else if("t"===m){if(p=k,k=y(),l.uniform1i(e,k),p)if(p.image instanceof Array&&6===p.image.length){if(c=p,e=k,6===c.image.length)if(c.needsUpdate){c.image.__webglTextureCube||(c.image.__webglTextureCube=l.createTexture());l.activeTexture(l.TEXTURE0+e);l.bindTexture(l.TEXTURE_CUBE_MAP,c.image.__webglTextureCube);l.pixelStorei(l.UNPACK_FLIP_Y_WEBGL,c.flipY);e=c instanceof THREE.CompressedTexture;k=[];for(m=0;6>m;m++)S.autoScaleCubemaps&&!e?(n=k,p=m,u=c.image[m],
w=Uc,u.width<=w&&u.height<=w||(A=Math.max(u.width,u.height),v=Math.floor(u.width*w/A),w=Math.floor(u.height*w/A),A=document.createElement("canvas"),A.width=v,A.height=w,A.getContext("2d").drawImage(u,0,0,u.width,u.height,0,0,v,w),u=A),n[p]=u):k[m]=c.image[m];m=k[0];n=0===(m.width&m.width-1)&&0===(m.height&m.height-1);p=E(c.format);u=E(c.type);J(l.TEXTURE_CUBE_MAP,c,n);for(m=0;6>m;m++)if(e){w=k[m].mipmaps;A=0;for(C=w.length;A<C;A++)v=w[A],l.compressedTexImage2D(l.TEXTURE_CUBE_MAP_POSITIVE_X+m,A,p,
v.width,v.height,0,v.data)}else l.texImage2D(l.TEXTURE_CUBE_MAP_POSITIVE_X+m,0,p,p,u,k[m]);c.generateMipmaps&&n&&l.generateMipmap(l.TEXTURE_CUBE_MAP);c.needsUpdate=!1;if(c.onUpdate)c.onUpdate()}else l.activeTexture(l.TEXTURE0+e),l.bindTexture(l.TEXTURE_CUBE_MAP,c.image.__webglTextureCube)}else p instanceof THREE.WebGLRenderTargetCube?(c=p,l.activeTexture(l.TEXTURE0+k),l.bindTexture(l.TEXTURE_CUBE_MAP,c.__webglTexture)):S.setTexture(p,k)}else if("tv"===m){void 0===c._array&&(c._array=[]);m=0;for(n=
c.value.length;m<n;m++)c._array[m]=y();l.uniform1iv(e,c._array);m=0;for(n=c.value.length;m<n;m++)p=c.value[m],k=c._array[m],p&&S.setTexture(p,k)}if((d instanceof THREE.ShaderMaterial||d instanceof THREE.MeshPhongMaterial||d.envMap)&&null!==h.cameraPosition)b=a.matrixWorld.getPosition(),l.uniform3f(h.cameraPosition,b.x,b.y,b.z);(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.ShaderMaterial||d.skinning)&&null!==h.viewMatrix&&l.uniformMatrix4fv(h.viewMatrix,
!1,a._viewMatrixArray)}l.uniformMatrix4fv(h.modelViewMatrix,!1,f._modelViewMatrix.elements);h.normalMatrix&&l.uniformMatrix3fv(h.normalMatrix,!1,f._normalMatrix.elements);null!==h.modelMatrix&&l.uniformMatrix4fv(h.modelMatrix,!1,f.matrixWorld.elements);return g}function y(){var a=ra;a>=Fc&&console.warn("Trying to use "+a+" texture units while this GPU supports only "+Fc);ra+=1;return a}function u(a,b){a._modelViewMatrix.multiply(b.matrixWorldInverse,a.matrixWorld);a._normalMatrix.getInverse(a._modelViewMatrix);
a._normalMatrix.transpose()}function D(a,b,c,d){a[b]=c.r*c.r*d;a[b+1]=c.g*c.g*d;a[b+2]=c.b*c.b*d}function x(a,b,c,d){a[b]=c.r*d;a[b+1]=c.g*d;a[b+2]=c.b*d}function C(a,b,c){yb!==a&&(a?l.enable(l.POLYGON_OFFSET_FILL):l.disable(l.POLYGON_OFFSET_FILL),yb=a);if(a&&(zb!==b||hb!==c))l.polygonOffset(b,c),zb=b,hb=c}function G(a){a=a.split("\n");for(var b=0,c=a.length;b<c;b++)a[b]=b+1+": "+a[b];return a.join("\n")}function A(a,b){var c;"fragment"===a?c=l.createShader(l.FRAGMENT_SHADER):"vertex"===a&&(c=l.createShader(l.VERTEX_SHADER));
l.shaderSource(c,b);l.compileShader(c);return!l.getShaderParameter(c,l.COMPILE_STATUS)?(console.error(l.getShaderInfoLog(c)),console.error(G(b)),null):c}function J(a,b,c){c?(l.texParameteri(a,l.TEXTURE_WRAP_S,E(b.wrapS)),l.texParameteri(a,l.TEXTURE_WRAP_T,E(b.wrapT)),l.texParameteri(a,l.TEXTURE_MAG_FILTER,E(b.magFilter)),l.texParameteri(a,l.TEXTURE_MIN_FILTER,E(b.minFilter))):(l.texParameteri(a,l.TEXTURE_WRAP_S,l.CLAMP_TO_EDGE),l.texParameteri(a,l.TEXTURE_WRAP_T,l.CLAMP_TO_EDGE),l.texParameteri(a,
l.TEXTURE_MAG_FILTER,I(b.magFilter)),l.texParameteri(a,l.TEXTURE_MIN_FILTER,I(b.minFilter)));if(Rb&&b.type!==THREE.FloatType&&(1<b.anisotropy||b.__oldAnisotropy))l.texParameterf(a,Rb.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(b.anisotropy,tc)),b.__oldAnisotropy=b.anisotropy}function H(a,b){l.bindRenderbuffer(l.RENDERBUFFER,a);b.depthBuffer&&!b.stencilBuffer?(l.renderbufferStorage(l.RENDERBUFFER,l.DEPTH_COMPONENT16,b.width,b.height),l.framebufferRenderbuffer(l.FRAMEBUFFER,l.DEPTH_ATTACHMENT,l.RENDERBUFFER,
a)):b.depthBuffer&&b.stencilBuffer?(l.renderbufferStorage(l.RENDERBUFFER,l.DEPTH_STENCIL,b.width,b.height),l.framebufferRenderbuffer(l.FRAMEBUFFER,l.DEPTH_STENCIL_ATTACHMENT,l.RENDERBUFFER,a)):l.renderbufferStorage(l.RENDERBUFFER,l.RGBA4,b.width,b.height)}function I(a){return a===THREE.NearestFilter||a===THREE.NearestMipMapNearestFilter||a===THREE.NearestMipMapLinearFilter?l.NEAREST:l.LINEAR}function E(a){if(a===THREE.RepeatWrapping)return l.REPEAT;if(a===THREE.ClampToEdgeWrapping)return l.CLAMP_TO_EDGE;
if(a===THREE.MirroredRepeatWrapping)return l.MIRRORED_REPEAT;if(a===THREE.NearestFilter)return l.NEAREST;if(a===THREE.NearestMipMapNearestFilter)return l.NEAREST_MIPMAP_NEAREST;if(a===THREE.NearestMipMapLinearFilter)return l.NEAREST_MIPMAP_LINEAR;if(a===THREE.LinearFilter)return l.LINEAR;if(a===THREE.LinearMipMapNearestFilter)return l.LINEAR_MIPMAP_NEAREST;if(a===THREE.LinearMipMapLinearFilter)return l.LINEAR_MIPMAP_LINEAR;if(a===THREE.UnsignedByteType)return l.UNSIGNED_BYTE;if(a===THREE.UnsignedShort4444Type)return l.UNSIGNED_SHORT_4_4_4_4;
if(a===THREE.UnsignedShort5551Type)return l.UNSIGNED_SHORT_5_5_5_1;if(a===THREE.UnsignedShort565Type)return l.UNSIGNED_SHORT_5_6_5;if(a===THREE.ByteType)return l.BYTE;if(a===THREE.ShortType)return l.SHORT;if(a===THREE.UnsignedShortType)return l.UNSIGNED_SHORT;if(a===THREE.IntType)return l.INT;if(a===THREE.UnsignedIntType)return l.UNSIGNED_INT;if(a===THREE.FloatType)return l.FLOAT;if(a===THREE.AlphaFormat)return l.ALPHA;if(a===THREE.RGBFormat)return l.RGB;if(a===THREE.RGBAFormat)return l.RGBA;if(a===
THREE.LuminanceFormat)return l.LUMINANCE;if(a===THREE.LuminanceAlphaFormat)return l.LUMINANCE_ALPHA;if(a===THREE.AddEquation)return l.FUNC_ADD;if(a===THREE.SubtractEquation)return l.FUNC_SUBTRACT;if(a===THREE.ReverseSubtractEquation)return l.FUNC_REVERSE_SUBTRACT;if(a===THREE.ZeroFactor)return l.ZERO;if(a===THREE.OneFactor)return l.ONE;if(a===THREE.SrcColorFactor)return l.SRC_COLOR;if(a===THREE.OneMinusSrcColorFactor)return l.ONE_MINUS_SRC_COLOR;if(a===THREE.SrcAlphaFactor)return l.SRC_ALPHA;if(a===
THREE.OneMinusSrcAlphaFactor)return l.ONE_MINUS_SRC_ALPHA;if(a===THREE.DstAlphaFactor)return l.DST_ALPHA;if(a===THREE.OneMinusDstAlphaFactor)return l.ONE_MINUS_DST_ALPHA;if(a===THREE.DstColorFactor)return l.DST_COLOR;if(a===THREE.OneMinusDstColorFactor)return l.ONE_MINUS_DST_COLOR;if(a===THREE.SrcAlphaSaturateFactor)return l.SRC_ALPHA_SATURATE;if(void 0!==Ab){if(a===THREE.RGB_S3TC_DXT1_Format)return Ab.COMPRESSED_RGB_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT1_Format)return Ab.COMPRESSED_RGBA_S3TC_DXT1_EXT;
if(a===THREE.RGBA_S3TC_DXT3_Format)return Ab.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(a===THREE.RGBA_S3TC_DXT5_Format)return Ab.COMPRESSED_RGBA_S3TC_DXT5_EXT}return 0}console.log("THREE.WebGLRenderer",THREE.REVISION);a=a||{};var Q=void 0!==a.canvas?a.canvas:document.createElement("canvas"),M=void 0!==a.precision?a.precision:"highp",K=void 0!==a.alpha?a.alpha:!0,L=void 0!==a.premultipliedAlpha?a.premultipliedAlpha:!0,N=void 0!==a.antialias?a.antialias:!1,X=void 0!==a.stencil?a.stencil:!0,$=void 0!==a.preserveDrawingBuffer?
a.preserveDrawingBuffer:!1,ba=void 0!==a.clearColor?new THREE.Color(a.clearColor):new THREE.Color(0),O=void 0!==a.clearAlpha?a.clearAlpha:0,da=void 0!==a.maxLights?a.maxLights:4;this.domElement=Q;this.context=null;this.autoUpdateScene=this.autoUpdateObjects=this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0;this.shadowMapEnabled=this.physicallyBasedShading=this.gammaOutput=this.gammaInput=!1;this.shadowMapCullFrontFaces=this.shadowMapSoft=this.shadowMapAutoUpdate=
!0;this.shadowMapCascade=this.shadowMapDebug=!1;this.maxMorphTargets=8;this.maxMorphNormals=4;this.autoScaleCubemaps=!0;this.renderPluginsPre=[];this.renderPluginsPost=[];this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var S=this,ha=[],va=0,fa=null,ia=null,P=-1,W=null,ka=null,Ka=0,ra=0,wa=-1,Ea=-1,La=-1,Za=-1,la=-1,rb=-1,Qa=-1,$a=-1,yb=null,zb=null,hb=null,Ha=null,za=0,sb=0,Ia=0,bb=0,tb=0,Fa=0,cb=new THREE.Frustum,db=new THREE.Matrix4,ib=new THREE.Matrix4,
Ra=new THREE.Vector4,Sa=new THREE.Vector3,jb=!0,sc={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],angles:[],exponents:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}},l,Rb,Ab;try{if(!(l=Q.getContext("experimental-webgl",{alpha:K,premultipliedAlpha:L,antialias:N,stencil:X,preserveDrawingBuffer:$})))throw"Error creating WebGL context.";}catch(Tc){console.error(Tc)}a=
l.getExtension("OES_texture_float");K=l.getExtension("OES_standard_derivatives");Rb=l.getExtension("EXT_texture_filter_anisotropic")||l.getExtension("MOZ_EXT_texture_filter_anisotropic")||l.getExtension("WEBKIT_EXT_texture_filter_anisotropic");Ab=l.getExtension("WEBGL_compressed_texture_s3tc")||l.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||l.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");a||console.log("THREE.WebGLRenderer: Float textures not supported.");K||console.log("THREE.WebGLRenderer: Standard derivatives not supported.");
Rb||console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported.");Ab||console.log("THREE.WebGLRenderer: S3TC compressed textures not supported.");l.clearColor(0,0,0,1);l.clearDepth(1);l.clearStencil(0);l.enable(l.DEPTH_TEST);l.depthFunc(l.LEQUAL);l.frontFace(l.CCW);l.cullFace(l.BACK);l.enable(l.CULL_FACE);l.enable(l.BLEND);l.blendEquation(l.FUNC_ADD);l.blendFunc(l.SRC_ALPHA,l.ONE_MINUS_SRC_ALPHA);l.clearColor(ba.r,ba.g,ba.b,O);this.context=l;var Fc=l.getParameter(l.MAX_TEXTURE_IMAGE_UNITS),
K=l.getParameter(l.MAX_VERTEX_TEXTURE_IMAGE_UNITS);l.getParameter(l.MAX_TEXTURE_SIZE);var Uc=l.getParameter(l.MAX_CUBE_MAP_TEXTURE_SIZE),tc=Rb?l.getParameter(Rb.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,kc=0<K,gc=kc&&a;Ab&&l.getParameter(l.COMPRESSED_TEXTURE_FORMATS);this.getContext=function(){return l};this.supportsVertexTextures=function(){return kc};this.getMaxAnisotropy=function(){return tc};this.setSize=function(a,b){Q.width=a;Q.height=b;this.setViewport(0,0,Q.width,Q.height)};this.setViewport=function(a,
b,c,d){za=void 0!==a?a:0;sb=void 0!==b?b:0;Ia=void 0!==c?c:Q.width;bb=void 0!==d?d:Q.height;l.viewport(za,sb,Ia,bb)};this.setScissor=function(a,b,c,d){l.scissor(a,b,c,d)};this.enableScissorTest=function(a){a?l.enable(l.SCISSOR_TEST):l.disable(l.SCISSOR_TEST)};this.setClearColorHex=function(a,b){ba.setHex(a);O=b;l.clearColor(ba.r,ba.g,ba.b,O)};this.setClearColor=function(a,b){ba.copy(a);O=b;l.clearColor(ba.r,ba.g,ba.b,O)};this.getClearColor=function(){return ba};this.getClearAlpha=function(){return O};
this.clear=function(a,b,c){var d=0;if(void 0===a||a)d|=l.COLOR_BUFFER_BIT;if(void 0===b||b)d|=l.DEPTH_BUFFER_BIT;if(void 0===c||c)d|=l.STENCIL_BUFFER_BIT;l.clear(d)};this.clearTarget=function(a,b,c,d){this.setRenderTarget(a);this.clear(b,c,d)};this.addPostPlugin=function(a){a.init(this);this.renderPluginsPost.push(a)};this.addPrePlugin=function(a){a.init(this);this.renderPluginsPre.push(a)};this.deallocateObject=function(a){if(a.__webglInit)if(a.__webglInit=!1,delete a._modelViewMatrix,delete a._normalMatrix,
delete a._normalMatrixArray,delete a._modelViewMatrixArray,delete a._modelMatrixArray,a instanceof THREE.Mesh)for(var b in a.geometry.geometryGroups){var c=a.geometry.geometryGroups[b];l.deleteBuffer(c.__webglVertexBuffer);l.deleteBuffer(c.__webglNormalBuffer);l.deleteBuffer(c.__webglTangentBuffer);l.deleteBuffer(c.__webglColorBuffer);l.deleteBuffer(c.__webglUVBuffer);l.deleteBuffer(c.__webglUV2Buffer);l.deleteBuffer(c.__webglSkinIndicesBuffer);l.deleteBuffer(c.__webglSkinWeightsBuffer);l.deleteBuffer(c.__webglFaceBuffer);
l.deleteBuffer(c.__webglLineBuffer);var d=void 0,e=void 0;if(c.numMorphTargets){d=0;for(e=c.numMorphTargets;d<e;d++)l.deleteBuffer(c.__webglMorphTargetsBuffers[d])}if(c.numMorphNormals){d=0;for(e=c.numMorphNormals;d<e;d++)l.deleteBuffer(c.__webglMorphNormalsBuffers[d])}if(c.__webglCustomAttributesList)for(d in d=void 0,c.__webglCustomAttributesList)l.deleteBuffer(c.__webglCustomAttributesList[d].buffer);S.info.memory.geometries--}else a instanceof THREE.Ribbon?(a=a.geometry,l.deleteBuffer(a.__webglVertexBuffer),
l.deleteBuffer(a.__webglColorBuffer),S.info.memory.geometries--):a instanceof THREE.Line?(a=a.geometry,l.deleteBuffer(a.__webglVertexBuffer),l.deleteBuffer(a.__webglColorBuffer),S.info.memory.geometries--):a instanceof THREE.ParticleSystem&&(a=a.geometry,l.deleteBuffer(a.__webglVertexBuffer),l.deleteBuffer(a.__webglColorBuffer),S.info.memory.geometries--)};this.deallocateTexture=function(a){a.__webglInit&&(a.__webglInit=!1,l.deleteTexture(a.__webglTexture),S.info.memory.textures--)};this.deallocateRenderTarget=
function(a){if(a&&a.__webglTexture)if(l.deleteTexture(a.__webglTexture),a instanceof THREE.WebGLRenderTargetCube)for(var b=0;6>b;b++)l.deleteFramebuffer(a.__webglFramebuffer[b]),l.deleteRenderbuffer(a.__webglRenderbuffer[b]);else l.deleteFramebuffer(a.__webglFramebuffer),l.deleteRenderbuffer(a.__webglRenderbuffer)};this.deallocateMaterial=function(a){var b=a.program;if(b){a.program=void 0;var c,d,e=!1;a=0;for(c=ha.length;a<c;a++)if(d=ha[a],d.program===b){d.usedTimes--;0===d.usedTimes&&(e=!0);break}if(e){e=
[];a=0;for(c=ha.length;a<c;a++)d=ha[a],d.program!==b&&e.push(d);ha=e;l.deleteProgram(b);S.info.memory.programs--}}};this.updateShadowMap=function(a,b){fa=null;P=W=$a=Qa=La=-1;jb=!0;Ea=wa=-1;this.shadowMapPlugin.update(a,b)};this.renderBufferImmediate=function(a,b,c){a.hasPositions&&!a.__webglVertexBuffer&&(a.__webglVertexBuffer=l.createBuffer());a.hasNormals&&!a.__webglNormalBuffer&&(a.__webglNormalBuffer=l.createBuffer());a.hasUvs&&!a.__webglUvBuffer&&(a.__webglUvBuffer=l.createBuffer());a.hasColors&&
!a.__webglColorBuffer&&(a.__webglColorBuffer=l.createBuffer());a.hasPositions&&(l.bindBuffer(l.ARRAY_BUFFER,a.__webglVertexBuffer),l.bufferData(l.ARRAY_BUFFER,a.positionArray,l.DYNAMIC_DRAW),l.enableVertexAttribArray(b.attributes.position),l.vertexAttribPointer(b.attributes.position,3,l.FLOAT,!1,0,0));if(a.hasNormals){l.bindBuffer(l.ARRAY_BUFFER,a.__webglNormalBuffer);if(c.shading===THREE.FlatShading){var d,e,f,g,h,j,k,m,p,n,q,r=3*a.count;for(q=0;q<r;q+=9)n=a.normalArray,d=n[q],e=n[q+1],f=n[q+2],
g=n[q+3],j=n[q+4],m=n[q+5],h=n[q+6],k=n[q+7],p=n[q+8],d=(d+g+h)/3,e=(e+j+k)/3,f=(f+m+p)/3,n[q]=d,n[q+1]=e,n[q+2]=f,n[q+3]=d,n[q+4]=e,n[q+5]=f,n[q+6]=d,n[q+7]=e,n[q+8]=f}l.bufferData(l.ARRAY_BUFFER,a.normalArray,l.DYNAMIC_DRAW);l.enableVertexAttribArray(b.attributes.normal);l.vertexAttribPointer(b.attributes.normal,3,l.FLOAT,!1,0,0)}a.hasUvs&&c.map&&(l.bindBuffer(l.ARRAY_BUFFER,a.__webglUvBuffer),l.bufferData(l.ARRAY_BUFFER,a.uvArray,l.DYNAMIC_DRAW),l.enableVertexAttribArray(b.attributes.uv),l.vertexAttribPointer(b.attributes.uv,
2,l.FLOAT,!1,0,0));a.hasColors&&c.vertexColors!==THREE.NoColors&&(l.bindBuffer(l.ARRAY_BUFFER,a.__webglColorBuffer),l.bufferData(l.ARRAY_BUFFER,a.colorArray,l.DYNAMIC_DRAW),l.enableVertexAttribArray(b.attributes.color),l.vertexAttribPointer(b.attributes.color,3,l.FLOAT,!1,0,0));l.drawArrays(l.TRIANGLES,0,a.count);a.count=0};this.renderBufferDirect=function(a,b,c,d,e,f){if(!1!==d.visible)if(c=w(a,b,c,d,f),a=c.attributes,b=!1,d=16777215*e.id+2*c.id+(d.wireframe?1:0),d!==W&&(W=d,b=!0),f instanceof THREE.Mesh){f=
e.offsets;1<f.length&&(b=!0);d=0;for(c=f.length;d<c;++d){var g=f[d].index;if(b){var h=e.attributes.position,j=h.itemSize;l.bindBuffer(l.ARRAY_BUFFER,h.buffer);l.vertexAttribPointer(a.position,j,l.FLOAT,!1,0,4*g*j);h=e.attributes.normal;0<=a.normal&&h&&(j=h.itemSize,l.bindBuffer(l.ARRAY_BUFFER,h.buffer),l.vertexAttribPointer(a.normal,j,l.FLOAT,!1,0,4*g*j));h=e.attributes.uv;0<=a.uv&&h&&(h.buffer?(j=h.itemSize,l.bindBuffer(l.ARRAY_BUFFER,h.buffer),l.vertexAttribPointer(a.uv,j,l.FLOAT,!1,0,4*g*j),l.enableVertexAttribArray(a.uv)):
l.disableVertexAttribArray(a.uv));j=e.attributes.color;if(0<=a.color&&j){var k=j.itemSize;l.bindBuffer(l.ARRAY_BUFFER,j.buffer);l.vertexAttribPointer(a.color,k,l.FLOAT,!1,0,4*g*k)}h=e.attributes.tangent;0<=a.tangent&&h&&(j=h.itemSize,l.bindBuffer(l.ARRAY_BUFFER,h.buffer),l.vertexAttribPointer(a.tangent,j,l.FLOAT,!1,0,4*g*j));l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,e.attributes.index.buffer)}l.drawElements(l.TRIANGLES,f[d].count,l.UNSIGNED_SHORT,2*f[d].start);S.info.render.calls++;S.info.render.vertices+=
f[d].count;S.info.render.faces+=f[d].count/3}}else f instanceof THREE.ParticleSystem&&b&&(h=e.attributes.position,j=h.itemSize,l.bindBuffer(l.ARRAY_BUFFER,h.buffer),l.vertexAttribPointer(a.position,j,l.FLOAT,!1,0,0),j=e.attributes.color,0<=a.color&&j&&(k=j.itemSize,l.bindBuffer(l.ARRAY_BUFFER,j.buffer),l.vertexAttribPointer(a.color,k,l.FLOAT,!1,0,0)),l.drawArrays(l.POINTS,0,h.numItems/3),S.info.render.calls++,S.info.render.points+=h.numItems/3)};this.renderBuffer=function(a,b,c,d,e,f){if(!1!==d.visible){var g,
h;c=w(a,b,c,d,f);b=c.attributes;a=!1;c=16777215*e.id+2*c.id+(d.wireframe?1:0);c!==W&&(W=c,a=!0);if(!d.morphTargets&&0<=b.position)a&&(l.bindBuffer(l.ARRAY_BUFFER,e.__webglVertexBuffer),l.vertexAttribPointer(b.position,3,l.FLOAT,!1,0,0));else if(f.morphTargetBase){c=d.program.attributes;-1!==f.morphTargetBase?(l.bindBuffer(l.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[f.morphTargetBase]),l.vertexAttribPointer(c.position,3,l.FLOAT,!1,0,0)):0<=c.position&&(l.bindBuffer(l.ARRAY_BUFFER,e.__webglVertexBuffer),
l.vertexAttribPointer(c.position,3,l.FLOAT,!1,0,0));if(f.morphTargetForcedOrder.length){var j=0;h=f.morphTargetForcedOrder;for(g=f.morphTargetInfluences;j<d.numSupportedMorphTargets&&j<h.length;)l.bindBuffer(l.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[h[j]]),l.vertexAttribPointer(c["morphTarget"+j],3,l.FLOAT,!1,0,0),d.morphNormals&&(l.bindBuffer(l.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[h[j]]),l.vertexAttribPointer(c["morphNormal"+j],3,l.FLOAT,!1,0,0)),f.__webglMorphTargetInfluences[j]=g[h[j]],
j++}else{h=[];g=f.morphTargetInfluences;var m,n=g.length;for(m=0;m<n;m++)j=g[m],0<j&&h.push([m,j]);h.length>d.numSupportedMorphTargets?(h.sort(k),h.length=d.numSupportedMorphTargets):h.length>d.numSupportedMorphNormals?h.sort(k):0===h.length&&h.push([0,0]);for(j=0;j<d.numSupportedMorphTargets;)h[j]?(m=h[j][0],l.bindBuffer(l.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[m]),l.vertexAttribPointer(c["morphTarget"+j],3,l.FLOAT,!1,0,0),d.morphNormals&&(l.bindBuffer(l.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[m]),
l.vertexAttribPointer(c["morphNormal"+j],3,l.FLOAT,!1,0,0)),f.__webglMorphTargetInfluences[j]=g[m]):(l.vertexAttribPointer(c["morphTarget"+j],3,l.FLOAT,!1,0,0),d.morphNormals&&l.vertexAttribPointer(c["morphNormal"+j],3,l.FLOAT,!1,0,0),f.__webglMorphTargetInfluences[j]=0),j++}null!==d.program.uniforms.morphTargetInfluences&&l.uniform1fv(d.program.uniforms.morphTargetInfluences,f.__webglMorphTargetInfluences)}if(a){if(e.__webglCustomAttributesList){g=0;for(h=e.__webglCustomAttributesList.length;g<h;g++)c=
e.__webglCustomAttributesList[g],0<=b[c.buffer.belongsToAttribute]&&(l.bindBuffer(l.ARRAY_BUFFER,c.buffer),l.vertexAttribPointer(b[c.buffer.belongsToAttribute],c.size,l.FLOAT,!1,0,0))}0<=b.color&&(l.bindBuffer(l.ARRAY_BUFFER,e.__webglColorBuffer),l.vertexAttribPointer(b.color,3,l.FLOAT,!1,0,0));0<=b.normal&&(l.bindBuffer(l.ARRAY_BUFFER,e.__webglNormalBuffer),l.vertexAttribPointer(b.normal,3,l.FLOAT,!1,0,0));0<=b.tangent&&(l.bindBuffer(l.ARRAY_BUFFER,e.__webglTangentBuffer),l.vertexAttribPointer(b.tangent,
4,l.FLOAT,!1,0,0));0<=b.uv&&(e.__webglUVBuffer?(l.bindBuffer(l.ARRAY_BUFFER,e.__webglUVBuffer),l.vertexAttribPointer(b.uv,2,l.FLOAT,!1,0,0),l.enableVertexAttribArray(b.uv)):l.disableVertexAttribArray(b.uv));0<=b.uv2&&(e.__webglUV2Buffer?(l.bindBuffer(l.ARRAY_BUFFER,e.__webglUV2Buffer),l.vertexAttribPointer(b.uv2,2,l.FLOAT,!1,0,0),l.enableVertexAttribArray(b.uv2)):l.disableVertexAttribArray(b.uv2));d.skinning&&(0<=b.skinIndex&&0<=b.skinWeight)&&(l.bindBuffer(l.ARRAY_BUFFER,e.__webglSkinIndicesBuffer),
l.vertexAttribPointer(b.skinIndex,4,l.FLOAT,!1,0,0),l.bindBuffer(l.ARRAY_BUFFER,e.__webglSkinWeightsBuffer),l.vertexAttribPointer(b.skinWeight,4,l.FLOAT,!1,0,0))}f instanceof THREE.Mesh?(d.wireframe?(d=d.wireframeLinewidth,d!==Ha&&(l.lineWidth(d),Ha=d),a&&l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,e.__webglLineBuffer),l.drawElements(l.LINES,e.__webglLineCount,l.UNSIGNED_SHORT,0)):(a&&l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,e.__webglFaceBuffer),l.drawElements(l.TRIANGLES,e.__webglFaceCount,l.UNSIGNED_SHORT,0)),
S.info.render.calls++,S.info.render.vertices+=e.__webglFaceCount,S.info.render.faces+=e.__webglFaceCount/3):f instanceof THREE.Line?(f=f.type===THREE.LineStrip?l.LINE_STRIP:l.LINES,d=d.linewidth,d!==Ha&&(l.lineWidth(d),Ha=d),l.drawArrays(f,0,e.__webglLineCount),S.info.render.calls++):f instanceof THREE.ParticleSystem?(l.drawArrays(l.POINTS,0,e.__webglParticleCount),S.info.render.calls++,S.info.render.points+=e.__webglParticleCount):f instanceof THREE.Ribbon&&(l.drawArrays(l.TRIANGLE_STRIP,0,e.__webglVertexCount),
S.info.render.calls++)}};this.render=function(a,b,c,d){if(!1===b instanceof THREE.Camera)console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");else{var e,f,g,h,k=a.__lights,q=a.fog;P=-1;jb=!0;this.autoUpdateScene&&a.updateMatrixWorld();void 0===b.parent&&b.updateMatrixWorld();b._viewMatrixArray||(b._viewMatrixArray=new Float32Array(16));b._projectionMatrixArray||(b._projectionMatrixArray=new Float32Array(16));b.matrixWorldInverse.getInverse(b.matrixWorld);b.matrixWorldInverse.flattenToArray(b._viewMatrixArray);
b.projectionMatrix.flattenToArray(b._projectionMatrixArray);db.multiply(b.projectionMatrix,b.matrixWorldInverse);cb.setFromMatrix(db);this.autoUpdateObjects&&this.initWebGLObjects(a);m(this.renderPluginsPre,a,b);S.info.render.calls=0;S.info.render.vertices=0;S.info.render.faces=0;S.info.render.points=0;this.setRenderTarget(c);(this.autoClear||d)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil);h=a.__webglObjects;d=0;for(e=h.length;d<e;d++)if(f=h[d],g=f.object,f.render=!1,
g.visible&&(!(g instanceof THREE.Mesh||g instanceof THREE.ParticleSystem)||!g.frustumCulled||cb.contains(g))){u(g,b);var r=f,s=r.object,t=r.buffer,v=void 0,v=s.material;v instanceof THREE.MeshFaceMaterial?(v=t.materialIndex,0<=v&&(v=s.geometry.materials[v],v.transparent?(r.transparent=v,r.opaque=null):(r.opaque=v,r.transparent=null))):v&&(v.transparent?(r.transparent=v,r.opaque=null):(r.opaque=v,r.transparent=null));f.render=!0;!0===this.sortObjects&&(null!==g.renderDepth?f.z=g.renderDepth:(Ra.copy(g.matrixWorld.getPosition()),
db.multiplyVector3(Ra),f.z=Ra.z))}this.sortObjects&&h.sort(j);h=a.__webglObjectsImmediate;d=0;for(e=h.length;d<e;d++)f=h[d],g=f.object,g.visible&&(u(g,b),g=f.object.material,g.transparent?(f.transparent=g,f.opaque=null):(f.opaque=g,f.transparent=null));a.overrideMaterial?(d=a.overrideMaterial,this.setBlending(d.blending,d.blendEquation,d.blendSrc,d.blendDst),this.setDepthTest(d.depthTest),this.setDepthWrite(d.depthWrite),C(d.polygonOffset,d.polygonOffsetFactor,d.polygonOffsetUnits),p(a.__webglObjects,
!1,"",b,k,q,!0,d),n(a.__webglObjectsImmediate,"",b,k,q,!1,d)):(this.setBlending(THREE.NormalBlending),p(a.__webglObjects,!0,"opaque",b,k,q,!1),n(a.__webglObjectsImmediate,"opaque",b,k,q,!1),p(a.__webglObjects,!1,"transparent",b,k,q,!0),n(a.__webglObjectsImmediate,"transparent",b,k,q,!0));m(this.renderPluginsPost,a,b);c&&(c.generateMipmaps&&c.minFilter!==THREE.NearestFilter&&c.minFilter!==THREE.LinearFilter)&&(c instanceof THREE.WebGLRenderTargetCube?(l.bindTexture(l.TEXTURE_CUBE_MAP,c.__webglTexture),
l.generateMipmap(l.TEXTURE_CUBE_MAP),l.bindTexture(l.TEXTURE_CUBE_MAP,null)):(l.bindTexture(l.TEXTURE_2D,c.__webglTexture),l.generateMipmap(l.TEXTURE_2D),l.bindTexture(l.TEXTURE_2D,null)));this.setDepthTest(!0);this.setDepthWrite(!0)}};this.renderImmediateObject=function(a,b,c,d,e){var f=w(a,b,c,d,e);W=-1;S.setMaterialFaces(d);e.immediateRenderCallback?e.immediateRenderCallback(f,l,cb):e.render(function(a){S.renderBufferImmediate(a,f,d)})};this.initWebGLObjects=function(a){a.__webglObjects||(a.__webglObjects=
[],a.__webglObjectsImmediate=[],a.__webglSprites=[],a.__webglFlares=[]);for(;a.__objectsAdded.length;){var j=a.__objectsAdded[0],k=a,m=void 0,n=void 0,p=void 0;if(!j.__webglInit)if(j.__webglInit=!0,j._modelViewMatrix=new THREE.Matrix4,j._normalMatrix=new THREE.Matrix3,j instanceof THREE.Mesh)if(n=j.geometry,n instanceof THREE.Geometry){if(void 0===n.geometryGroups){var u=n,w=void 0,x=void 0,y=void 0,A=void 0,D=void 0,C=void 0,E=void 0,G={},I=u.morphTargets.length,H=u.morphNormals.length;u.geometryGroups=
{};w=0;for(x=u.faces.length;w<x;w++)y=u.faces[w],A=y.materialIndex,C=void 0!==A?A:-1,void 0===G[C]&&(G[C]={hash:C,counter:0}),E=G[C].hash+"_"+G[C].counter,void 0===u.geometryGroups[E]&&(u.geometryGroups[E]={faces3:[],faces4:[],materialIndex:A,vertices:0,numMorphTargets:I,numMorphNormals:H}),D=y instanceof THREE.Face3?3:4,65535<u.geometryGroups[E].vertices+D&&(G[C].counter+=1,E=G[C].hash+"_"+G[C].counter,void 0===u.geometryGroups[E]&&(u.geometryGroups[E]={faces3:[],faces4:[],materialIndex:A,vertices:0,
numMorphTargets:I,numMorphNormals:H})),y instanceof THREE.Face3?u.geometryGroups[E].faces3.push(w):u.geometryGroups[E].faces4.push(w),u.geometryGroups[E].vertices+=D;u.geometryGroupsList=[];var L=void 0;for(L in u.geometryGroups)u.geometryGroups[L].id=Ka++,u.geometryGroupsList.push(u.geometryGroups[L])}for(m in n.geometryGroups)if(p=n.geometryGroups[m],!p.__webglVertexBuffer){var J=p;J.__webglVertexBuffer=l.createBuffer();J.__webglNormalBuffer=l.createBuffer();J.__webglTangentBuffer=l.createBuffer();
J.__webglColorBuffer=l.createBuffer();J.__webglUVBuffer=l.createBuffer();J.__webglUV2Buffer=l.createBuffer();J.__webglSkinIndicesBuffer=l.createBuffer();J.__webglSkinWeightsBuffer=l.createBuffer();J.__webglFaceBuffer=l.createBuffer();J.__webglLineBuffer=l.createBuffer();var K=void 0,O=void 0;if(J.numMorphTargets){J.__webglMorphTargetsBuffers=[];K=0;for(O=J.numMorphTargets;K<O;K++)J.__webglMorphTargetsBuffers.push(l.createBuffer())}if(J.numMorphNormals){J.__webglMorphNormalsBuffers=[];K=0;for(O=J.numMorphNormals;K<
O;K++)J.__webglMorphNormalsBuffers.push(l.createBuffer())}S.info.memory.geometries++;var P=p,M=j,N=M.geometry,Q=P.faces3,fa=P.faces4,W=3*Q.length+4*fa.length,ia=1*Q.length+2*fa.length,X=3*Q.length+4*fa.length,ba=c(M,P),da=f(ba),ka=d(ba),ha=ba.vertexColors?ba.vertexColors:!1;P.__vertexArray=new Float32Array(3*W);ka&&(P.__normalArray=new Float32Array(3*W));N.hasTangents&&(P.__tangentArray=new Float32Array(4*W));ha&&(P.__colorArray=new Float32Array(3*W));if(da){if(0<N.faceUvs.length||0<N.faceVertexUvs.length)P.__uvArray=
new Float32Array(2*W);if(1<N.faceUvs.length||1<N.faceVertexUvs.length)P.__uv2Array=new Float32Array(2*W)}M.geometry.skinWeights.length&&M.geometry.skinIndices.length&&(P.__skinIndexArray=new Float32Array(4*W),P.__skinWeightArray=new Float32Array(4*W));P.__faceArray=new Uint16Array(3*ia);P.__lineArray=new Uint16Array(2*X);var $=void 0,ra=void 0;if(P.numMorphTargets){P.__morphTargetsArrays=[];$=0;for(ra=P.numMorphTargets;$<ra;$++)P.__morphTargetsArrays.push(new Float32Array(3*W))}if(P.numMorphNormals){P.__morphNormalsArrays=
[];$=0;for(ra=P.numMorphNormals;$<ra;$++)P.__morphNormalsArrays.push(new Float32Array(3*W))}P.__webglFaceCount=3*ia;P.__webglLineCount=2*X;if(ba.attributes){void 0===P.__webglCustomAttributesList&&(P.__webglCustomAttributesList=[]);var wa=void 0;for(wa in ba.attributes){var Ea=ba.attributes[wa],la={},La;for(La in Ea)la[La]=Ea[La];if(!la.__webglInitialized||la.createUniqueBuffers){la.__webglInitialized=!0;var va=1;"v2"===la.type?va=2:"v3"===la.type?va=3:"v4"===la.type?va=4:"c"===la.type&&(va=3);la.size=
va;la.array=new Float32Array(W*va);la.buffer=l.createBuffer();la.buffer.belongsToAttribute=wa;Ea.needsUpdate=!0;la.__original=Ea}P.__webglCustomAttributesList.push(la)}}P.__inittedArrays=!0;n.verticesNeedUpdate=!0;n.morphTargetsNeedUpdate=!0;n.elementsNeedUpdate=!0;n.uvsNeedUpdate=!0;n.normalsNeedUpdate=!0;n.tangentsNeedUpdate=!0;n.colorsNeedUpdate=!0}}else n instanceof THREE.BufferGeometry&&e(n);else if(j instanceof THREE.Ribbon){if(n=j.geometry,!n.__webglVertexBuffer){var Fa=n;Fa.__webglVertexBuffer=
l.createBuffer();Fa.__webglColorBuffer=l.createBuffer();S.info.memory.geometries++;var za=n,Ia=za.vertices.length;za.__vertexArray=new Float32Array(3*Ia);za.__colorArray=new Float32Array(3*Ia);za.__webglVertexCount=Ia;n.verticesNeedUpdate=!0;n.colorsNeedUpdate=!0}}else if(j instanceof THREE.Line){if(n=j.geometry,!n.__webglVertexBuffer){var Qa=n;Qa.__webglVertexBuffer=l.createBuffer();Qa.__webglColorBuffer=l.createBuffer();S.info.memory.geometries++;var Ha=n,Ra=j,Sa=Ha.vertices.length;Ha.__vertexArray=
new Float32Array(3*Sa);Ha.__colorArray=new Float32Array(3*Sa);Ha.__webglLineCount=Sa;b(Ha,Ra);n.verticesNeedUpdate=!0;n.colorsNeedUpdate=!0}}else if(j instanceof THREE.ParticleSystem&&(n=j.geometry,!n.__webglVertexBuffer))if(n instanceof THREE.Geometry){var Za=n;Za.__webglVertexBuffer=l.createBuffer();Za.__webglColorBuffer=l.createBuffer();S.info.memory.geometries++;var $a=n,rb=j,hb=$a.vertices.length;$a.__vertexArray=new Float32Array(3*hb);$a.__colorArray=new Float32Array(3*hb);$a.__sortArray=[];
$a.__webglParticleCount=hb;b($a,rb);n.verticesNeedUpdate=!0;n.colorsNeedUpdate=!0}else n instanceof THREE.BufferGeometry&&e(n);if(!j.__webglActive){if(j instanceof THREE.Mesh)if(n=j.geometry,n instanceof THREE.BufferGeometry)s(k.__webglObjects,n,j);else for(m in n.geometryGroups)p=n.geometryGroups[m],s(k.__webglObjects,p,j);else j instanceof THREE.Ribbon||j instanceof THREE.Line||j instanceof THREE.ParticleSystem?(n=j.geometry,s(k.__webglObjects,n,j)):j instanceof THREE.ImmediateRenderObject||j.immediateRenderCallback?
k.__webglObjectsImmediate.push({object:j,opaque:null,transparent:null}):j instanceof THREE.Sprite?k.__webglSprites.push(j):j instanceof THREE.LensFlare&&k.__webglFlares.push(j);j.__webglActive=!0}a.__objectsAdded.splice(0,1)}for(;a.__objectsRemoved.length;){var nb=a.__objectsRemoved[0],bb=a;nb instanceof THREE.Mesh||nb instanceof THREE.ParticleSystem||nb instanceof THREE.Ribbon||nb instanceof THREE.Line?t(bb.__webglObjects,nb):nb instanceof THREE.Sprite?v(bb.__webglSprites,nb):nb instanceof THREE.LensFlare?
v(bb.__webglFlares,nb):(nb instanceof THREE.ImmediateRenderObject||nb.immediateRenderCallback)&&t(bb.__webglObjectsImmediate,nb);nb.__webglActive=!1;a.__objectsRemoved.splice(0,1)}for(var jb=0,tb=a.__webglObjects.length;jb<tb;jb++){var wb=a.__webglObjects[jb].object,ga=wb.geometry,db=void 0,cb=void 0,eb=void 0;if(wb instanceof THREE.Mesh)if(ga instanceof THREE.BufferGeometry)(ga.verticesNeedUpdate||ga.elementsNeedUpdate||ga.uvsNeedUpdate||ga.normalsNeedUpdate||ga.colorsNeedUpdate||ga.tangentsNeedUpdate)&&
h(ga,l.DYNAMIC_DRAW,!ga.dynamic),ga.verticesNeedUpdate=!1,ga.elementsNeedUpdate=!1,ga.uvsNeedUpdate=!1,ga.normalsNeedUpdate=!1,ga.colorsNeedUpdate=!1,ga.tangentsNeedUpdate=!1;else{for(var sb=0,yb=ga.geometryGroupsList.length;sb<yb;sb++)if(db=ga.geometryGroupsList[sb],eb=c(wb,db),cb=eb.attributes&&r(eb),ga.verticesNeedUpdate||ga.morphTargetsNeedUpdate||ga.elementsNeedUpdate||ga.uvsNeedUpdate||ga.normalsNeedUpdate||ga.colorsNeedUpdate||ga.tangentsNeedUpdate||cb){var na=db,zb=wb,ob=l.DYNAMIC_DRAW,Ab=
!ga.dynamic,ib=eb;if(na.__inittedArrays){var Rb=d(ib),gc=ib.vertexColors?ib.vertexColors:!1,kc=f(ib),Hc=Rb===THREE.SmoothShading,F=void 0,Y=void 0,Zb=void 0,R=void 0,mc=void 0,$b=void 0,xb=void 0,Ic=void 0,Sb=void 0,nc=void 0,oc=void 0,T=void 0,U=void 0,V=void 0,ma=void 0,Bb=void 0,Cb=void 0,Db=void 0,uc=void 0,Eb=void 0,Fb=void 0,Gb=void 0,vc=void 0,Hb=void 0,Ib=void 0,Jb=void 0,wc=void 0,Kb=void 0,Lb=void 0,Mb=void 0,xc=void 0,Nb=void 0,Ob=void 0,Pb=void 0,yc=void 0,sa=void 0,sc=void 0,ac=void 0,
pc=void 0,qc=void 0,Ta=void 0,tc=void 0,Oa=void 0,Pa=void 0,bc=void 0,Tb=void 0,Ja=0,Na=0,Ub=0,Vb=0,pb=0,Xa=0,ua=0,ab=0,Ma=0,ca=0,ja=0,B=0,ta=void 0,Ua=na.__vertexArray,zc=na.__uvArray,Ac=na.__uv2Array,qb=na.__normalArray,Aa=na.__tangentArray,Va=na.__colorArray,Ba=na.__skinIndexArray,Ca=na.__skinWeightArray,Wc=na.__morphTargetsArrays,Xc=na.__morphNormalsArrays,Yc=na.__webglCustomAttributesList,z=void 0,Qb=na.__faceArray,kb=na.__lineArray,fb=zb.geometry,Fc=fb.elementsNeedUpdate,cd=fb.uvsNeedUpdate,
Tc=fb.normalsNeedUpdate,Uc=fb.tangentsNeedUpdate,jd=fb.colorsNeedUpdate,kd=fb.morphTargetsNeedUpdate,ic=fb.vertices,oa=na.faces3,pa=na.faces4,Ya=fb.faces,Zc=fb.faceVertexUvs[0],$c=fb.faceVertexUvs[1],jc=fb.skinIndices,cc=fb.skinWeights,dc=fb.morphTargets,Jc=fb.morphNormals;if(fb.verticesNeedUpdate){F=0;for(Y=oa.length;F<Y;F++)R=Ya[oa[F]],T=ic[R.a],U=ic[R.b],V=ic[R.c],Ua[Na]=T.x,Ua[Na+1]=T.y,Ua[Na+2]=T.z,Ua[Na+3]=U.x,Ua[Na+4]=U.y,Ua[Na+5]=U.z,Ua[Na+6]=V.x,Ua[Na+7]=V.y,Ua[Na+8]=V.z,Na+=9;F=0;for(Y=
pa.length;F<Y;F++)R=Ya[pa[F]],T=ic[R.a],U=ic[R.b],V=ic[R.c],ma=ic[R.d],Ua[Na]=T.x,Ua[Na+1]=T.y,Ua[Na+2]=T.z,Ua[Na+3]=U.x,Ua[Na+4]=U.y,Ua[Na+5]=U.z,Ua[Na+6]=V.x,Ua[Na+7]=V.y,Ua[Na+8]=V.z,Ua[Na+9]=ma.x,Ua[Na+10]=ma.y,Ua[Na+11]=ma.z,Na+=12;l.bindBuffer(l.ARRAY_BUFFER,na.__webglVertexBuffer);l.bufferData(l.ARRAY_BUFFER,Ua,ob)}if(kd){Ta=0;for(tc=dc.length;Ta<tc;Ta++){F=ja=0;for(Y=oa.length;F<Y;F++)bc=oa[F],R=Ya[bc],T=dc[Ta].vertices[R.a],U=dc[Ta].vertices[R.b],V=dc[Ta].vertices[R.c],Oa=Wc[Ta],Oa[ja]=T.x,
Oa[ja+1]=T.y,Oa[ja+2]=T.z,Oa[ja+3]=U.x,Oa[ja+4]=U.y,Oa[ja+5]=U.z,Oa[ja+6]=V.x,Oa[ja+7]=V.y,Oa[ja+8]=V.z,ib.morphNormals&&(Hc?(Tb=Jc[Ta].vertexNormals[bc],Eb=Tb.a,Fb=Tb.b,Gb=Tb.c):Gb=Fb=Eb=Jc[Ta].faceNormals[bc],Pa=Xc[Ta],Pa[ja]=Eb.x,Pa[ja+1]=Eb.y,Pa[ja+2]=Eb.z,Pa[ja+3]=Fb.x,Pa[ja+4]=Fb.y,Pa[ja+5]=Fb.z,Pa[ja+6]=Gb.x,Pa[ja+7]=Gb.y,Pa[ja+8]=Gb.z),ja+=9;F=0;for(Y=pa.length;F<Y;F++)bc=pa[F],R=Ya[bc],T=dc[Ta].vertices[R.a],U=dc[Ta].vertices[R.b],V=dc[Ta].vertices[R.c],ma=dc[Ta].vertices[R.d],Oa=Wc[Ta],
Oa[ja]=T.x,Oa[ja+1]=T.y,Oa[ja+2]=T.z,Oa[ja+3]=U.x,Oa[ja+4]=U.y,Oa[ja+5]=U.z,Oa[ja+6]=V.x,Oa[ja+7]=V.y,Oa[ja+8]=V.z,Oa[ja+9]=ma.x,Oa[ja+10]=ma.y,Oa[ja+11]=ma.z,ib.morphNormals&&(Hc?(Tb=Jc[Ta].vertexNormals[bc],Eb=Tb.a,Fb=Tb.b,Gb=Tb.c,vc=Tb.d):vc=Gb=Fb=Eb=Jc[Ta].faceNormals[bc],Pa=Xc[Ta],Pa[ja]=Eb.x,Pa[ja+1]=Eb.y,Pa[ja+2]=Eb.z,Pa[ja+3]=Fb.x,Pa[ja+4]=Fb.y,Pa[ja+5]=Fb.z,Pa[ja+6]=Gb.x,Pa[ja+7]=Gb.y,Pa[ja+8]=Gb.z,Pa[ja+9]=vc.x,Pa[ja+10]=vc.y,Pa[ja+11]=vc.z),ja+=12;l.bindBuffer(l.ARRAY_BUFFER,na.__webglMorphTargetsBuffers[Ta]);
l.bufferData(l.ARRAY_BUFFER,Wc[Ta],ob);ib.morphNormals&&(l.bindBuffer(l.ARRAY_BUFFER,na.__webglMorphNormalsBuffers[Ta]),l.bufferData(l.ARRAY_BUFFER,Xc[Ta],ob))}}if(cc.length){F=0;for(Y=oa.length;F<Y;F++)R=Ya[oa[F]],Kb=cc[R.a],Lb=cc[R.b],Mb=cc[R.c],Ca[ca]=Kb.x,Ca[ca+1]=Kb.y,Ca[ca+2]=Kb.z,Ca[ca+3]=Kb.w,Ca[ca+4]=Lb.x,Ca[ca+5]=Lb.y,Ca[ca+6]=Lb.z,Ca[ca+7]=Lb.w,Ca[ca+8]=Mb.x,Ca[ca+9]=Mb.y,Ca[ca+10]=Mb.z,Ca[ca+11]=Mb.w,Nb=jc[R.a],Ob=jc[R.b],Pb=jc[R.c],Ba[ca]=Nb.x,Ba[ca+1]=Nb.y,Ba[ca+2]=Nb.z,Ba[ca+3]=Nb.w,
Ba[ca+4]=Ob.x,Ba[ca+5]=Ob.y,Ba[ca+6]=Ob.z,Ba[ca+7]=Ob.w,Ba[ca+8]=Pb.x,Ba[ca+9]=Pb.y,Ba[ca+10]=Pb.z,Ba[ca+11]=Pb.w,ca+=12;F=0;for(Y=pa.length;F<Y;F++)R=Ya[pa[F]],Kb=cc[R.a],Lb=cc[R.b],Mb=cc[R.c],xc=cc[R.d],Ca[ca]=Kb.x,Ca[ca+1]=Kb.y,Ca[ca+2]=Kb.z,Ca[ca+3]=Kb.w,Ca[ca+4]=Lb.x,Ca[ca+5]=Lb.y,Ca[ca+6]=Lb.z,Ca[ca+7]=Lb.w,Ca[ca+8]=Mb.x,Ca[ca+9]=Mb.y,Ca[ca+10]=Mb.z,Ca[ca+11]=Mb.w,Ca[ca+12]=xc.x,Ca[ca+13]=xc.y,Ca[ca+14]=xc.z,Ca[ca+15]=xc.w,Nb=jc[R.a],Ob=jc[R.b],Pb=jc[R.c],yc=jc[R.d],Ba[ca]=Nb.x,Ba[ca+1]=Nb.y,
Ba[ca+2]=Nb.z,Ba[ca+3]=Nb.w,Ba[ca+4]=Ob.x,Ba[ca+5]=Ob.y,Ba[ca+6]=Ob.z,Ba[ca+7]=Ob.w,Ba[ca+8]=Pb.x,Ba[ca+9]=Pb.y,Ba[ca+10]=Pb.z,Ba[ca+11]=Pb.w,Ba[ca+12]=yc.x,Ba[ca+13]=yc.y,Ba[ca+14]=yc.z,Ba[ca+15]=yc.w,ca+=16;0<ca&&(l.bindBuffer(l.ARRAY_BUFFER,na.__webglSkinIndicesBuffer),l.bufferData(l.ARRAY_BUFFER,Ba,ob),l.bindBuffer(l.ARRAY_BUFFER,na.__webglSkinWeightsBuffer),l.bufferData(l.ARRAY_BUFFER,Ca,ob))}if(jd&&gc){F=0;for(Y=oa.length;F<Y;F++)R=Ya[oa[F]],xb=R.vertexColors,Ic=R.color,3===xb.length&&gc===
THREE.VertexColors?(Hb=xb[0],Ib=xb[1],Jb=xb[2]):Jb=Ib=Hb=Ic,Va[Ma]=Hb.r,Va[Ma+1]=Hb.g,Va[Ma+2]=Hb.b,Va[Ma+3]=Ib.r,Va[Ma+4]=Ib.g,Va[Ma+5]=Ib.b,Va[Ma+6]=Jb.r,Va[Ma+7]=Jb.g,Va[Ma+8]=Jb.b,Ma+=9;F=0;for(Y=pa.length;F<Y;F++)R=Ya[pa[F]],xb=R.vertexColors,Ic=R.color,4===xb.length&&gc===THREE.VertexColors?(Hb=xb[0],Ib=xb[1],Jb=xb[2],wc=xb[3]):wc=Jb=Ib=Hb=Ic,Va[Ma]=Hb.r,Va[Ma+1]=Hb.g,Va[Ma+2]=Hb.b,Va[Ma+3]=Ib.r,Va[Ma+4]=Ib.g,Va[Ma+5]=Ib.b,Va[Ma+6]=Jb.r,Va[Ma+7]=Jb.g,Va[Ma+8]=Jb.b,Va[Ma+9]=wc.r,Va[Ma+10]=wc.g,
Va[Ma+11]=wc.b,Ma+=12;0<Ma&&(l.bindBuffer(l.ARRAY_BUFFER,na.__webglColorBuffer),l.bufferData(l.ARRAY_BUFFER,Va,ob))}if(Uc&&fb.hasTangents){F=0;for(Y=oa.length;F<Y;F++)R=Ya[oa[F]],Sb=R.vertexTangents,Bb=Sb[0],Cb=Sb[1],Db=Sb[2],Aa[ua]=Bb.x,Aa[ua+1]=Bb.y,Aa[ua+2]=Bb.z,Aa[ua+3]=Bb.w,Aa[ua+4]=Cb.x,Aa[ua+5]=Cb.y,Aa[ua+6]=Cb.z,Aa[ua+7]=Cb.w,Aa[ua+8]=Db.x,Aa[ua+9]=Db.y,Aa[ua+10]=Db.z,Aa[ua+11]=Db.w,ua+=12;F=0;for(Y=pa.length;F<Y;F++)R=Ya[pa[F]],Sb=R.vertexTangents,Bb=Sb[0],Cb=Sb[1],Db=Sb[2],uc=Sb[3],Aa[ua]=
Bb.x,Aa[ua+1]=Bb.y,Aa[ua+2]=Bb.z,Aa[ua+3]=Bb.w,Aa[ua+4]=Cb.x,Aa[ua+5]=Cb.y,Aa[ua+6]=Cb.z,Aa[ua+7]=Cb.w,Aa[ua+8]=Db.x,Aa[ua+9]=Db.y,Aa[ua+10]=Db.z,Aa[ua+11]=Db.w,Aa[ua+12]=uc.x,Aa[ua+13]=uc.y,Aa[ua+14]=uc.z,Aa[ua+15]=uc.w,ua+=16;l.bindBuffer(l.ARRAY_BUFFER,na.__webglTangentBuffer);l.bufferData(l.ARRAY_BUFFER,Aa,ob)}if(Tc&&Rb){F=0;for(Y=oa.length;F<Y;F++)if(R=Ya[oa[F]],mc=R.vertexNormals,$b=R.normal,3===mc.length&&Hc)for(sa=0;3>sa;sa++)ac=mc[sa],qb[Xa]=ac.x,qb[Xa+1]=ac.y,qb[Xa+2]=ac.z,Xa+=3;else for(sa=
0;3>sa;sa++)qb[Xa]=$b.x,qb[Xa+1]=$b.y,qb[Xa+2]=$b.z,Xa+=3;F=0;for(Y=pa.length;F<Y;F++)if(R=Ya[pa[F]],mc=R.vertexNormals,$b=R.normal,4===mc.length&&Hc)for(sa=0;4>sa;sa++)ac=mc[sa],qb[Xa]=ac.x,qb[Xa+1]=ac.y,qb[Xa+2]=ac.z,Xa+=3;else for(sa=0;4>sa;sa++)qb[Xa]=$b.x,qb[Xa+1]=$b.y,qb[Xa+2]=$b.z,Xa+=3;l.bindBuffer(l.ARRAY_BUFFER,na.__webglNormalBuffer);l.bufferData(l.ARRAY_BUFFER,qb,ob)}if(cd&&Zc&&kc){F=0;for(Y=oa.length;F<Y;F++)if(Zb=oa[F],nc=Zc[Zb],void 0!==nc)for(sa=0;3>sa;sa++)pc=nc[sa],zc[Ub]=pc.u,zc[Ub+
1]=pc.v,Ub+=2;F=0;for(Y=pa.length;F<Y;F++)if(Zb=pa[F],nc=Zc[Zb],void 0!==nc)for(sa=0;4>sa;sa++)pc=nc[sa],zc[Ub]=pc.u,zc[Ub+1]=pc.v,Ub+=2;0<Ub&&(l.bindBuffer(l.ARRAY_BUFFER,na.__webglUVBuffer),l.bufferData(l.ARRAY_BUFFER,zc,ob))}if(cd&&$c&&kc){F=0;for(Y=oa.length;F<Y;F++)if(Zb=oa[F],oc=$c[Zb],void 0!==oc)for(sa=0;3>sa;sa++)qc=oc[sa],Ac[Vb]=qc.u,Ac[Vb+1]=qc.v,Vb+=2;F=0;for(Y=pa.length;F<Y;F++)if(Zb=pa[F],oc=$c[Zb],void 0!==oc)for(sa=0;4>sa;sa++)qc=oc[sa],Ac[Vb]=qc.u,Ac[Vb+1]=qc.v,Vb+=2;0<Vb&&(l.bindBuffer(l.ARRAY_BUFFER,
na.__webglUV2Buffer),l.bufferData(l.ARRAY_BUFFER,Ac,ob))}if(Fc){F=0;for(Y=oa.length;F<Y;F++)Qb[pb]=Ja,Qb[pb+1]=Ja+1,Qb[pb+2]=Ja+2,pb+=3,kb[ab]=Ja,kb[ab+1]=Ja+1,kb[ab+2]=Ja,kb[ab+3]=Ja+2,kb[ab+4]=Ja+1,kb[ab+5]=Ja+2,ab+=6,Ja+=3;F=0;for(Y=pa.length;F<Y;F++)Qb[pb]=Ja,Qb[pb+1]=Ja+1,Qb[pb+2]=Ja+3,Qb[pb+3]=Ja+1,Qb[pb+4]=Ja+2,Qb[pb+5]=Ja+3,pb+=6,kb[ab]=Ja,kb[ab+1]=Ja+1,kb[ab+2]=Ja,kb[ab+3]=Ja+3,kb[ab+4]=Ja+1,kb[ab+5]=Ja+2,kb[ab+6]=Ja+2,kb[ab+7]=Ja+3,ab+=8,Ja+=4;l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,na.__webglFaceBuffer);
l.bufferData(l.ELEMENT_ARRAY_BUFFER,Qb,ob);l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,na.__webglLineBuffer);l.bufferData(l.ELEMENT_ARRAY_BUFFER,kb,ob)}if(Yc){sa=0;for(sc=Yc.length;sa<sc;sa++)if(z=Yc[sa],z.__original.needsUpdate){B=0;if(1===z.size)if(void 0===z.boundTo||"vertices"===z.boundTo){F=0;for(Y=oa.length;F<Y;F++)R=Ya[oa[F]],z.array[B]=z.value[R.a],z.array[B+1]=z.value[R.b],z.array[B+2]=z.value[R.c],B+=3;F=0;for(Y=pa.length;F<Y;F++)R=Ya[pa[F]],z.array[B]=z.value[R.a],z.array[B+1]=z.value[R.b],z.array[B+
2]=z.value[R.c],z.array[B+3]=z.value[R.d],B+=4}else{if("faces"===z.boundTo){F=0;for(Y=oa.length;F<Y;F++)ta=z.value[oa[F]],z.array[B]=ta,z.array[B+1]=ta,z.array[B+2]=ta,B+=3;F=0;for(Y=pa.length;F<Y;F++)ta=z.value[pa[F]],z.array[B]=ta,z.array[B+1]=ta,z.array[B+2]=ta,z.array[B+3]=ta,B+=4}}else if(2===z.size)if(void 0===z.boundTo||"vertices"===z.boundTo){F=0;for(Y=oa.length;F<Y;F++)R=Ya[oa[F]],T=z.value[R.a],U=z.value[R.b],V=z.value[R.c],z.array[B]=T.x,z.array[B+1]=T.y,z.array[B+2]=U.x,z.array[B+3]=U.y,
z.array[B+4]=V.x,z.array[B+5]=V.y,B+=6;F=0;for(Y=pa.length;F<Y;F++)R=Ya[pa[F]],T=z.value[R.a],U=z.value[R.b],V=z.value[R.c],ma=z.value[R.d],z.array[B]=T.x,z.array[B+1]=T.y,z.array[B+2]=U.x,z.array[B+3]=U.y,z.array[B+4]=V.x,z.array[B+5]=V.y,z.array[B+6]=ma.x,z.array[B+7]=ma.y,B+=8}else{if("faces"===z.boundTo){F=0;for(Y=oa.length;F<Y;F++)V=U=T=ta=z.value[oa[F]],z.array[B]=T.x,z.array[B+1]=T.y,z.array[B+2]=U.x,z.array[B+3]=U.y,z.array[B+4]=V.x,z.array[B+5]=V.y,B+=6;F=0;for(Y=pa.length;F<Y;F++)ma=V=U=
T=ta=z.value[pa[F]],z.array[B]=T.x,z.array[B+1]=T.y,z.array[B+2]=U.x,z.array[B+3]=U.y,z.array[B+4]=V.x,z.array[B+5]=V.y,z.array[B+6]=ma.x,z.array[B+7]=ma.y,B+=8}}else if(3===z.size){var aa;aa="c"===z.type?["r","g","b"]:["x","y","z"];if(void 0===z.boundTo||"vertices"===z.boundTo){F=0;for(Y=oa.length;F<Y;F++)R=Ya[oa[F]],T=z.value[R.a],U=z.value[R.b],V=z.value[R.c],z.array[B]=T[aa[0]],z.array[B+1]=T[aa[1]],z.array[B+2]=T[aa[2]],z.array[B+3]=U[aa[0]],z.array[B+4]=U[aa[1]],z.array[B+5]=U[aa[2]],z.array[B+
6]=V[aa[0]],z.array[B+7]=V[aa[1]],z.array[B+8]=V[aa[2]],B+=9;F=0;for(Y=pa.length;F<Y;F++)R=Ya[pa[F]],T=z.value[R.a],U=z.value[R.b],V=z.value[R.c],ma=z.value[R.d],z.array[B]=T[aa[0]],z.array[B+1]=T[aa[1]],z.array[B+2]=T[aa[2]],z.array[B+3]=U[aa[0]],z.array[B+4]=U[aa[1]],z.array[B+5]=U[aa[2]],z.array[B+6]=V[aa[0]],z.array[B+7]=V[aa[1]],z.array[B+8]=V[aa[2]],z.array[B+9]=ma[aa[0]],z.array[B+10]=ma[aa[1]],z.array[B+11]=ma[aa[2]],B+=12}else if("faces"===z.boundTo){F=0;for(Y=oa.length;F<Y;F++)V=U=T=ta=
z.value[oa[F]],z.array[B]=T[aa[0]],z.array[B+1]=T[aa[1]],z.array[B+2]=T[aa[2]],z.array[B+3]=U[aa[0]],z.array[B+4]=U[aa[1]],z.array[B+5]=U[aa[2]],z.array[B+6]=V[aa[0]],z.array[B+7]=V[aa[1]],z.array[B+8]=V[aa[2]],B+=9;F=0;for(Y=pa.length;F<Y;F++)ma=V=U=T=ta=z.value[pa[F]],z.array[B]=T[aa[0]],z.array[B+1]=T[aa[1]],z.array[B+2]=T[aa[2]],z.array[B+3]=U[aa[0]],z.array[B+4]=U[aa[1]],z.array[B+5]=U[aa[2]],z.array[B+6]=V[aa[0]],z.array[B+7]=V[aa[1]],z.array[B+8]=V[aa[2]],z.array[B+9]=ma[aa[0]],z.array[B+10]=
ma[aa[1]],z.array[B+11]=ma[aa[2]],B+=12}else if("faceVertices"===z.boundTo){F=0;for(Y=oa.length;F<Y;F++)ta=z.value[oa[F]],T=ta[0],U=ta[1],V=ta[2],z.array[B]=T[aa[0]],z.array[B+1]=T[aa[1]],z.array[B+2]=T[aa[2]],z.array[B+3]=U[aa[0]],z.array[B+4]=U[aa[1]],z.array[B+5]=U[aa[2]],z.array[B+6]=V[aa[0]],z.array[B+7]=V[aa[1]],z.array[B+8]=V[aa[2]],B+=9;F=0;for(Y=pa.length;F<Y;F++)ta=z.value[pa[F]],T=ta[0],U=ta[1],V=ta[2],ma=ta[3],z.array[B]=T[aa[0]],z.array[B+1]=T[aa[1]],z.array[B+2]=T[aa[2]],z.array[B+3]=
U[aa[0]],z.array[B+4]=U[aa[1]],z.array[B+5]=U[aa[2]],z.array[B+6]=V[aa[0]],z.array[B+7]=V[aa[1]],z.array[B+8]=V[aa[2]],z.array[B+9]=ma[aa[0]],z.array[B+10]=ma[aa[1]],z.array[B+11]=ma[aa[2]],B+=12}}else if(4===z.size)if(void 0===z.boundTo||"vertices"===z.boundTo){F=0;for(Y=oa.length;F<Y;F++)R=Ya[oa[F]],T=z.value[R.a],U=z.value[R.b],V=z.value[R.c],z.array[B]=T.x,z.array[B+1]=T.y,z.array[B+2]=T.z,z.array[B+3]=T.w,z.array[B+4]=U.x,z.array[B+5]=U.y,z.array[B+6]=U.z,z.array[B+7]=U.w,z.array[B+8]=V.x,z.array[B+
9]=V.y,z.array[B+10]=V.z,z.array[B+11]=V.w,B+=12;F=0;for(Y=pa.length;F<Y;F++)R=Ya[pa[F]],T=z.value[R.a],U=z.value[R.b],V=z.value[R.c],ma=z.value[R.d],z.array[B]=T.x,z.array[B+1]=T.y,z.array[B+2]=T.z,z.array[B+3]=T.w,z.array[B+4]=U.x,z.array[B+5]=U.y,z.array[B+6]=U.z,z.array[B+7]=U.w,z.array[B+8]=V.x,z.array[B+9]=V.y,z.array[B+10]=V.z,z.array[B+11]=V.w,z.array[B+12]=ma.x,z.array[B+13]=ma.y,z.array[B+14]=ma.z,z.array[B+15]=ma.w,B+=16}else if("faces"===z.boundTo){F=0;for(Y=oa.length;F<Y;F++)V=U=T=ta=
z.value[oa[F]],z.array[B]=T.x,z.array[B+1]=T.y,z.array[B+2]=T.z,z.array[B+3]=T.w,z.array[B+4]=U.x,z.array[B+5]=U.y,z.array[B+6]=U.z,z.array[B+7]=U.w,z.array[B+8]=V.x,z.array[B+9]=V.y,z.array[B+10]=V.z,z.array[B+11]=V.w,B+=12;F=0;for(Y=pa.length;F<Y;F++)ma=V=U=T=ta=z.value[pa[F]],z.array[B]=T.x,z.array[B+1]=T.y,z.array[B+2]=T.z,z.array[B+3]=T.w,z.array[B+4]=U.x,z.array[B+5]=U.y,z.array[B+6]=U.z,z.array[B+7]=U.w,z.array[B+8]=V.x,z.array[B+9]=V.y,z.array[B+10]=V.z,z.array[B+11]=V.w,z.array[B+12]=ma.x,
z.array[B+13]=ma.y,z.array[B+14]=ma.z,z.array[B+15]=ma.w,B+=16}else if("faceVertices"===z.boundTo){F=0;for(Y=oa.length;F<Y;F++)ta=z.value[oa[F]],T=ta[0],U=ta[1],V=ta[2],z.array[B]=T.x,z.array[B+1]=T.y,z.array[B+2]=T.z,z.array[B+3]=T.w,z.array[B+4]=U.x,z.array[B+5]=U.y,z.array[B+6]=U.z,z.array[B+7]=U.w,z.array[B+8]=V.x,z.array[B+9]=V.y,z.array[B+10]=V.z,z.array[B+11]=V.w,B+=12;F=0;for(Y=pa.length;F<Y;F++)ta=z.value[pa[F]],T=ta[0],U=ta[1],V=ta[2],ma=ta[3],z.array[B]=T.x,z.array[B+1]=T.y,z.array[B+2]=
T.z,z.array[B+3]=T.w,z.array[B+4]=U.x,z.array[B+5]=U.y,z.array[B+6]=U.z,z.array[B+7]=U.w,z.array[B+8]=V.x,z.array[B+9]=V.y,z.array[B+10]=V.z,z.array[B+11]=V.w,z.array[B+12]=ma.x,z.array[B+13]=ma.y,z.array[B+14]=ma.z,z.array[B+15]=ma.w,B+=16}l.bindBuffer(l.ARRAY_BUFFER,z.buffer);l.bufferData(l.ARRAY_BUFFER,z.array,ob)}}Ab&&(delete na.__inittedArrays,delete na.__colorArray,delete na.__normalArray,delete na.__tangentArray,delete na.__uvArray,delete na.__uv2Array,delete na.__faceArray,delete na.__vertexArray,
delete na.__lineArray,delete na.__skinIndexArray,delete na.__skinWeightArray)}}ga.verticesNeedUpdate=!1;ga.morphTargetsNeedUpdate=!1;ga.elementsNeedUpdate=!1;ga.uvsNeedUpdate=!1;ga.normalsNeedUpdate=!1;ga.colorsNeedUpdate=!1;ga.tangentsNeedUpdate=!1;eb.attributes&&q(eb)}else if(wb instanceof THREE.Ribbon){if(ga.verticesNeedUpdate||ga.colorsNeedUpdate){var ec=ga,dd=l.DYNAMIC_DRAW,Bc=void 0,Cc=void 0,Kc=void 0,fc=void 0,Lc=void 0,ed=ec.vertices,fd=ec.colors,ld=ed.length,md=fd.length,Mc=ec.__vertexArray,
Nc=ec.__colorArray,nd=ec.colorsNeedUpdate;if(ec.verticesNeedUpdate){for(Bc=0;Bc<ld;Bc++)Kc=ed[Bc],fc=3*Bc,Mc[fc]=Kc.x,Mc[fc+1]=Kc.y,Mc[fc+2]=Kc.z;l.bindBuffer(l.ARRAY_BUFFER,ec.__webglVertexBuffer);l.bufferData(l.ARRAY_BUFFER,Mc,dd)}if(nd){for(Cc=0;Cc<md;Cc++)Lc=fd[Cc],fc=3*Cc,Nc[fc]=Lc.r,Nc[fc+1]=Lc.g,Nc[fc+2]=Lc.b;l.bindBuffer(l.ARRAY_BUFFER,ec.__webglColorBuffer);l.bufferData(l.ARRAY_BUFFER,Nc,dd)}}ga.verticesNeedUpdate=!1;ga.colorsNeedUpdate=!1}else if(wb instanceof THREE.Line){eb=c(wb,db);cb=
eb.attributes&&r(eb);if(ga.verticesNeedUpdate||ga.colorsNeedUpdate||cb){var Wb=ga,ad=l.DYNAMIC_DRAW,Dc=void 0,Ec=void 0,Oc=void 0,Da=void 0,Pc=void 0,gd=Wb.vertices,hd=Wb.colors,od=gd.length,pd=hd.length,Qc=Wb.__vertexArray,Rc=Wb.__colorArray,qd=Wb.colorsNeedUpdate,bd=Wb.__webglCustomAttributesList,Sc=void 0,id=void 0,Wa=void 0,rc=void 0,gb=void 0,ya=void 0;if(Wb.verticesNeedUpdate){for(Dc=0;Dc<od;Dc++)Oc=gd[Dc],Da=3*Dc,Qc[Da]=Oc.x,Qc[Da+1]=Oc.y,Qc[Da+2]=Oc.z;l.bindBuffer(l.ARRAY_BUFFER,Wb.__webglVertexBuffer);
l.bufferData(l.ARRAY_BUFFER,Qc,ad)}if(qd){for(Ec=0;Ec<pd;Ec++)Pc=hd[Ec],Da=3*Ec,Rc[Da]=Pc.r,Rc[Da+1]=Pc.g,Rc[Da+2]=Pc.b;l.bindBuffer(l.ARRAY_BUFFER,Wb.__webglColorBuffer);l.bufferData(l.ARRAY_BUFFER,Rc,ad)}if(bd){Sc=0;for(id=bd.length;Sc<id;Sc++)if(ya=bd[Sc],ya.needsUpdate&&(void 0===ya.boundTo||"vertices"===ya.boundTo)){Da=0;rc=ya.value.length;if(1===ya.size)for(Wa=0;Wa<rc;Wa++)ya.array[Wa]=ya.value[Wa];else if(2===ya.size)for(Wa=0;Wa<rc;Wa++)gb=ya.value[Wa],ya.array[Da]=gb.x,ya.array[Da+1]=gb.y,
Da+=2;else if(3===ya.size)if("c"===ya.type)for(Wa=0;Wa<rc;Wa++)gb=ya.value[Wa],ya.array[Da]=gb.r,ya.array[Da+1]=gb.g,ya.array[Da+2]=gb.b,Da+=3;else for(Wa=0;Wa<rc;Wa++)gb=ya.value[Wa],ya.array[Da]=gb.x,ya.array[Da+1]=gb.y,ya.array[Da+2]=gb.z,Da+=3;else if(4===ya.size)for(Wa=0;Wa<rc;Wa++)gb=ya.value[Wa],ya.array[Da]=gb.x,ya.array[Da+1]=gb.y,ya.array[Da+2]=gb.z,ya.array[Da+3]=gb.w,Da+=4;l.bindBuffer(l.ARRAY_BUFFER,ya.buffer);l.bufferData(l.ARRAY_BUFFER,ya.array,ad)}}}ga.verticesNeedUpdate=!1;ga.colorsNeedUpdate=
!1;eb.attributes&&q(eb)}else wb instanceof THREE.ParticleSystem&&(ga instanceof THREE.BufferGeometry?((ga.verticesNeedUpdate||ga.colorsNeedUpdate)&&h(ga,l.DYNAMIC_DRAW,!ga.dynamic),ga.verticesNeedUpdate=!1,ga.colorsNeedUpdate=!1):(eb=c(wb,db),cb=eb.attributes&&r(eb),(ga.verticesNeedUpdate||ga.colorsNeedUpdate||wb.sortParticles||cb)&&g(ga,l.DYNAMIC_DRAW,wb),ga.verticesNeedUpdate=!1,ga.colorsNeedUpdate=!1,eb.attributes&&q(eb)))}};this.initMaterial=function(a,b,c,d){var e,f,g,h,j,k,m,n,p;a instanceof
THREE.MeshDepthMaterial?p="depth":a instanceof THREE.MeshNormalMaterial?p="normal":a instanceof THREE.MeshBasicMaterial?p="basic":a instanceof THREE.MeshLambertMaterial?p="lambert":a instanceof THREE.MeshPhongMaterial?p="phong":a instanceof THREE.LineBasicMaterial?p="basic":a instanceof THREE.ParticleBasicMaterial&&(p="particle_basic");if(p){var q=THREE.ShaderLib[p];a.uniforms=THREE.UniformsUtils.clone(q.uniforms);a.vertexShader=q.vertexShader;a.fragmentShader=q.fragmentShader}var r,s;r=h=f=e=q=0;
for(g=b.length;r<g;r++)s=b[r],s.onlyShadow||(s instanceof THREE.DirectionalLight&&h++,s instanceof THREE.PointLight&&f++,s instanceof THREE.SpotLight&&e++,s instanceof THREE.HemisphereLight&&q++);f+e+h+q<=da?(r=h,g=e):(r=Math.ceil(da*h/(f+h)),g=f=da-r,q=r);e=r;h=q;q=n=0;for(r=b.length;q<r;q++)s=b[q],s.castShadow&&(s instanceof THREE.SpotLight&&n++,s instanceof THREE.DirectionalLight&&!s.shadowCascade&&n++);gc&&d&&d.useVertexTexture?m=1024:(b=l.getParameter(l.MAX_VERTEX_UNIFORM_VECTORS),b=Math.floor((b-
20)/4),void 0!==d&&d instanceof THREE.SkinnedMesh&&(b=Math.min(d.bones.length,b),b<d.bones.length&&console.warn("WebGLRenderer: too many bones - "+d.bones.length+", this GPU supports just "+b+" (try OpenGL instead of ANGLE)")),m=b);var t;a:{s=a.fragmentShader;r=a.vertexShader;q=a.uniforms;b=a.attributes;c={map:!!a.map,envMap:!!a.envMap,lightMap:!!a.lightMap,bumpMap:!!a.bumpMap,normalMap:!!a.normalMap,specularMap:!!a.specularMap,vertexColors:a.vertexColors,fog:c,useFog:a.fog,sizeAttenuation:a.sizeAttenuation,
skinning:a.skinning,maxBones:m,useVertexTexture:gc&&d&&d.useVertexTexture,boneTextureWidth:d&&d.boneTextureWidth,boneTextureHeight:d&&d.boneTextureHeight,morphTargets:a.morphTargets,morphNormals:a.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:e,maxPointLights:f,maxSpotLights:g,maxHemiLights:h,maxShadows:n,shadowMapEnabled:this.shadowMapEnabled&&d.receiveShadow,shadowMapSoft:this.shadowMapSoft,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,
alphaTest:a.alphaTest,metal:a.metal,perPixel:a.perPixel,wrapAround:a.wrapAround,doubleSided:a.side===THREE.DoubleSide,flipSided:a.side===THREE.BackSide};var u;d=[];p?d.push(p):(d.push(s),d.push(r));for(u in c)d.push(u),d.push(c[u]);p=d.join();u=0;for(d=ha.length;u<d;u++)if(e=ha[u],e.code===p){e.usedTimes++;t=e.program;break a}u=l.createProgram();d=["precision "+M+" float;",kc?"#define VERTEX_TEXTURES":"",S.gammaInput?"#define GAMMA_INPUT":"",S.gammaOutput?"#define GAMMA_OUTPUT":"",S.physicallyBasedShading?
"#define PHYSICALLY_BASED_SHADING":"","#define MAX_DIR_LIGHTS "+c.maxDirLights,"#define MAX_POINT_LIGHTS "+c.maxPointLights,"#define MAX_SPOT_LIGHTS "+c.maxSpotLights,"#define MAX_HEMI_LIGHTS "+c.maxHemiLights,"#define MAX_SHADOWS "+c.maxShadows,"#define MAX_BONES "+c.maxBones,c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":"",c.lightMap?"#define USE_LIGHTMAP":"",c.bumpMap?"#define USE_BUMPMAP":"",c.normalMap?"#define USE_NORMALMAP":"",c.specularMap?"#define USE_SPECULARMAP":"",c.vertexColors?
"#define USE_COLOR":"",c.skinning?"#define USE_SKINNING":"",c.useVertexTexture?"#define BONE_TEXTURE":"",c.boneTextureWidth?"#define N_BONE_PIXEL_X "+c.boneTextureWidth.toFixed(1):"",c.boneTextureHeight?"#define N_BONE_PIXEL_Y "+c.boneTextureHeight.toFixed(1):"",c.morphTargets?"#define USE_MORPHTARGETS":"",c.morphNormals?"#define USE_MORPHNORMALS":"",c.perPixel?"#define PHONG_PER_PIXEL":"",c.wrapAround?"#define WRAP_AROUND":"",c.doubleSided?"#define DOUBLE_SIDED":"",c.flipSided?"#define FLIP_SIDED":
"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapSoft?"#define SHADOWMAP_SOFT":"",c.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",c.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",c.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\nattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\nattribute vec3 morphTarget0;\nattribute vec3 morphTarget1;\nattribute vec3 morphTarget2;\nattribute vec3 morphTarget3;\n#ifdef USE_MORPHNORMALS\nattribute vec3 morphNormal0;\nattribute vec3 morphNormal1;\nattribute vec3 morphNormal2;\nattribute vec3 morphNormal3;\n#else\nattribute vec3 morphTarget4;\nattribute vec3 morphTarget5;\nattribute vec3 morphTarget6;\nattribute vec3 morphTarget7;\n#endif\n#endif\n#ifdef USE_SKINNING\nattribute vec4 skinIndex;\nattribute vec4 skinWeight;\n#endif\n"].join("\n");
e=["precision "+M+" float;",c.bumpMap||c.normalMap?"#extension GL_OES_standard_derivatives : enable":"","#define MAX_DIR_LIGHTS "+c.maxDirLights,"#define MAX_POINT_LIGHTS "+c.maxPointLights,"#define MAX_SPOT_LIGHTS "+c.maxSpotLights,"#define MAX_HEMI_LIGHTS "+c.maxHemiLights,"#define MAX_SHADOWS "+c.maxShadows,c.alphaTest?"#define ALPHATEST "+c.alphaTest:"",S.gammaInput?"#define GAMMA_INPUT":"",S.gammaOutput?"#define GAMMA_OUTPUT":"",S.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"",
c.useFog&&c.fog?"#define USE_FOG":"",c.useFog&&c.fog instanceof THREE.FogExp2?"#define FOG_EXP2":"",c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":"",c.lightMap?"#define USE_LIGHTMAP":"",c.bumpMap?"#define USE_BUMPMAP":"",c.normalMap?"#define USE_NORMALMAP":"",c.specularMap?"#define USE_SPECULARMAP":"",c.vertexColors?"#define USE_COLOR":"",c.metal?"#define METAL":"",c.perPixel?"#define PHONG_PER_PIXEL":"",c.wrapAround?"#define WRAP_AROUND":"",c.doubleSided?"#define DOUBLE_SIDED":"",c.flipSided?
"#define FLIP_SIDED":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapSoft?"#define SHADOWMAP_SOFT":"",c.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",c.shadowMapCascade?"#define SHADOWMAP_CASCADE":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");e=A("fragment",e+s);d=A("vertex",d+r);l.attachShader(u,d);l.attachShader(u,e);l.linkProgram(u);l.getProgramParameter(u,l.LINK_STATUS)||console.error("Could not initialise shader\nVALIDATE_STATUS: "+l.getProgramParameter(u,
l.VALIDATE_STATUS)+", gl error ["+l.getError()+"]");l.deleteShader(e);l.deleteShader(d);u.uniforms={};u.attributes={};var v;d="viewMatrix modelViewMatrix projectionMatrix normalMatrix modelMatrix cameraPosition morphTargetInfluences".split(" ");c.useVertexTexture?d.push("boneTexture"):d.push("boneGlobalMatrices");for(v in q)d.push(v);v=d;d=0;for(q=v.length;d<q;d++)e=v[d],u.uniforms[e]=l.getUniformLocation(u,e);d="position normal uv uv2 tangent color skinIndex skinWeight".split(" ");for(v=0;v<c.maxMorphTargets;v++)d.push("morphTarget"+
v);for(v=0;v<c.maxMorphNormals;v++)d.push("morphNormal"+v);for(t in b)d.push(t);t=d;v=0;for(c=t.length;v<c;v++)d=t[v],u.attributes[d]=l.getAttribLocation(u,d);u.id=va++;ha.push({program:u,code:p,usedTimes:1});S.info.memory.programs=ha.length;t=u}a.program=t;t=a.program.attributes;0<=t.position&&l.enableVertexAttribArray(t.position);0<=t.color&&l.enableVertexAttribArray(t.color);0<=t.normal&&l.enableVertexAttribArray(t.normal);0<=t.tangent&&l.enableVertexAttribArray(t.tangent);a.skinning&&(0<=t.skinIndex&&
0<=t.skinWeight)&&(l.enableVertexAttribArray(t.skinIndex),l.enableVertexAttribArray(t.skinWeight));if(a.attributes)for(k in a.attributes)void 0!==t[k]&&0<=t[k]&&l.enableVertexAttribArray(t[k]);if(a.morphTargets){a.numSupportedMorphTargets=0;u="morphTarget";for(k=0;k<this.maxMorphTargets;k++)v=u+k,0<=t[v]&&(l.enableVertexAttribArray(t[v]),a.numSupportedMorphTargets++)}if(a.morphNormals){a.numSupportedMorphNormals=0;u="morphNormal";for(k=0;k<this.maxMorphNormals;k++)v=u+k,0<=t[v]&&(l.enableVertexAttribArray(t[v]),
a.numSupportedMorphNormals++)}a.uniformsList=[];for(j in a.uniforms)a.uniformsList.push([a.uniforms[j],j])};this.setFaceCulling=function(a,b){a?(!b||"ccw"===b?l.frontFace(l.CCW):l.frontFace(l.CW),"back"===a?l.cullFace(l.BACK):"front"===a?l.cullFace(l.FRONT):l.cullFace(l.FRONT_AND_BACK),l.enable(l.CULL_FACE)):l.disable(l.CULL_FACE)};this.setMaterialFaces=function(a){var b=a.side===THREE.DoubleSide;a=a.side===THREE.BackSide;wa!==b&&(b?l.disable(l.CULL_FACE):l.enable(l.CULL_FACE),wa=b);Ea!==a&&(a?l.frontFace(l.CW):
l.frontFace(l.CCW),Ea=a)};this.setDepthTest=function(a){Qa!==a&&(a?l.enable(l.DEPTH_TEST):l.disable(l.DEPTH_TEST),Qa=a)};this.setDepthWrite=function(a){$a!==a&&(l.depthMask(a),$a=a)};this.setBlending=function(a,b,c,d){a!==La&&(a===THREE.NoBlending?l.disable(l.BLEND):a===THREE.AdditiveBlending?(l.enable(l.BLEND),l.blendEquation(l.FUNC_ADD),l.blendFunc(l.SRC_ALPHA,l.ONE)):a===THREE.SubtractiveBlending?(l.enable(l.BLEND),l.blendEquation(l.FUNC_ADD),l.blendFunc(l.ZERO,l.ONE_MINUS_SRC_COLOR)):a===THREE.MultiplyBlending?
(l.enable(l.BLEND),l.blendEquation(l.FUNC_ADD),l.blendFunc(l.ZERO,l.SRC_COLOR)):a===THREE.CustomBlending?l.enable(l.BLEND):(l.enable(l.BLEND),l.blendEquationSeparate(l.FUNC_ADD,l.FUNC_ADD),l.blendFuncSeparate(l.SRC_ALPHA,l.ONE_MINUS_SRC_ALPHA,l.ONE,l.ONE_MINUS_SRC_ALPHA)),La=a);if(a===THREE.CustomBlending){if(b!==Za&&(l.blendEquation(E(b)),Za=b),c!==la||d!==rb)l.blendFunc(E(c),E(d)),la=c,rb=d}else rb=la=Za=null};this.setTexture=function(a,b){if(a.needsUpdate){a.__webglInit||(a.__webglInit=!0,a.__webglTexture=
l.createTexture(),S.info.memory.textures++);l.activeTexture(l.TEXTURE0+b);l.bindTexture(l.TEXTURE_2D,a.__webglTexture);l.pixelStorei(l.UNPACK_FLIP_Y_WEBGL,a.flipY);l.pixelStorei(l.UNPACK_PREMULTIPLY_ALPHA_WEBGL,a.premultiplyAlpha);var c=a.image,d=0===(c.width&c.width-1)&&0===(c.height&c.height-1),e=E(a.format),f=E(a.type);J(l.TEXTURE_2D,a,d);if(a instanceof THREE.CompressedTexture)for(var f=a.mipmaps,g=0,h=f.length;g<h;g++)c=f[g],l.compressedTexImage2D(l.TEXTURE_2D,g,e,c.width,c.height,0,c.data);
else a instanceof THREE.DataTexture?l.texImage2D(l.TEXTURE_2D,0,e,c.width,c.height,0,e,f,c.data):l.texImage2D(l.TEXTURE_2D,0,e,e,f,a.image);a.generateMipmaps&&d&&l.generateMipmap(l.TEXTURE_2D);a.needsUpdate=!1;if(a.onUpdate)a.onUpdate()}else l.activeTexture(l.TEXTURE0+b),l.bindTexture(l.TEXTURE_2D,a.__webglTexture)};this.setRenderTarget=function(a){var b=a instanceof THREE.WebGLRenderTargetCube;if(a&&!a.__webglFramebuffer){void 0===a.depthBuffer&&(a.depthBuffer=!0);void 0===a.stencilBuffer&&(a.stencilBuffer=
!0);a.__webglTexture=l.createTexture();var c=0===(a.width&a.width-1)&&0===(a.height&a.height-1),d=E(a.format),e=E(a.type);if(b){a.__webglFramebuffer=[];a.__webglRenderbuffer=[];l.bindTexture(l.TEXTURE_CUBE_MAP,a.__webglTexture);J(l.TEXTURE_CUBE_MAP,a,c);for(var f=0;6>f;f++){a.__webglFramebuffer[f]=l.createFramebuffer();a.__webglRenderbuffer[f]=l.createRenderbuffer();l.texImage2D(l.TEXTURE_CUBE_MAP_POSITIVE_X+f,0,d,a.width,a.height,0,d,e,null);var g=a,h=l.TEXTURE_CUBE_MAP_POSITIVE_X+f;l.bindFramebuffer(l.FRAMEBUFFER,
a.__webglFramebuffer[f]);l.framebufferTexture2D(l.FRAMEBUFFER,l.COLOR_ATTACHMENT0,h,g.__webglTexture,0);H(a.__webglRenderbuffer[f],a)}c&&l.generateMipmap(l.TEXTURE_CUBE_MAP)}else a.__webglFramebuffer=l.createFramebuffer(),a.__webglRenderbuffer=l.createRenderbuffer(),l.bindTexture(l.TEXTURE_2D,a.__webglTexture),J(l.TEXTURE_2D,a,c),l.texImage2D(l.TEXTURE_2D,0,d,a.width,a.height,0,d,e,null),d=l.TEXTURE_2D,l.bindFramebuffer(l.FRAMEBUFFER,a.__webglFramebuffer),l.framebufferTexture2D(l.FRAMEBUFFER,l.COLOR_ATTACHMENT0,
d,a.__webglTexture,0),H(a.__webglRenderbuffer,a),c&&l.generateMipmap(l.TEXTURE_2D);b?l.bindTexture(l.TEXTURE_CUBE_MAP,null):l.bindTexture(l.TEXTURE_2D,null);l.bindRenderbuffer(l.RENDERBUFFER,null);l.bindFramebuffer(l.FRAMEBUFFER,null)}a?(b=b?a.__webglFramebuffer[a.activeCubeFace]:a.__webglFramebuffer,c=a.width,a=a.height,e=d=0):(b=null,c=Ia,a=bb,d=za,e=sb);b!==ia&&(l.bindFramebuffer(l.FRAMEBUFFER,b),l.viewport(d,e,c,a),ia=b);tb=c;Fa=a};this.shadowMapPlugin=new THREE.ShadowMapPlugin;this.addPrePlugin(this.shadowMapPlugin);
this.addPostPlugin(new THREE.SpritePlugin);this.addPostPlugin(new THREE.LensFlarePlugin)};
THREE.WebGLRenderTarget=function(a,b,c){this.width=a;this.height=b;c=c||{};this.wrapS=void 0!==c.wrapS?c.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==c.wrapT?c.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==c.magFilter?c.magFilter:THREE.LinearFilter;this.minFilter=void 0!==c.minFilter?c.minFilter:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==c.anisotropy?c.anisotropy:1;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.format=void 0!==c.format?c.format:
THREE.RGBAFormat;this.type=void 0!==c.type?c.type:THREE.UnsignedByteType;this.depthBuffer=void 0!==c.depthBuffer?c.depthBuffer:!0;this.stencilBuffer=void 0!==c.stencilBuffer?c.stencilBuffer:!0;this.generateMipmaps=!0};
THREE.WebGLRenderTarget.prototype.clone=function(){var a=new THREE.WebGLRenderTarget(this.width,this.height);a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.anisotropy=this.anisotropy;a.minFilter=this.minFilter;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.format=this.format;a.type=this.type;a.depthBuffer=this.depthBuffer;a.stencilBuffer=this.stencilBuffer;a.generateMipmaps=this.generateMipmaps;return a};
THREE.WebGLRenderTargetCube=function(a,b,c){THREE.WebGLRenderTarget.call(this,a,b,c);this.activeCubeFace=0};THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype);THREE.RenderableVertex=function(){this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.visible=!0};THREE.RenderableVertex.prototype.copy=function(a){this.positionWorld.copy(a.positionWorld);this.positionScreen.copy(a.positionScreen)};
THREE.RenderableFace3=function(){this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.vertexNormalsLength=0;this.material=null;this.uvs=[[]];this.z=null};
THREE.RenderableFace4=function(){this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.v4=new THREE.RenderableVertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.vertexNormalsLength=0;this.material=null;this.uvs=[[]];this.z=null};
THREE.RenderableObject=function(){this.z=this.object=null};THREE.RenderableParticle=function(){this.rotation=this.z=this.y=this.x=this.object=null;this.scale=new THREE.Vector2;this.material=null};THREE.RenderableLine=function(){this.z=null;this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.material=null};
THREE.ColorUtils={adjustHSV:function(a,b,c,d){var f=THREE.ColorUtils.__hsv;THREE.ColorUtils.rgbToHsv(a,f);f.h=THREE.Math.clamp(f.h+b,0,1);f.s=THREE.Math.clamp(f.s+c,0,1);f.v=THREE.Math.clamp(f.v+d,0,1);a.setHSV(f.h,f.s,f.v)},rgbToHsv:function(a,b){var c=a.r,d=a.g,f=a.b,e=Math.max(Math.max(c,d),f),g=Math.min(Math.min(c,d),f);if(g===e)g=c=0;else{var h=e-g,g=h/e,c=(c===e?(d-f)/h:d===e?2+(f-c)/h:4+(c-d)/h)/6;0>c&&(c+=1);1<c&&(c-=1)}void 0===b&&(b={h:0,s:0,v:0});b.h=c;b.s=g;b.v=e;return b}};
THREE.ColorUtils.__hsv={h:0,s:0,v:0};
THREE.GeometryUtils={merge:function(a,b){for(var c,d,f=a.vertices.length,e=b instanceof THREE.Mesh?b.geometry:b,g=a.vertices,h=e.vertices,j=a.faces,k=e.faces,m=a.faceVertexUvs[0],p=e.faceVertexUvs[0],n={},s=0;s<a.materials.length;s++)n[a.materials[s].id]=s;b instanceof THREE.Mesh&&(b.matrixAutoUpdate&&b.updateMatrix(),c=b.matrix,d=new THREE.Matrix4,d.extractRotation(c,b.scale));for(var s=0,r=h.length;s<r;s++){var q=h[s].clone();c&&c.multiplyVector3(q);g.push(q)}s=0;for(r=k.length;s<r;s++){var g=k[s],
t,v,w=g.vertexNormals,y=g.vertexColors;g instanceof THREE.Face3?t=new THREE.Face3(g.a+f,g.b+f,g.c+f):g instanceof THREE.Face4&&(t=new THREE.Face4(g.a+f,g.b+f,g.c+f,g.d+f));t.normal.copy(g.normal);d&&d.multiplyVector3(t.normal);h=0;for(q=w.length;h<q;h++)v=w[h].clone(),d&&d.multiplyVector3(v),t.vertexNormals.push(v);t.color.copy(g.color);h=0;for(q=y.length;h<q;h++)v=y[h],t.vertexColors.push(v.clone());void 0!==g.materialIndex&&(h=e.materials[g.materialIndex],q=h.id,y=n[q],void 0===y&&(y=a.materials.length,
n[q]=y,a.materials.push(h)),t.materialIndex=y);t.centroid.copy(g.centroid);c&&c.multiplyVector3(t.centroid);j.push(t)}s=0;for(r=p.length;s<r;s++){c=p[s];d=[];h=0;for(q=c.length;h<q;h++)d.push(new THREE.UV(c[h].u,c[h].v));m.push(d)}},clone:function(a){var b=new THREE.Geometry,c,d=a.vertices,f=a.faces,e=a.faceVertexUvs[0];a.materials&&(b.materials=a.materials.slice());a=0;for(c=d.length;a<c;a++)b.vertices.push(d[a].clone());a=0;for(c=f.length;a<c;a++)b.faces.push(f[a].clone());a=0;for(c=e.length;a<
c;a++){for(var d=e[a],f=[],g=0,h=d.length;g<h;g++)f.push(new THREE.UV(d[g].u,d[g].v));b.faceVertexUvs[0].push(f)}return b},randomPointInTriangle:function(a,b,c){var d,f,e,g=new THREE.Vector3,h=THREE.GeometryUtils.__v1;d=THREE.GeometryUtils.random();f=THREE.GeometryUtils.random();1<d+f&&(d=1-d,f=1-f);e=1-d-f;g.copy(a);g.multiplyScalar(d);h.copy(b);h.multiplyScalar(f);g.addSelf(h);h.copy(c);h.multiplyScalar(e);g.addSelf(h);return g},randomPointInFace:function(a,b,c){var d,f,e;if(a instanceof THREE.Face3)return d=
b.vertices[a.a],f=b.vertices[a.b],e=b.vertices[a.c],THREE.GeometryUtils.randomPointInTriangle(d,f,e);if(a instanceof THREE.Face4){d=b.vertices[a.a];f=b.vertices[a.b];e=b.vertices[a.c];b=b.vertices[a.d];var g;c?a._area1&&a._area2?(c=a._area1,g=a._area2):(c=THREE.GeometryUtils.triangleArea(d,f,b),g=THREE.GeometryUtils.triangleArea(f,e,b),a._area1=c,a._area2=g):(c=THREE.GeometryUtils.triangleArea(d,f,b),g=THREE.GeometryUtils.triangleArea(f,e,b));return THREE.GeometryUtils.random()*(c+g)<c?THREE.GeometryUtils.randomPointInTriangle(d,
f,b):THREE.GeometryUtils.randomPointInTriangle(f,e,b)}},randomPointsInGeometry:function(a,b){function c(a){function b(c,d){if(d<c)return c;var e=c+Math.floor((d-c)/2);return k[e]>a?b(c,e-1):k[e]<a?b(e+1,d):e}return b(0,k.length-1)}var d,f,e=a.faces,g=a.vertices,h=e.length,j=0,k=[],m,p,n,s;for(f=0;f<h;f++)d=e[f],d instanceof THREE.Face3?(m=g[d.a],p=g[d.b],n=g[d.c],d._area=THREE.GeometryUtils.triangleArea(m,p,n)):d instanceof THREE.Face4&&(m=g[d.a],p=g[d.b],n=g[d.c],s=g[d.d],d._area1=THREE.GeometryUtils.triangleArea(m,
p,s),d._area2=THREE.GeometryUtils.triangleArea(p,n,s),d._area=d._area1+d._area2),j+=d._area,k[f]=j;d=[];for(f=0;f<b;f++)g=THREE.GeometryUtils.random()*j,g=c(g),d[f]=THREE.GeometryUtils.randomPointInFace(e[g],a,!0);return d},triangleArea:function(a,b,c){var d,f=THREE.GeometryUtils.__v1;f.sub(a,b);d=f.length();f.sub(a,c);a=f.length();f.sub(b,c);c=f.length();b=0.5*(d+a+c);return Math.sqrt(b*(b-d)*(b-a)*(b-c))},center:function(a){a.computeBoundingBox();var b=a.boundingBox,c=new THREE.Vector3;c.add(b.min,
b.max);c.multiplyScalar(-0.5);a.applyMatrix((new THREE.Matrix4).makeTranslation(c.x,c.y,c.z));a.computeBoundingBox();return c},normalizeUVs:function(a){a=a.faceVertexUvs[0];for(var b=0,c=a.length;b<c;b++)for(var d=a[b],f=0,e=d.length;f<e;f++)1!==d[f].u&&(d[f].u-=Math.floor(d[f].u)),1!==d[f].v&&(d[f].v-=Math.floor(d[f].v))},triangulateQuads:function(a){var b,c,d,f,e=[],g=[],h=[];b=0;for(c=a.faceUvs.length;b<c;b++)g[b]=[];b=0;for(c=a.faceVertexUvs.length;b<c;b++)h[b]=[];b=0;for(c=a.faces.length;b<c;b++)if(d=
a.faces[b],d instanceof THREE.Face4){f=d.a;var j=d.b,k=d.c,m=d.d,p=new THREE.Face3,n=new THREE.Face3;p.color.copy(d.color);n.color.copy(d.color);p.materialIndex=d.materialIndex;n.materialIndex=d.materialIndex;p.a=f;p.b=j;p.c=m;n.a=j;n.b=k;n.c=m;4===d.vertexColors.length&&(p.vertexColors[0]=d.vertexColors[0].clone(),p.vertexColors[1]=d.vertexColors[1].clone(),p.vertexColors[2]=d.vertexColors[3].clone(),n.vertexColors[0]=d.vertexColors[1].clone(),n.vertexColors[1]=d.vertexColors[2].clone(),n.vertexColors[2]=
d.vertexColors[3].clone());e.push(p,n);d=0;for(f=a.faceVertexUvs.length;d<f;d++)a.faceVertexUvs[d].length&&(p=a.faceVertexUvs[d][b],j=p[1],k=p[2],m=p[3],p=[p[0].clone(),j.clone(),m.clone()],j=[j.clone(),k.clone(),m.clone()],h[d].push(p,j));d=0;for(f=a.faceUvs.length;d<f;d++)a.faceUvs[d].length&&(j=a.faceUvs[d][b],g[d].push(j,j))}else{e.push(d);d=0;for(f=a.faceUvs.length;d<f;d++)g[d].push(a.faceUvs[d][b]);d=0;for(f=a.faceVertexUvs.length;d<f;d++)h[d].push(a.faceVertexUvs[d][b])}a.faces=e;a.faceUvs=
g;a.faceVertexUvs=h;a.computeCentroids();a.computeFaceNormals();a.computeVertexNormals();a.hasTangents&&a.computeTangents()},explode:function(a){for(var b=[],c=0,d=a.faces.length;c<d;c++){var f=b.length,e=a.faces[c];if(e instanceof THREE.Face4){var g=e.a,h=e.b,j=e.c,g=a.vertices[g],h=a.vertices[h],j=a.vertices[j],k=a.vertices[e.d];b.push(g.clone());b.push(h.clone());b.push(j.clone());b.push(k.clone());e.a=f;e.b=f+1;e.c=f+2;e.d=f+3}else g=e.a,h=e.b,j=e.c,g=a.vertices[g],h=a.vertices[h],j=a.vertices[j],
b.push(g.clone()),b.push(h.clone()),b.push(j.clone()),e.a=f,e.b=f+1,e.c=f+2}a.vertices=b;delete a.__tmpVertices},tessellate:function(a,b){var c,d,f,e,g,h,j,k,m,p,n,s,r,q,t,v,w,y,u,D=[],x=[];c=0;for(d=a.faceVertexUvs.length;c<d;c++)x[c]=[];c=0;for(d=a.faces.length;c<d;c++)if(f=a.faces[c],f instanceof THREE.Face3)if(e=f.a,g=f.b,h=f.c,k=a.vertices[e],m=a.vertices[g],p=a.vertices[h],s=k.distanceTo(m),r=m.distanceTo(p),n=k.distanceTo(p),s>b||r>b||n>b){j=a.vertices.length;y=f.clone();u=f.clone();s>=r&&
s>=n?(k=k.clone(),k.lerpSelf(m,0.5),y.a=e,y.b=j,y.c=h,u.a=j,u.b=g,u.c=h,3===f.vertexNormals.length&&(e=f.vertexNormals[0].clone(),e.lerpSelf(f.vertexNormals[1],0.5),y.vertexNormals[1].copy(e),u.vertexNormals[0].copy(e)),3===f.vertexColors.length&&(e=f.vertexColors[0].clone(),e.lerpSelf(f.vertexColors[1],0.5),y.vertexColors[1].copy(e),u.vertexColors[0].copy(e)),f=0):r>=s&&r>=n?(k=m.clone(),k.lerpSelf(p,0.5),y.a=e,y.b=g,y.c=j,u.a=j,u.b=h,u.c=e,3===f.vertexNormals.length&&(e=f.vertexNormals[1].clone(),
e.lerpSelf(f.vertexNormals[2],0.5),y.vertexNormals[2].copy(e),u.vertexNormals[0].copy(e),u.vertexNormals[1].copy(f.vertexNormals[2]),u.vertexNormals[2].copy(f.vertexNormals[0])),3===f.vertexColors.length&&(e=f.vertexColors[1].clone(),e.lerpSelf(f.vertexColors[2],0.5),y.vertexColors[2].copy(e),u.vertexColors[0].copy(e),u.vertexColors[1].copy(f.vertexColors[2]),u.vertexColors[2].copy(f.vertexColors[0])),f=1):(k=k.clone(),k.lerpSelf(p,0.5),y.a=e,y.b=g,y.c=j,u.a=j,u.b=g,u.c=h,3===f.vertexNormals.length&&
(e=f.vertexNormals[0].clone(),e.lerpSelf(f.vertexNormals[2],0.5),y.vertexNormals[2].copy(e),u.vertexNormals[0].copy(e)),3===f.vertexColors.length&&(e=f.vertexColors[0].clone(),e.lerpSelf(f.vertexColors[2],0.5),y.vertexColors[2].copy(e),u.vertexColors[0].copy(e)),f=2);D.push(y,u);a.vertices.push(k);e=0;for(g=a.faceVertexUvs.length;e<g;e++)a.faceVertexUvs[e].length&&(k=a.faceVertexUvs[e][c],u=k[0],h=k[1],y=k[2],0===f?(m=u.clone(),m.lerpSelf(h,0.5),k=[u.clone(),m.clone(),y.clone()],h=[m.clone(),h.clone(),
y.clone()]):1===f?(m=h.clone(),m.lerpSelf(y,0.5),k=[u.clone(),h.clone(),m.clone()],h=[m.clone(),y.clone(),u.clone()]):(m=u.clone(),m.lerpSelf(y,0.5),k=[u.clone(),h.clone(),m.clone()],h=[m.clone(),h.clone(),y.clone()]),x[e].push(k,h))}else{D.push(f);e=0;for(g=a.faceVertexUvs.length;e<g;e++)x[e].push(a.faceVertexUvs[e][c])}else if(e=f.a,g=f.b,h=f.c,j=f.d,k=a.vertices[e],m=a.vertices[g],p=a.vertices[h],n=a.vertices[j],s=k.distanceTo(m),r=m.distanceTo(p),q=p.distanceTo(n),t=k.distanceTo(n),s>b||r>b||
q>b||t>b){v=a.vertices.length;w=a.vertices.length+1;y=f.clone();u=f.clone();s>=r&&s>=q&&s>=t||q>=r&&q>=s&&q>=t?(s=k.clone(),s.lerpSelf(m,0.5),m=p.clone(),m.lerpSelf(n,0.5),y.a=e,y.b=v,y.c=w,y.d=j,u.a=v,u.b=g,u.c=h,u.d=w,4===f.vertexNormals.length&&(e=f.vertexNormals[0].clone(),e.lerpSelf(f.vertexNormals[1],0.5),g=f.vertexNormals[2].clone(),g.lerpSelf(f.vertexNormals[3],0.5),y.vertexNormals[1].copy(e),y.vertexNormals[2].copy(g),u.vertexNormals[0].copy(e),u.vertexNormals[3].copy(g)),4===f.vertexColors.length&&
(e=f.vertexColors[0].clone(),e.lerpSelf(f.vertexColors[1],0.5),g=f.vertexColors[2].clone(),g.lerpSelf(f.vertexColors[3],0.5),y.vertexColors[1].copy(e),y.vertexColors[2].copy(g),u.vertexColors[0].copy(e),u.vertexColors[3].copy(g)),f=0):(s=m.clone(),s.lerpSelf(p,0.5),m=n.clone(),m.lerpSelf(k,0.5),y.a=e,y.b=g,y.c=v,y.d=w,u.a=w,u.b=v,u.c=h,u.d=j,4===f.vertexNormals.length&&(e=f.vertexNormals[1].clone(),e.lerpSelf(f.vertexNormals[2],0.5),g=f.vertexNormals[3].clone(),g.lerpSelf(f.vertexNormals[0],0.5),
y.vertexNormals[2].copy(e),y.vertexNormals[3].copy(g),u.vertexNormals[0].copy(g),u.vertexNormals[1].copy(e)),4===f.vertexColors.length&&(e=f.vertexColors[1].clone(),e.lerpSelf(f.vertexColors[2],0.5),g=f.vertexColors[3].clone(),g.lerpSelf(f.vertexColors[0],0.5),y.vertexColors[2].copy(e),y.vertexColors[3].copy(g),u.vertexColors[0].copy(g),u.vertexColors[1].copy(e)),f=1);D.push(y,u);a.vertices.push(s,m);e=0;for(g=a.faceVertexUvs.length;e<g;e++)a.faceVertexUvs[e].length&&(k=a.faceVertexUvs[e][c],u=k[0],
h=k[1],y=k[2],k=k[3],0===f?(m=u.clone(),m.lerpSelf(h,0.5),p=y.clone(),p.lerpSelf(k,0.5),u=[u.clone(),m.clone(),p.clone(),k.clone()],h=[m.clone(),h.clone(),y.clone(),p.clone()]):(m=h.clone(),m.lerpSelf(y,0.5),p=k.clone(),p.lerpSelf(u,0.5),u=[u.clone(),h.clone(),m.clone(),p.clone()],h=[p.clone(),m.clone(),y.clone(),k.clone()]),x[e].push(u,h))}else{D.push(f);e=0;for(g=a.faceVertexUvs.length;e<g;e++)x[e].push(a.faceVertexUvs[e][c])}a.faces=D;a.faceVertexUvs=x}};THREE.GeometryUtils.random=THREE.Math.random16;
THREE.GeometryUtils.__v1=new THREE.Vector3;
THREE.ImageUtils={crossOrigin:"anonymous",loadTexture:function(a,b,c,d){var f=new Image,e=new THREE.Texture(f,b);b=new THREE.ImageLoader;b.addEventListener("load",function(a){e.image=a.content;e.needsUpdate=!0;c&&c(e)});b.addEventListener("error",function(a){d&&d(a.message)});b.crossOrigin=this.crossOrigin;b.load(a,f);return e},loadCompressedTexture:function(a,b,c,d){var f=new THREE.CompressedTexture;f.mapping=b;var e=new XMLHttpRequest;e.onload=function(){var a=THREE.ImageUtils.parseDDS(e.response,
!0);f.format=a.format;f.mipmaps=a.mipmaps;f.image.width=a.width;f.image.height=a.height;f.generateMipmaps=!1;f.needsUpdate=!0;c&&c(f)};e.onerror=d;e.open("GET",a,!0);e.responseType="arraybuffer";e.send(null);return f},loadTextureCube:function(a,b,c,d){var f=[];f.loadCount=0;var e=new THREE.Texture;e.image=f;void 0!==b&&(e.mapping=b);e.flipY=!1;b=0;for(var g=a.length;b<g;++b){var h=new Image;f[b]=h;h.onload=function(){f.loadCount+=1;6===f.loadCount&&(e.needsUpdate=!0,c&&c())};h.onerror=d;h.crossOrigin=
this.crossOrigin;h.src=a[b]}return e},loadCompressedTextureCube:function(a,b,c,d){var f=[];f.loadCount=0;var e=new THREE.CompressedTexture;e.image=f;void 0!==b&&(e.mapping=b);e.flipY=!1;e.generateMipmaps=!1;b=function(a,b){return function(){var d=THREE.ImageUtils.parseDDS(a.response,!0);b.format=d.format;b.mipmaps=d.mipmaps;b.width=d.width;b.height=d.height;f.loadCount+=1;6===f.loadCount&&(e.format=d.format,e.needsUpdate=!0,c&&c())}};for(var g=0,h=a.length;g<h;++g){var j={};f[g]=j;var k=new XMLHttpRequest;
k.onload=b(k,j);k.onerror=d;k.open("GET",a[g],!0);k.responseType="arraybuffer";k.send(null)}return e},parseDDS:function(a,b){function c(a){return a.charCodeAt(0)+(a.charCodeAt(1)<<8)+(a.charCodeAt(2)<<16)+(a.charCodeAt(3)<<24)}var d={mipmaps:[],width:0,height:0,format:null,mipmapCount:1},f=c("DXT1"),e=c("DXT3"),g=c("DXT5"),h=new Int32Array(a,0,31);if(542327876!==h[0])return console.error("ImageUtils.parseDDS(): Invalid magic number in DDS header"),d;if(!h[20]&4)return console.error("ImageUtils.parseDDS(): Unsupported format, must contain a FourCC code"),
d;var j=h[21];switch(j){case f:f=8;d.format=THREE.RGB_S3TC_DXT1_Format;break;case e:f=16;d.format=THREE.RGBA_S3TC_DXT3_Format;break;case g:f=16;d.format=THREE.RGBA_S3TC_DXT5_Format;break;default:return console.error("ImageUtils.parseDDS(): Unsupported FourCC code: ",String.fromCharCode(j&255,j>>8&255,j>>16&255,j>>24&255)),d}d.mipmapCount=1;h[2]&131072&&!1!==b&&(d.mipmapCount=Math.max(1,h[7]));d.width=h[4];d.height=h[3];h=h[1]+4;e=d.width;g=d.height;for(j=0;j<d.mipmapCount;j++){var k=Math.max(4,e)/
4*Math.max(4,g)/4*f,m={data:new Uint8Array(a,h,k),width:e,height:g};d.mipmaps.push(m);h+=k;e=Math.max(0.5*e,1);g=Math.max(0.5*g,1)}return d},getNormalMap:function(a,b){var c=function(a){var b=Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]);return[a[0]/b,a[1]/b,a[2]/b]};b|=1;var d=a.width,f=a.height,e=document.createElement("canvas");e.width=d;e.height=f;var g=e.getContext("2d");g.drawImage(a,0,0);for(var h=g.getImageData(0,0,d,f).data,j=g.createImageData(d,f),k=j.data,m=0;m<d;m++)for(var p=0;p<f;p++){var n=
0>p-1?0:p-1,s=p+1>f-1?f-1:p+1,r=0>m-1?0:m-1,q=m+1>d-1?d-1:m+1,t=[],v=[0,0,h[4*(p*d+m)]/255*b];t.push([-1,0,h[4*(p*d+r)]/255*b]);t.push([-1,-1,h[4*(n*d+r)]/255*b]);t.push([0,-1,h[4*(n*d+m)]/255*b]);t.push([1,-1,h[4*(n*d+q)]/255*b]);t.push([1,0,h[4*(p*d+q)]/255*b]);t.push([1,1,h[4*(s*d+q)]/255*b]);t.push([0,1,h[4*(s*d+m)]/255*b]);t.push([-1,1,h[4*(s*d+r)]/255*b]);n=[];r=t.length;for(s=0;s<r;s++){var q=t[s],w=t[(s+1)%r],q=[q[0]-v[0],q[1]-v[1],q[2]-v[2]],w=[w[0]-v[0],w[1]-v[1],w[2]-v[2]];n.push(c([q[1]*
w[2]-q[2]*w[1],q[2]*w[0]-q[0]*w[2],q[0]*w[1]-q[1]*w[0]]))}t=[0,0,0];for(s=0;s<n.length;s++)t[0]+=n[s][0],t[1]+=n[s][1],t[2]+=n[s][2];t[0]/=n.length;t[1]/=n.length;t[2]/=n.length;v=4*(p*d+m);k[v]=255*((t[0]+1)/2)|0;k[v+1]=255*((t[1]+1)/2)|0;k[v+2]=255*t[2]|0;k[v+3]=255}g.putImageData(j,0,0);return e},generateDataTexture:function(a,b,c){var d=a*b,f=new Uint8Array(3*d),e=Math.floor(255*c.r),g=Math.floor(255*c.g);c=Math.floor(255*c.b);for(var h=0;h<d;h++)f[3*h]=e,f[3*h+1]=g,f[3*h+2]=c;a=new THREE.DataTexture(f,
a,b,THREE.RGBFormat);a.needsUpdate=!0;return a}};
THREE.SceneUtils={showHierarchy:function(a,b){THREE.SceneUtils.traverseHierarchy(a,function(a){a.visible=b})},traverseHierarchy:function(a,b){var c,d,f=a.children.length;for(d=0;d<f;d++)c=a.children[d],b(c),THREE.SceneUtils.traverseHierarchy(c,b)},createMultiMaterialObject:function(a,b){var c,d=b.length,f=new THREE.Object3D;for(c=0;c<d;c++){var e=new THREE.Mesh(a,b[c]);f.add(e)}return f},cloneObject:function(a){var b;a instanceof THREE.MorphAnimMesh?(b=new THREE.MorphAnimMesh(a.geometry,a.material),
b.duration=a.duration,b.mirroredLoop=a.mirroredLoop,b.time=a.time,b.lastKeyframe=a.lastKeyframe,b.currentKeyframe=a.currentKeyframe,b.direction=a.direction,b.directionBackwards=a.directionBackwards):a instanceof THREE.SkinnedMesh?b=new THREE.SkinnedMesh(a.geometry,a.material,a.useVertexTexture):a instanceof THREE.Mesh?b=new THREE.Mesh(a.geometry,a.material):a instanceof THREE.Line?b=new THREE.Line(a.geometry,a.material,a.type):a instanceof THREE.Ribbon?b=new THREE.Ribbon(a.geometry,a.material):a instanceof
THREE.ParticleSystem?(b=new THREE.ParticleSystem(a.geometry,a.material),b.sortParticles=a.sortParticles):a instanceof THREE.Particle?b=new THREE.Particle(a.material):a instanceof THREE.Sprite?(b=new THREE.Sprite({}),b.color.copy(a.color),b.map=a.map,b.blending=a.blending,b.useScreenCoordinates=a.useScreenCoordinates,b.mergeWith3D=a.mergeWith3D,b.affectedByDistance=a.affectedByDistance,b.scaleByViewport=a.scaleByViewport,b.alignment=a.alignment,b.rotation3d.copy(a.rotation3d),b.rotation=a.rotation,
b.opacity=a.opacity,b.uvOffset.copy(a.uvOffset),b.uvScale.copy(a.uvScale)):a instanceof THREE.LOD?b=new THREE.LOD:a instanceof THREE.Object3D&&(b=new THREE.Object3D);b.name=a.name;b.parent=a.parent;b.up.copy(a.up);b.position.copy(a.position);b.rotation instanceof THREE.Vector3&&b.rotation.copy(a.rotation);b.eulerOrder=a.eulerOrder;b.scale.copy(a.scale);b.dynamic=a.dynamic;b.renderDepth=a.renderDepth;b.rotationAutoUpdate=a.rotationAutoUpdate;b.matrix.copy(a.matrix);b.matrixWorld.copy(a.matrixWorld);
b.matrixRotationWorld.copy(a.matrixRotationWorld);b.matrixAutoUpdate=a.matrixAutoUpdate;b.matrixWorldNeedsUpdate=a.matrixWorldNeedsUpdate;b.quaternion.copy(a.quaternion);b.useQuaternion=a.useQuaternion;b.boundRadius=a.boundRadius;b.boundRadiusScale=a.boundRadiusScale;b.visible=a.visible;b.castShadow=a.castShadow;b.receiveShadow=a.receiveShadow;b.frustumCulled=a.frustumCulled;for(var c=0;c<a.children.length;c++){var d=THREE.SceneUtils.cloneObject(a.children[c]);b.children[c]=d;d.parent=b}if(a instanceof
THREE.LOD)for(c=0;c<a.LODs.length;c++)b.LODs[c]={visibleAtDistance:a.LODs[c].visibleAtDistance,object3D:b.children[c]};return b},detach:function(a,b,c){a.applyMatrix(b.matrixWorld);b.remove(a);c.add(a)},attach:function(a,b,c){var d=new THREE.Matrix4;d.getInverse(c.matrixWorld);a.applyMatrix(d);b.remove(a);c.add(a)}};
THREE.WebGLRenderer&&(THREE.ShaderUtils={lib:{fresnel:{uniforms:{mRefractionRatio:{type:"f",value:1.02},mFresnelBias:{type:"f",value:0.1},mFresnelPower:{type:"f",value:2},mFresnelScale:{type:"f",value:1},tCube:{type:"t",value:null}},fragmentShader:"uniform samplerCube tCube;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\nvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\nrefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\nrefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\nrefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\nrefractedColor.a = 1.0;\ngl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\n}",
vertexShader:"uniform float mRefractionRatio;\nuniform float mFresnelBias;\nuniform float mFresnelScale;\nuniform float mFresnelPower;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvec4 mPosition = modelMatrix * vec4( position, 1.0 );\nvec3 nWorld = normalize( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\nvec3 I = mPosition.xyz - cameraPosition;\nvReflect = reflect( I, nWorld );\nvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\nvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\nvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\nvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\ngl_Position = projectionMatrix * mvPosition;\n}"},
normal:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,
1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},uDiffuseColor:{type:"c",value:new THREE.Color(16777215)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(16777215)},uShininess:{type:"f",value:30},uOpacity:{type:"f",value:1},useRefract:{type:"i",value:0},uRefractionRatio:{type:"f",value:0.98},uReflectivity:{type:"f",value:0.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,
1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uShininess;\nuniform float uOpacity;\nuniform bool enableDiffuse;\nuniform bool enableSpecular;\nuniform bool enableAO;\nuniform bool enableReflection;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tAO;\nuniform samplerCube tCube;\nuniform vec2 uNormalScale;\nuniform bool useRefract;\nuniform float uRefractionRatio;\nuniform float uReflectivity;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightPosition[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngle[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3( 1.0 ), uOpacity );\nvec3 specularTex = vec3( 1.0 );\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse ) {\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( tDiffuse, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\n#endif\n}\nif( enableAO ) {\n#ifdef GAMMA_INPUT\nvec4 aoColor = texture2D( tAO, vUv );\naoColor.xyz *= aoColor.xyz;\ngl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\n#endif\n}\nif( enableSpecular )\nspecularTex = texture2D( tSpecular, vUv ).xyz;\nmat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\nvec3 finalNormal = tsb * normalTex;\n#ifdef FLIP_SIDED\nfinalNormal = -finalNormal;\n#endif\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 pointVector = lPosition.xyz + vViewPosition.xyz;\nfloat pointDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\npointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );\npointVector = normalize( pointVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\n#endif\npointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;\nvec3 pointHalfVector = normalize( pointVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;\n#else\npointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 spotVector = lPosition.xyz + vViewPosition.xyz;\nfloat spotDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nspotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );\nspotVector = normalize( spotVector );\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngle[ i ] ) {\nspotEffect = pow( spotEffect, spotLightExponent[ i ] );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );\n#endif\nspotDiffuse += spotDistance * spotLightColor[ i ] * uDiffuseColor * spotDiffuseWeight * spotEffect;\nvec3 spotHalfVector = normalize( spotVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += spotDistance * spotLightColor[ i ] * uSpecularColor * spotSpecularWeight * spotDiffuseWeight * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\n#ifdef WRAP_AROUND\nfloat directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\nfloat directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\n#endif\ndirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( hemisphereLightPosition[ i ], 1.0 );\nvec3 lVector = normalize( lPosition.xyz + vViewPosition.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += uDiffuseColor * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularTex.r * max( pow( hemiDotNormalHalfSky, uShininess ), 0.0 );\nvec3 lVectorGround = normalize( -lPosition.xyz + vViewPosition.xyz );\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularTex.r * max( pow( hemiDotNormalHalfGround, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlickSky = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n#else\nhemiSpecular += uSpecularColor * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor ) + totalSpecular;\n#endif\nif ( enableReflection ) {\nvec3 vReflect;\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nvReflect = refract( cameraToVertex, normal, uRefractionRatio );\n} else {\nvReflect = reflect( cameraToVertex, normal );\n}\nvec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * uReflectivity );\n}",
THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;\nuniform vec2 uOffset;\nuniform vec2 uRepeat;\nuniform bool enableDisplacement;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,"#ifdef USE_SKINNING\nvNormal = normalMatrix * skinnedNormal.xyz;\nvec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );\nvTangent = normalMatrix * skinnedTangent.xyz;\n#else\nvNormal = normalMatrix * normal;\nvTangent = normalMatrix * tangent.xyz;\n#endif\nvBinormal = cross( vNormal, vTangent ) * tangent.w;\nvUv = uv * uRepeat + uOffset;\nvec3 displacedPosition;\n#ifdef VERTEX_TEXTURES\nif ( enableDisplacement ) {\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\ndisplacedPosition = position + normalize( normal ) * df;\n} else {\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n}\n#else\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n#endif\nvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\nvec4 mPosition = modelMatrix * vec4( displacedPosition, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\nvWorldPosition = mPosition.xyz;\nvViewPosition = -mvPosition.xyz;\n#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * mPosition;\n}\n#endif\n}"].join("\n")},
cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:"varying vec3 vViewPosition;\nvoid main() {\nvec4 mPosition = modelMatrix * vec4( position, 1.0 );\nvViewPosition = cameraPosition - mPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vViewPosition;\nvoid main() {\nvec3 wPos = cameraPosition - vViewPosition;\ngl_FragColor = textureCube( tCube, vec3( tFlip * wPos.x, wPos.yz ) );\n}"}}});
THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){return this.faces[this.face][this.weight][this.style]},loadFace:function(a){var b=a.familyName.toLowerCase();this.faces[b]=this.faces[b]||{};this.faces[b][a.cssFontWeight]=this.faces[b][a.cssFontWeight]||{};this.faces[b][a.cssFontWeight][a.cssFontStyle]=a;return this.faces[b][a.cssFontWeight][a.cssFontStyle]=a},drawText:function(a){var b=this.getFace(),c=this.size/b.resolution,d=0,f=
String(a).split(""),e=f.length,g=[];for(a=0;a<e;a++){var h=new THREE.Path,h=this.extractGlyphPoints(f[a],b,c,d,h),d=d+h.offset;g.push(h.path)}return{paths:g,offset:d/2}},extractGlyphPoints:function(a,b,c,d,f){var e=[],g,h,j,k,m,p,n,s,r,q,t,v=b.glyphs[a]||b.glyphs["?"];if(v){if(v.o){b=v._cachedOutline||(v._cachedOutline=v.o.split(" "));k=b.length;for(a=0;a<k;)switch(j=b[a++],j){case "m":j=b[a++]*c+d;m=b[a++]*c;f.moveTo(j,m);break;case "l":j=b[a++]*c+d;m=b[a++]*c;f.lineTo(j,m);break;case "q":j=b[a++]*
c+d;m=b[a++]*c;s=b[a++]*c+d;r=b[a++]*c;f.quadraticCurveTo(s,r,j,m);if(g=e[e.length-1]){p=g.x;n=g.y;g=1;for(h=this.divisions;g<=h;g++){var w=g/h;THREE.Shape.Utils.b2(w,p,s,j);THREE.Shape.Utils.b2(w,n,r,m)}}break;case "b":if(j=b[a++]*c+d,m=b[a++]*c,s=b[a++]*c+d,r=b[a++]*-c,q=b[a++]*c+d,t=b[a++]*-c,f.bezierCurveTo(j,m,s,r,q,t),g=e[e.length-1]){p=g.x;n=g.y;g=1;for(h=this.divisions;g<=h;g++)w=g/h,THREE.Shape.Utils.b3(w,p,s,q,j),THREE.Shape.Utils.b3(w,n,r,t,m)}}}return{offset:v.ha*c,path:f}}}};
THREE.FontUtils.generateShapes=function(a,b){b=b||{};var c=void 0!==b.curveSegments?b.curveSegments:4,d=void 0!==b.font?b.font:"helvetiker",f=void 0!==b.weight?b.weight:"normal",e=void 0!==b.style?b.style:"normal";THREE.FontUtils.size=void 0!==b.size?b.size:100;THREE.FontUtils.divisions=c;THREE.FontUtils.face=d;THREE.FontUtils.weight=f;THREE.FontUtils.style=e;c=THREE.FontUtils.drawText(a).paths;d=[];f=0;for(e=c.length;f<e;f++)Array.prototype.push.apply(d,c[f].toShapes());return d};
(function(a){var b=function(a){for(var b=a.length,f=0,e=b-1,g=0;g<b;e=g++)f+=a[e].x*a[g].y-a[g].x*a[e].y;return 0.5*f};a.Triangulate=function(a,d){var f=a.length;if(3>f)return null;var e=[],g=[],h=[],j,k,m;if(0<b(a))for(k=0;k<f;k++)g[k]=k;else for(k=0;k<f;k++)g[k]=f-1-k;var p=2*f;for(k=f-1;2<f;){if(0>=p--){console.log("Warning, unable to triangulate polygon!");break}j=k;f<=j&&(j=0);k=j+1;f<=k&&(k=0);m=k+1;f<=m&&(m=0);var n;a:{n=a;var s=j,r=k,q=m,t=f,v=g,w=void 0,y=void 0,u=void 0,D=void 0,x=void 0,
C=void 0,G=void 0,A=void 0,J=void 0,y=n[v[s]].x,u=n[v[s]].y,D=n[v[r]].x,x=n[v[r]].y,C=n[v[q]].x,G=n[v[q]].y;if(1E-10>(D-y)*(G-u)-(x-u)*(C-y))n=!1;else{for(w=0;w<t;w++)if(!(w==s||w==r||w==q)){var A=n[v[w]].x,J=n[v[w]].y,H=void 0,I=void 0,E=void 0,Q=void 0,M=void 0,K=void 0,L=void 0,N=void 0,X=void 0,$=void 0,ba=void 0,O=void 0,H=C-D,I=G-x,E=y-C,Q=u-G,M=D-y,K=x-u,L=A-y,N=J-u,X=A-D,$=J-x,ba=A-C,O=J-G,H=H*$-I*X,M=M*N-K*L,E=E*O-Q*ba;if(0<=H&&0<=E&&0<=M){n=!1;break a}}n=!0}}if(n){e.push([a[g[j]],a[g[k]],
a[g[m]]]);h.push([g[j],g[k],g[m]]);j=k;for(m=k+1;m<f;j++,m++)g[j]=g[m];f--;p=2*f}}return d?h:e};a.Triangulate.area=b;return a})(THREE.FontUtils);self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace};THREE.Curve=function(){};THREE.Curve.prototype.getPoint=function(){console.log("Warning, getPoint() not implemented!");return null};THREE.Curve.prototype.getPointAt=function(a){a=this.getUtoTmapping(a);return this.getPoint(a)};
THREE.Curve.prototype.getPoints=function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPoint(b/a));return c};THREE.Curve.prototype.getSpacedPoints=function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPointAt(b/a));return c};THREE.Curve.prototype.getLength=function(){var a=this.getLengths();return a[a.length-1]};
THREE.Curve.prototype.getLengths=function(a){a||(a=this.__arcLengthDivisions?this.__arcLengthDivisions:200);if(this.cacheArcLengths&&this.cacheArcLengths.length==a+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var b=[],c,d=this.getPoint(0),f,e=0;b.push(0);for(f=1;f<=a;f++)c=this.getPoint(f/a),e+=c.distanceTo(d),b.push(e),d=c;return this.cacheArcLengths=b};THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0;this.getLengths()};
THREE.Curve.prototype.getUtoTmapping=function(a,b){var c=this.getLengths(),d=0,f=c.length,e;e=b?b:a*c[f-1];for(var g=0,h=f-1,j;g<=h;)if(d=Math.floor(g+(h-g)/2),j=c[d]-e,0>j)g=d+1;else if(0<j)h=d-1;else{h=d;break}d=h;if(c[d]==e)return d/(f-1);g=c[d];return(d+(e-g)/(c[d+1]-g))/(f-1)};THREE.Curve.prototype.getNormalVector=function(a){a=this.getTangent(a);return new THREE.Vector2(-a.y,a.x)};THREE.Curve.prototype.getTangent=function(a){var b=a-1E-4;a+=1E-4;0>b&&(b=0);1<a&&(a=1);b=this.getPoint(b);return this.getPoint(a).clone().subSelf(b).normalize()};
THREE.Curve.prototype.getTangentAt=function(a){a=this.getUtoTmapping(a);return this.getTangent(a)};THREE.LineCurve=function(a,b){this.v1=a;this.v2=b};THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.LineCurve.prototype.getPoint=function(a){var b=this.v2.clone().subSelf(this.v1);b.multiplyScalar(a).addSelf(this.v1);return b};THREE.LineCurve.prototype.getPointAt=function(a){return this.getPoint(a)};THREE.LineCurve.prototype.getTangent=function(){return this.v2.clone().subSelf(this.v1).normalize()};
THREE.QuadraticBezierCurve=function(a,b,c){this.v0=a;this.v1=b;this.v2=c};THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.QuadraticBezierCurve.prototype.getPoint=function(a){var b;b=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x);a=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y);return new THREE.Vector2(b,a)};
THREE.QuadraticBezierCurve.prototype.getTangent=function(a){var b;b=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.x,this.v1.x,this.v2.x);a=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.y,this.v1.y,this.v2.y);b=new THREE.Vector2(b,a);b.normalize();return b};THREE.CubicBezierCurve=function(a,b,c,d){this.v0=a;this.v1=b;this.v2=c;this.v3=d};THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype);
THREE.CubicBezierCurve.prototype.getPoint=function(a){var b;b=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);return new THREE.Vector2(b,a)};THREE.CubicBezierCurve.prototype.getTangent=function(a){var b;b=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);b=new THREE.Vector2(b,a);b.normalize();return b};
THREE.SplineCurve=function(a){this.points=void 0==a?[]:a};THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.SplineCurve.prototype.getPoint=function(a){var b=new THREE.Vector2,c=[],d=this.points,f;f=(d.length-1)*a;a=Math.floor(f);f-=a;c[0]=0==a?a:a-1;c[1]=a;c[2]=a>d.length-2?d.length-1:a+1;c[3]=a>d.length-3?d.length-1:a+2;b.x=THREE.Curve.Utils.interpolate(d[c[0]].x,d[c[1]].x,d[c[2]].x,d[c[3]].x,f);b.y=THREE.Curve.Utils.interpolate(d[c[0]].y,d[c[1]].y,d[c[2]].y,d[c[3]].y,f);return b};
THREE.EllipseCurve=function(a,b,c,d,f,e,g){this.aX=a;this.aY=b;this.xRadius=c;this.yRadius=d;this.aStartAngle=f;this.aEndAngle=e;this.aClockwise=g};THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype);THREE.EllipseCurve.prototype.getPoint=function(a){var b=this.aEndAngle-this.aStartAngle;this.aClockwise||(a=1-a);b=this.aStartAngle+a*b;a=this.aX+this.xRadius*Math.cos(b);b=this.aY+this.yRadius*Math.sin(b);return new THREE.Vector2(a,b)};
THREE.ArcCurve=function(a,b,c,d,f,e){THREE.EllipseCurve.call(this,a,b,c,c,d,f,e)};THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype);
THREE.Curve.Utils={tangentQuadraticBezier:function(a,b,c,d){return 2*(1-a)*(c-b)+2*a*(d-c)},tangentCubicBezier:function(a,b,c,d,f){return-3*b*(1-a)*(1-a)+3*c*(1-a)*(1-a)-6*a*c*(1-a)+6*a*d*(1-a)-3*a*a*d+3*a*a*f},tangentSpline:function(a){return 6*a*a-6*a+(3*a*a-4*a+1)+(-6*a*a+6*a)+(3*a*a-2*a)},interpolate:function(a,b,c,d,f){a=0.5*(c-a);d=0.5*(d-b);var e=f*f;return(2*b-2*c+a+d)*f*e+(-3*b+3*c-2*a-d)*e+a*f+b}};
THREE.Curve.create=function(a,b){a.prototype=Object.create(THREE.Curve.prototype);a.prototype.getPoint=b;return a};THREE.LineCurve3=THREE.Curve.create(function(a,b){this.v1=a;this.v2=b},function(a){var b=new THREE.Vector3;b.sub(this.v2,this.v1);b.multiplyScalar(a);b.addSelf(this.v1);return b});
THREE.QuadraticBezierCurve3=THREE.Curve.create(function(a,b,c){this.v0=a;this.v1=b;this.v2=c},function(a){var b,c;b=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x);c=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y);a=THREE.Shape.Utils.b2(a,this.v0.z,this.v1.z,this.v2.z);return new THREE.Vector3(b,c,a)});
THREE.CubicBezierCurve3=THREE.Curve.create(function(a,b,c,d){this.v0=a;this.v1=b;this.v2=c;this.v3=d},function(a){var b,c;b=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);c=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);a=THREE.Shape.Utils.b3(a,this.v0.z,this.v1.z,this.v2.z,this.v3.z);return new THREE.Vector3(b,c,a)});
THREE.SplineCurve3=THREE.Curve.create(function(a){this.points=void 0==a?[]:a},function(a){var b=new THREE.Vector3,c=[],d=this.points,f;a*=d.length-1;f=Math.floor(a);a-=f;c[0]=0==f?f:f-1;c[1]=f;c[2]=f>d.length-2?d.length-1:f+1;c[3]=f>d.length-3?d.length-1:f+2;f=d[c[0]];var e=d[c[1]],g=d[c[2]],c=d[c[3]];b.x=THREE.Curve.Utils.interpolate(f.x,e.x,g.x,c.x,a);b.y=THREE.Curve.Utils.interpolate(f.y,e.y,g.y,c.y,a);b.z=THREE.Curve.Utils.interpolate(f.z,e.z,g.z,c.z,a);return b});
THREE.ClosedSplineCurve3=THREE.Curve.create(function(a){this.points=void 0==a?[]:a},function(a){var b=new THREE.Vector3,c=[],d=this.points,f;f=(d.length-0)*a;a=Math.floor(f);f-=a;a+=0<a?0:(Math.floor(Math.abs(a)/d.length)+1)*d.length;c[0]=(a-1)%d.length;c[1]=a%d.length;c[2]=(a+1)%d.length;c[3]=(a+2)%d.length;b.x=THREE.Curve.Utils.interpolate(d[c[0]].x,d[c[1]].x,d[c[2]].x,d[c[3]].x,f);b.y=THREE.Curve.Utils.interpolate(d[c[0]].y,d[c[1]].y,d[c[2]].y,d[c[3]].y,f);b.z=THREE.Curve.Utils.interpolate(d[c[0]].z,
d[c[1]].z,d[c[2]].z,d[c[3]].z,f);return b});THREE.CurvePath=function(){this.curves=[];this.bends=[];this.autoClose=!1};THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype);THREE.CurvePath.prototype.add=function(a){this.curves.push(a)};THREE.CurvePath.prototype.checkConnection=function(){};THREE.CurvePath.prototype.closePath=function(){var a=this.curves[0].getPoint(0),b=this.curves[this.curves.length-1].getPoint(1);a.equals(b)||this.curves.push(new THREE.LineCurve(b,a))};
THREE.CurvePath.prototype.getPoint=function(a){var b=a*this.getLength(),c=this.getCurveLengths();for(a=0;a<c.length;){if(c[a]>=b)return b=c[a]-b,a=this.curves[a],b=1-b/a.getLength(),a.getPointAt(b);a++}return null};THREE.CurvePath.prototype.getLength=function(){var a=this.getCurveLengths();return a[a.length-1]};
THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var a=[],b=0,c,d=this.curves.length;for(c=0;c<d;c++)b+=this.curves[c].getLength(),a.push(b);return this.cacheLengths=a};
THREE.CurvePath.prototype.getBoundingBox=function(){var a=this.getPoints(),b,c,d,f,e,g;b=c=Number.NEGATIVE_INFINITY;f=e=Number.POSITIVE_INFINITY;var h,j,k,m,p=a[0]instanceof THREE.Vector3;m=p?new THREE.Vector3:new THREE.Vector2;j=0;for(k=a.length;j<k;j++)h=a[j],h.x>b?b=h.x:h.x<f&&(f=h.x),h.y>c?c=h.y:h.y<e&&(e=h.y),p&&(h.z>d?d=h.z:h.z<g&&(g=h.z)),m.addSelf(h);a={minX:f,minY:e,maxX:b,maxY:c,centroid:m.divideScalar(k)};p&&(a.maxZ=d,a.minZ=g);return a};
THREE.CurvePath.prototype.createPointsGeometry=function(a){a=this.getPoints(a,!0);return this.createGeometry(a)};THREE.CurvePath.prototype.createSpacedPointsGeometry=function(a){a=this.getSpacedPoints(a,!0);return this.createGeometry(a)};THREE.CurvePath.prototype.createGeometry=function(a){for(var b=new THREE.Geometry,c=0;c<a.length;c++)b.vertices.push(new THREE.Vector3(a[c].x,a[c].y,a[c].z||0));return b};THREE.CurvePath.prototype.addWrapPath=function(a){this.bends.push(a)};
THREE.CurvePath.prototype.getTransformedPoints=function(a,b){var c=this.getPoints(a),d,f;b||(b=this.bends);d=0;for(f=b.length;d<f;d++)c=this.getWrapPoints(c,b[d]);return c};THREE.CurvePath.prototype.getTransformedSpacedPoints=function(a,b){var c=this.getSpacedPoints(a),d,f;b||(b=this.bends);d=0;for(f=b.length;d<f;d++)c=this.getWrapPoints(c,b[d]);return c};
THREE.CurvePath.prototype.getWrapPoints=function(a,b){var c=this.getBoundingBox(),d,f,e,g,h,j;d=0;for(f=a.length;d<f;d++)e=a[d],g=e.x,h=e.y,j=g/c.maxX,j=b.getUtoTmapping(j,g),g=b.getPoint(j),h=b.getNormalVector(j).multiplyScalar(h),e.x=g.x+h.x,e.y=g.y+h.y;return a};THREE.Gyroscope=function(){THREE.Object3D.call(this)};THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype);
THREE.Gyroscope.prototype.updateMatrixWorld=function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?(this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(this.translationWorld,this.rotationWorld,this.scaleWorld),this.matrix.decompose(this.translationObject,this.rotationObject,this.scaleObject),this.matrixWorld.compose(this.translationWorld,this.rotationObject,this.scaleWorld)):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=
!1,a=!0;for(var b=0,c=this.children.length;b<c;b++)this.children[b].updateMatrixWorld(a)};THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3;THREE.Gyroscope.prototype.translationObject=new THREE.Vector3;THREE.Gyroscope.prototype.rotationWorld=new THREE.Quaternion;THREE.Gyroscope.prototype.rotationObject=new THREE.Quaternion;THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3;THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3;
THREE.Path=function(a){THREE.CurvePath.call(this);this.actions=[];a&&this.fromPoints(a)};THREE.Path.prototype=Object.create(THREE.CurvePath.prototype);THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"};THREE.Path.prototype.fromPoints=function(a){this.moveTo(a[0].x,a[0].y);for(var b=1,c=a.length;b<c;b++)this.lineTo(a[b].x,a[b].y)};
THREE.Path.prototype.moveTo=function(a,b){var c=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:c})};THREE.Path.prototype.lineTo=function(a,b){var c=Array.prototype.slice.call(arguments),d=this.actions[this.actions.length-1].args,d=new THREE.LineCurve(new THREE.Vector2(d[d.length-2],d[d.length-1]),new THREE.Vector2(a,b));this.curves.push(d);this.actions.push({action:THREE.PathActions.LINE_TO,args:c})};
THREE.Path.prototype.quadraticCurveTo=function(a,b,c,d){var f=Array.prototype.slice.call(arguments),e=this.actions[this.actions.length-1].args,e=new THREE.QuadraticBezierCurve(new THREE.Vector2(e[e.length-2],e[e.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d));this.curves.push(e);this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:f})};
THREE.Path.prototype.bezierCurveTo=function(a,b,c,d,f,e){var g=Array.prototype.slice.call(arguments),h=this.actions[this.actions.length-1].args,h=new THREE.CubicBezierCurve(new THREE.Vector2(h[h.length-2],h[h.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d),new THREE.Vector2(f,e));this.curves.push(h);this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:g})};
THREE.Path.prototype.splineThru=function(a){var b=Array.prototype.slice.call(arguments),c=this.actions[this.actions.length-1].args,c=[new THREE.Vector2(c[c.length-2],c[c.length-1])];Array.prototype.push.apply(c,a);c=new THREE.SplineCurve(c);this.curves.push(c);this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:b})};THREE.Path.prototype.arc=function(a,b,c,d,f,e){var g=this.actions[this.actions.length-1].args;this.absarc(a+g[g.length-2],b+g[g.length-1],c,d,f,e)};
THREE.Path.prototype.absarc=function(a,b,c,d,f,e){this.absellipse(a,b,c,c,d,f,e)};THREE.Path.prototype.ellipse=function(a,b,c,d,f,e,g){var h=this.actions[this.actions.length-1].args;this.absellipse(a+h[h.length-2],b+h[h.length-1],c,d,f,e,g)};THREE.Path.prototype.absellipse=function(a,b,c,d,f,e,g){var h=Array.prototype.slice.call(arguments),j=new THREE.EllipseCurve(a,b,c,d,f,e,g);this.curves.push(j);j=j.getPoint(g?1:0);h.push(j.x);h.push(j.y);this.actions.push({action:THREE.PathActions.ELLIPSE,args:h})};
THREE.Path.prototype.getSpacedPoints=function(a){a||(a=40);for(var b=[],c=0;c<a;c++)b.push(this.getPoint(c/a));return b};
THREE.Path.prototype.getPoints=function(a,b){if(this.useSpacedPoints)return console.log("tata"),this.getSpacedPoints(a,b);a=a||12;var c=[],d,f,e,g,h,j,k,m,p,n,s,r,q;d=0;for(f=this.actions.length;d<f;d++)switch(e=this.actions[d],g=e.action,e=e.args,g){case THREE.PathActions.MOVE_TO:c.push(new THREE.Vector2(e[0],e[1]));break;case THREE.PathActions.LINE_TO:c.push(new THREE.Vector2(e[0],e[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:h=e[2];j=e[3];p=e[0];n=e[1];0<c.length?(g=c[c.length-1],s=g.x,
r=g.y):(g=this.actions[d-1].args,s=g[g.length-2],r=g[g.length-1]);for(e=1;e<=a;e++)q=e/a,g=THREE.Shape.Utils.b2(q,s,p,h),q=THREE.Shape.Utils.b2(q,r,n,j),c.push(new THREE.Vector2(g,q));break;case THREE.PathActions.BEZIER_CURVE_TO:h=e[4];j=e[5];p=e[0];n=e[1];k=e[2];m=e[3];0<c.length?(g=c[c.length-1],s=g.x,r=g.y):(g=this.actions[d-1].args,s=g[g.length-2],r=g[g.length-1]);for(e=1;e<=a;e++)q=e/a,g=THREE.Shape.Utils.b3(q,s,p,k,h),q=THREE.Shape.Utils.b3(q,r,n,m,j),c.push(new THREE.Vector2(g,q));break;case THREE.PathActions.CSPLINE_THRU:g=
this.actions[d-1].args;q=[new THREE.Vector2(g[g.length-2],g[g.length-1])];g=a*e[0].length;q=q.concat(e[0]);q=new THREE.SplineCurve(q);for(e=1;e<=g;e++)c.push(q.getPointAt(e/g));break;case THREE.PathActions.ARC:h=e[0];j=e[1];n=e[2];k=e[3];g=e[4];p=!!e[5];s=g-k;r=2*a;for(e=1;e<=r;e++)q=e/r,p||(q=1-q),q=k+q*s,g=h+n*Math.cos(q),q=j+n*Math.sin(q),c.push(new THREE.Vector2(g,q));break;case THREE.PathActions.ELLIPSE:h=e[0];j=e[1];n=e[2];m=e[3];k=e[4];g=e[5];p=!!e[6];s=g-k;r=2*a;for(e=1;e<=r;e++)q=e/r,p||
(q=1-q),q=k+q*s,g=h+n*Math.cos(q),q=j+m*Math.sin(q),c.push(new THREE.Vector2(g,q))}d=c[c.length-1];1E-10>Math.abs(d.x-c[0].x)&&1E-10>Math.abs(d.y-c[0].y)&&c.splice(c.length-1,1);b&&c.push(c[0]);return c};
THREE.Path.prototype.toShapes=function(){var a,b,c,d,f=[],e=new THREE.Path;a=0;for(b=this.actions.length;a<b;a++)c=this.actions[a],d=c.args,c=c.action,c==THREE.PathActions.MOVE_TO&&0!=e.actions.length&&(f.push(e),e=new THREE.Path),e[c].apply(e,d);0!=e.actions.length&&f.push(e);if(0==f.length)return[];var g;d=[];a=!THREE.Shape.Utils.isClockWise(f[0].getPoints());if(1==f.length)return e=f[0],g=new THREE.Shape,g.actions=e.actions,g.curves=e.curves,d.push(g),d;if(a){g=new THREE.Shape;a=0;for(b=f.length;a<
b;a++)e=f[a],THREE.Shape.Utils.isClockWise(e.getPoints())?(g.actions=e.actions,g.curves=e.curves,d.push(g),g=new THREE.Shape):g.holes.push(e)}else{a=0;for(b=f.length;a<b;a++)e=f[a],THREE.Shape.Utils.isClockWise(e.getPoints())?(g&&d.push(g),g=new THREE.Shape,g.actions=e.actions,g.curves=e.curves):g.holes.push(e);d.push(g)}return d};THREE.Shape=function(){THREE.Path.apply(this,arguments);this.holes=[]};THREE.Shape.prototype=Object.create(THREE.Path.prototype);
THREE.Shape.prototype.extrude=function(a){return new THREE.ExtrudeGeometry(this,a)};THREE.Shape.prototype.makeGeometry=function(a){return new THREE.ShapeGeometry(this,a)};THREE.Shape.prototype.getPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedPoints(a,this.bends);return d};THREE.Shape.prototype.getSpacedPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedSpacedPoints(a,this.bends);return d};
THREE.Shape.prototype.extractAllPoints=function(a){return{shape:this.getTransformedPoints(a),holes:this.getPointsHoles(a)}};THREE.Shape.prototype.extractPoints=function(a){return this.useSpacedPoints?this.extractAllSpacedPoints(a):this.extractAllPoints(a)};THREE.Shape.prototype.extractAllSpacedPoints=function(a){return{shape:this.getTransformedSpacedPoints(a),holes:this.getSpacedPointsHoles(a)}};
THREE.Shape.Utils={removeHoles:function(a,b){var c=a.concat(),d=c.concat(),f,e,g,h,j,k,m,p,n,s,r=[];for(j=0;j<b.length;j++){k=b[j];Array.prototype.push.apply(d,k);e=Number.POSITIVE_INFINITY;for(f=0;f<k.length;f++){n=k[f];s=[];for(p=0;p<c.length;p++)m=c[p],m=n.distanceToSquared(m),s.push(m),m<e&&(e=m,g=f,h=p)}f=0<=h-1?h-1:c.length-1;e=0<=g-1?g-1:k.length-1;var q=[k[g],c[h],c[f]];p=THREE.FontUtils.Triangulate.area(q);var t=[k[g],k[e],c[h]];n=THREE.FontUtils.Triangulate.area(t);s=h;m=g;h+=1;g+=-1;0>
h&&(h+=c.length);h%=c.length;0>g&&(g+=k.length);g%=k.length;f=0<=h-1?h-1:c.length-1;e=0<=g-1?g-1:k.length-1;q=[k[g],c[h],c[f]];q=THREE.FontUtils.Triangulate.area(q);t=[k[g],k[e],c[h]];t=THREE.FontUtils.Triangulate.area(t);p+n>q+t&&(h=s,g=m,0>h&&(h+=c.length),h%=c.length,0>g&&(g+=k.length),g%=k.length,f=0<=h-1?h-1:c.length-1,e=0<=g-1?g-1:k.length-1);p=c.slice(0,h);n=c.slice(h);s=k.slice(g);m=k.slice(0,g);e=[k[g],k[e],c[h]];r.push([k[g],c[h],c[f]]);r.push(e);c=p.concat(s).concat(m).concat(n)}return{shape:c,
isolatedPts:r,allpoints:d}},triangulateShape:function(a,b){var c=THREE.Shape.Utils.removeHoles(a,b),d=c.allpoints,f=c.isolatedPts,c=THREE.FontUtils.Triangulate(c.shape,!1),e,g,h,j,k={};e=0;for(g=d.length;e<g;e++)j=d[e].x+":"+d[e].y,void 0!==k[j]&&console.log("Duplicate point",j),k[j]=e;e=0;for(g=c.length;e<g;e++){h=c[e];for(d=0;3>d;d++)j=h[d].x+":"+h[d].y,j=k[j],void 0!==j&&(h[d]=j)}e=0;for(g=f.length;e<g;e++){h=f[e];for(d=0;3>d;d++)j=h[d].x+":"+h[d].y,j=k[j],void 0!==j&&(h[d]=j)}return c.concat(f)},
isClockWise:function(a){return 0>THREE.FontUtils.Triangulate.area(a)},b2p0:function(a,b){var c=1-a;return c*c*b},b2p1:function(a,b){return 2*(1-a)*a*b},b2p2:function(a,b){return a*a*b},b2:function(a,b,c,d){return this.b2p0(a,b)+this.b2p1(a,c)+this.b2p2(a,d)},b3p0:function(a,b){var c=1-a;return c*c*c*b},b3p1:function(a,b){var c=1-a;return 3*c*c*a*b},b3p2:function(a,b){return 3*(1-a)*a*a*b},b3p3:function(a,b){return a*a*a*b},b3:function(a,b,c,d,f){return this.b3p0(a,b)+this.b3p1(a,c)+this.b3p2(a,d)+
this.b3p3(a,f)}};
THREE.AnimationHandler=function(){var a=[],b={},c={update:function(b){for(var c=0;c<a.length;c++)a[c].update(b)},addToUpdate:function(b){-1===a.indexOf(b)&&a.push(b)},removeFromUpdate:function(b){b=a.indexOf(b);-1!==b&&a.splice(b,1)},add:function(a){void 0!==b[a.name]&&console.log("THREE.AnimationHandler.add: Warning! "+a.name+" already exists in library. Overwriting.");b[a.name]=a;if(!0!==a.initialized){for(var c=0;c<a.hierarchy.length;c++){for(var d=0;d<a.hierarchy[c].keys.length;d++)if(0>a.hierarchy[c].keys[d].time&&
(a.hierarchy[c].keys[d].time=0),void 0!==a.hierarchy[c].keys[d].rot&&!(a.hierarchy[c].keys[d].rot instanceof THREE.Quaternion)){var h=a.hierarchy[c].keys[d].rot;a.hierarchy[c].keys[d].rot=new THREE.Quaternion(h[0],h[1],h[2],h[3])}if(a.hierarchy[c].keys.length&&void 0!==a.hierarchy[c].keys[0].morphTargets){h={};for(d=0;d<a.hierarchy[c].keys.length;d++)for(var j=0;j<a.hierarchy[c].keys[d].morphTargets.length;j++){var k=a.hierarchy[c].keys[d].morphTargets[j];h[k]=-1}a.hierarchy[c].usedMorphTargets=h;
for(d=0;d<a.hierarchy[c].keys.length;d++){var m={};for(k in h){for(j=0;j<a.hierarchy[c].keys[d].morphTargets.length;j++)if(a.hierarchy[c].keys[d].morphTargets[j]===k){m[k]=a.hierarchy[c].keys[d].morphTargetsInfluences[j];break}j===a.hierarchy[c].keys[d].morphTargets.length&&(m[k]=0)}a.hierarchy[c].keys[d].morphTargetsInfluences=m}}for(d=1;d<a.hierarchy[c].keys.length;d++)a.hierarchy[c].keys[d].time===a.hierarchy[c].keys[d-1].time&&(a.hierarchy[c].keys.splice(d,1),d--);for(d=0;d<a.hierarchy[c].keys.length;d++)a.hierarchy[c].keys[d].index=
d}d=parseInt(a.length*a.fps,10);a.JIT={};a.JIT.hierarchy=[];for(c=0;c<a.hierarchy.length;c++)a.JIT.hierarchy.push(Array(d));a.initialized=!0}},get:function(a){if("string"===typeof a){if(b[a])return b[a];console.log("THREE.AnimationHandler.get: Couldn't find animation "+a);return null}},parse:function(a){var b=[];if(a instanceof THREE.SkinnedMesh)for(var c=0;c<a.bones.length;c++)b.push(a.bones[c]);else d(a,b);return b}},d=function(a,b){b.push(a);for(var c=0;c<a.children.length;c++)d(a.children[c],
b)};c.LINEAR=0;c.CATMULLROM=1;c.CATMULLROM_FORWARD=2;return c}();THREE.Animation=function(a,b,c){this.root=a;this.data=THREE.AnimationHandler.get(b);this.hierarchy=THREE.AnimationHandler.parse(a);this.currentTime=0;this.timeScale=1;this.isPlaying=!1;this.loop=this.isPaused=!0;this.interpolationType=void 0!==c?c:THREE.AnimationHandler.LINEAR;this.points=[];this.target=new THREE.Vector3};
THREE.Animation.prototype.play=function(a,b){if(!1===this.isPlaying){this.isPlaying=!0;this.loop=void 0!==a?a:!0;this.currentTime=void 0!==b?b:0;var c,d=this.hierarchy.length,f;for(c=0;c<d;c++){f=this.hierarchy[c];this.interpolationType!==THREE.AnimationHandler.CATMULLROM_FORWARD&&(f.useQuaternion=!0);f.matrixAutoUpdate=!0;void 0===f.animationCache&&(f.animationCache={},f.animationCache.prevKey={pos:0,rot:0,scl:0},f.animationCache.nextKey={pos:0,rot:0,scl:0},f.animationCache.originalMatrix=f instanceof
THREE.Bone?f.skinMatrix:f.matrix);var e=f.animationCache.prevKey;f=f.animationCache.nextKey;e.pos=this.data.hierarchy[c].keys[0];e.rot=this.data.hierarchy[c].keys[0];e.scl=this.data.hierarchy[c].keys[0];f.pos=this.getNextKeyWith("pos",c,1);f.rot=this.getNextKeyWith("rot",c,1);f.scl=this.getNextKeyWith("scl",c,1)}this.update(0)}this.isPaused=!1;THREE.AnimationHandler.addToUpdate(this)};
THREE.Animation.prototype.pause=function(){!0===this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this);this.isPaused=!this.isPaused};THREE.Animation.prototype.stop=function(){this.isPaused=this.isPlaying=!1;THREE.AnimationHandler.removeFromUpdate(this)};
THREE.Animation.prototype.update=function(a){if(!1!==this.isPlaying){var b=["pos","rot","scl"],c,d,f,e,g,h,j,k,m;m=this.currentTime+=a*this.timeScale;k=this.currentTime%=this.data.length;parseInt(Math.min(k*this.data.fps,this.data.length*this.data.fps),10);for(var p=0,n=this.hierarchy.length;p<n;p++){a=this.hierarchy[p];j=a.animationCache;for(var s=0;3>s;s++){c=b[s];g=j.prevKey[c];h=j.nextKey[c];if(h.time<=m){if(k<m)if(this.loop){g=this.data.hierarchy[p].keys[0];for(h=this.getNextKeyWith(c,p,1);h.time<
k;)g=h,h=this.getNextKeyWith(c,p,h.index+1)}else{this.stop();return}else{do g=h,h=this.getNextKeyWith(c,p,h.index+1);while(h.time<k)}j.prevKey[c]=g;j.nextKey[c]=h}a.matrixAutoUpdate=!0;a.matrixWorldNeedsUpdate=!0;d=(k-g.time)/(h.time-g.time);f=g[c];e=h[c];if(0>d||1<d)console.log("THREE.Animation.update: Warning! Scale out of bounds:"+d+" on bone "+p),d=0>d?0:1;if("pos"===c)if(c=a.position,this.interpolationType===THREE.AnimationHandler.LINEAR)c.x=f[0]+(e[0]-f[0])*d,c.y=f[1]+(e[1]-f[1])*d,c.z=f[2]+
(e[2]-f[2])*d;else{if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD)this.points[0]=this.getPrevKeyWith("pos",p,g.index-1).pos,this.points[1]=f,this.points[2]=e,this.points[3]=this.getNextKeyWith("pos",p,h.index+1).pos,d=0.33*d+0.33,f=this.interpolateCatmullRom(this.points,d),c.x=f[0],c.y=f[1],c.z=f[2],this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD&&(d=this.interpolateCatmullRom(this.points,1.01*d),
this.target.set(d[0],d[1],d[2]),this.target.subSelf(c),this.target.y=0,this.target.normalize(),d=Math.atan2(this.target.x,this.target.z),a.rotation.set(0,d,0))}else"rot"===c?THREE.Quaternion.slerp(f,e,a.quaternion,d):"scl"===c&&(c=a.scale,c.x=f[0]+(e[0]-f[0])*d,c.y=f[1]+(e[1]-f[1])*d,c.z=f[2]+(e[2]-f[2])*d)}}}};
THREE.Animation.prototype.interpolateCatmullRom=function(a,b){var c=[],d=[],f,e,g,h,j,k;f=(a.length-1)*b;e=Math.floor(f);f-=e;c[0]=0===e?e:e-1;c[1]=e;c[2]=e>a.length-2?e:e+1;c[3]=e>a.length-3?e:e+2;e=a[c[0]];h=a[c[1]];j=a[c[2]];k=a[c[3]];c=f*f;g=f*c;d[0]=this.interpolate(e[0],h[0],j[0],k[0],f,c,g);d[1]=this.interpolate(e[1],h[1],j[1],k[1],f,c,g);d[2]=this.interpolate(e[2],h[2],j[2],k[2],f,c,g);return d};
THREE.Animation.prototype.interpolate=function(a,b,c,d,f,e,g){a=0.5*(c-a);d=0.5*(d-b);return(2*(b-c)+a+d)*g+(-3*(b-c)-2*a-d)*e+a*f+b};THREE.Animation.prototype.getNextKeyWith=function(a,b,c){var d=this.data.hierarchy[b].keys;for(c=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?c<d.length-1?c:d.length-1:c%d.length;c<d.length;c++)if(void 0!==d[c][a])return d[c];return this.data.hierarchy[b].keys[0]};
THREE.Animation.prototype.getPrevKeyWith=function(a,b,c){var d=this.data.hierarchy[b].keys;for(c=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?0<c?c:0:0<=c?c:c+d.length;0<=c;c--)if(void 0!==d[c][a])return d[c];return this.data.hierarchy[b].keys[d.length-1]};
THREE.KeyFrameAnimation=function(a,b,c){this.root=a;this.data=THREE.AnimationHandler.get(b);this.hierarchy=THREE.AnimationHandler.parse(a);this.currentTime=0;this.timeScale=0.001;this.isPlaying=!1;this.loop=this.isPaused=!0;this.JITCompile=void 0!==c?c:!0;a=0;for(b=this.hierarchy.length;a<b;a++){c=this.data.hierarchy[a].sids;var d=this.hierarchy[a];if(this.data.hierarchy[a].keys.length&&c){for(var f=0;f<c.length;f++){var e=c[f],g=this.getNextKeyWith(e,a,0);g&&g.apply(e)}d.matrixAutoUpdate=!1;this.data.hierarchy[a].node.updateMatrix();
d.matrixWorldNeedsUpdate=!0}}};
THREE.KeyFrameAnimation.prototype.play=function(a,b){if(!this.isPlaying){this.isPlaying=!0;this.loop=void 0!==a?a:!0;this.currentTime=void 0!==b?b:0;this.startTimeMs=b;this.startTime=1E7;this.endTime=-this.startTime;var c,d=this.hierarchy.length,f,e;for(c=0;c<d;c++)f=this.hierarchy[c],e=this.data.hierarchy[c],f.useQuaternion=!0,void 0===e.animationCache&&(e.animationCache={},e.animationCache.prevKey=null,e.animationCache.nextKey=null,e.animationCache.originalMatrix=f instanceof THREE.Bone?f.skinMatrix:
f.matrix),f=this.data.hierarchy[c].keys,f.length&&(e.animationCache.prevKey=f[0],e.animationCache.nextKey=f[1],this.startTime=Math.min(f[0].time,this.startTime),this.endTime=Math.max(f[f.length-1].time,this.endTime));this.update(0)}this.isPaused=!1;THREE.AnimationHandler.addToUpdate(this)};THREE.KeyFrameAnimation.prototype.pause=function(){this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this);this.isPaused=!this.isPaused};
THREE.KeyFrameAnimation.prototype.stop=function(){this.isPaused=this.isPlaying=!1;THREE.AnimationHandler.removeFromUpdate(this);for(var a=0;a<this.data.hierarchy.length;a++){var b=this.hierarchy[a],c=this.data.hierarchy[a];if(void 0!==c.animationCache){var d=c.animationCache.originalMatrix;b instanceof THREE.Bone?(d.copy(b.skinMatrix),b.skinMatrix=d):(d.copy(b.matrix),b.matrix=d);delete c.animationCache}}};
THREE.KeyFrameAnimation.prototype.update=function(a){if(this.isPlaying){var b,c,d,f,e=this.data.JIT.hierarchy,g,h,j;h=this.currentTime+=a*this.timeScale;g=this.currentTime%=this.data.length;g<this.startTimeMs&&(g=this.currentTime=this.startTimeMs+g);f=parseInt(Math.min(g*this.data.fps,this.data.length*this.data.fps),10);if((j=g<h)&&!this.loop){a=0;for(var k=this.hierarchy.length;a<k;a++){var m=this.data.hierarchy[a].keys,e=this.data.hierarchy[a].sids;d=m.length-1;f=this.hierarchy[a];if(m.length){for(m=
0;m<e.length;m++)g=e[m],(h=this.getPrevKeyWith(g,a,d))&&h.apply(g);this.data.hierarchy[a].node.updateMatrix();f.matrixWorldNeedsUpdate=!0}}this.stop()}else if(!(g<this.startTime)){a=0;for(k=this.hierarchy.length;a<k;a++){d=this.hierarchy[a];b=this.data.hierarchy[a];var m=b.keys,p=b.animationCache;if(this.JITCompile&&void 0!==e[a][f])d instanceof THREE.Bone?(d.skinMatrix=e[a][f],d.matrixWorldNeedsUpdate=!1):(d.matrix=e[a][f],d.matrixWorldNeedsUpdate=!0);else if(m.length){this.JITCompile&&p&&(d instanceof
THREE.Bone?d.skinMatrix=p.originalMatrix:d.matrix=p.originalMatrix);b=p.prevKey;c=p.nextKey;if(b&&c){if(c.time<=h){if(j&&this.loop){b=m[0];for(c=m[1];c.time<g;)b=c,c=m[b.index+1]}else if(!j)for(var n=m.length-1;c.time<g&&c.index!==n;)b=c,c=m[b.index+1];p.prevKey=b;p.nextKey=c}c.time>=g?b.interpolate(c,g):b.interpolate(c,c.time)}this.data.hierarchy[a].node.updateMatrix();d.matrixWorldNeedsUpdate=!0}}if(this.JITCompile&&void 0===e[0][f]){this.hierarchy[0].updateMatrixWorld(!0);for(a=0;a<this.hierarchy.length;a++)e[a][f]=
this.hierarchy[a]instanceof THREE.Bone?this.hierarchy[a].skinMatrix.clone():this.hierarchy[a].matrix.clone()}}}};THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(a,b,c){b=this.data.hierarchy[b].keys;for(c%=b.length;c<b.length;c++)if(b[c].hasTarget(a))return b[c];return b[0]};THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(a,b,c){b=this.data.hierarchy[b].keys;for(c=0<=c?c:c+b.length;0<=c;c--)if(b[c].hasTarget(a))return b[c];return b[b.length-1]};
THREE.CubeCamera=function(a,b,c){THREE.Object3D.call(this);var d=new THREE.PerspectiveCamera(90,1,a,b);d.up.set(0,-1,0);d.lookAt(new THREE.Vector3(1,0,0));this.add(d);var f=new THREE.PerspectiveCamera(90,1,a,b);f.up.set(0,-1,0);f.lookAt(new THREE.Vector3(-1,0,0));this.add(f);var e=new THREE.PerspectiveCamera(90,1,a,b);e.up.set(0,0,1);e.lookAt(new THREE.Vector3(0,1,0));this.add(e);var g=new THREE.PerspectiveCamera(90,1,a,b);g.up.set(0,0,-1);g.lookAt(new THREE.Vector3(0,-1,0));this.add(g);var h=new THREE.PerspectiveCamera(90,
1,a,b);h.up.set(0,-1,0);h.lookAt(new THREE.Vector3(0,0,1));this.add(h);var j=new THREE.PerspectiveCamera(90,1,a,b);j.up.set(0,-1,0);j.lookAt(new THREE.Vector3(0,0,-1));this.add(j);this.renderTarget=new THREE.WebGLRenderTargetCube(c,c,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter});this.updateCubeMap=function(a,b){var c=this.renderTarget,n=c.generateMipmaps;c.generateMipmaps=!1;c.activeCubeFace=0;a.render(b,d,c);c.activeCubeFace=1;a.render(b,f,c);c.activeCubeFace=
2;a.render(b,e,c);c.activeCubeFace=3;a.render(b,g,c);c.activeCubeFace=4;a.render(b,h,c);c.generateMipmaps=n;c.activeCubeFace=5;a.render(b,j,c)}};THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype);THREE.CombinedCamera=function(a,b,c,d,f,e,g){THREE.Camera.call(this);this.fov=c;this.left=-a/2;this.right=a/2;this.top=b/2;this.bottom=-b/2;this.cameraO=new THREE.OrthographicCamera(a/-2,a/2,b/2,b/-2,e,g);this.cameraP=new THREE.PerspectiveCamera(c,a/b,d,f);this.zoom=1;this.toPerspective()};
THREE.CombinedCamera.prototype=Object.create(THREE.Camera.prototype);THREE.CombinedCamera.prototype.toPerspective=function(){this.near=this.cameraP.near;this.far=this.cameraP.far;this.cameraP.fov=this.fov/this.zoom;this.cameraP.updateProjectionMatrix();this.projectionMatrix=this.cameraP.projectionMatrix;this.inPerspectiveMode=!0;this.inOrthographicMode=!1};
THREE.CombinedCamera.prototype.toOrthographic=function(){var a=this.cameraP.aspect,b=(this.cameraP.near+this.cameraP.far)/2,b=Math.tan(this.fov/2)*b,a=2*b*a/2,b=b/this.zoom,a=a/this.zoom;this.cameraO.left=-a;this.cameraO.right=a;this.cameraO.top=b;this.cameraO.bottom=-b;this.cameraO.updateProjectionMatrix();this.near=this.cameraO.near;this.far=this.cameraO.far;this.projectionMatrix=this.cameraO.projectionMatrix;this.inPerspectiveMode=!1;this.inOrthographicMode=!0};
THREE.CombinedCamera.prototype.setSize=function(a,b){this.cameraP.aspect=a/b;this.left=-a/2;this.right=a/2;this.top=b/2;this.bottom=-b/2};THREE.CombinedCamera.prototype.setFov=function(a){this.fov=a;this.inPerspectiveMode?this.toPerspective():this.toOrthographic()};THREE.CombinedCamera.prototype.updateProjectionMatrix=function(){this.inPerspectiveMode?this.toPerspective():(this.toPerspective(),this.toOrthographic())};
THREE.CombinedCamera.prototype.setLens=function(a,b){void 0===b&&(b=24);var c=2*Math.atan(b/(2*a))*(180/Math.PI);this.setFov(c);return c};THREE.CombinedCamera.prototype.setZoom=function(a){this.zoom=a;this.inPerspectiveMode?this.toPerspective():this.toOrthographic()};THREE.CombinedCamera.prototype.toFrontView=function(){this.rotation.x=0;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};
THREE.CombinedCamera.prototype.toBackView=function(){this.rotation.x=0;this.rotation.y=Math.PI;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toLeftView=function(){this.rotation.x=0;this.rotation.y=-Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toRightView=function(){this.rotation.x=0;this.rotation.y=Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=!1};
THREE.CombinedCamera.prototype.toTopView=function(){this.rotation.x=-Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toBottomView=function(){this.rotation.x=Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};
THREE.FirstPersonControls=function(a,b){function c(a,b){return function(){b.apply(a,arguments)}}this.object=a;this.target=new THREE.Vector3(0,0,0);this.domElement=void 0!==b?b:document;this.movementSpeed=1;this.lookSpeed=0.005;this.lookVertical=!0;this.autoForward=!1;this.activeLook=!0;this.heightSpeed=!1;this.heightCoef=1;this.heightMin=0;this.heightMax=1;this.constrainVertical=!1;this.verticalMin=0;this.verticalMax=Math.PI;this.theta=this.phi=this.lon=this.lat=this.mouseY=this.mouseX=this.autoSpeedFactor=
0;this.mouseDragOn=this.freeze=this.moveRight=this.moveLeft=this.moveBackward=this.moveForward=!1;this.viewHalfY=this.viewHalfX=0;this.domElement!==document&&this.domElement.setAttribute("tabindex",-1);this.handleResize=function(){this.domElement===document?(this.viewHalfX=window.innerWidth/2,this.viewHalfY=window.innerHeight/2):(this.viewHalfX=this.domElement.offsetWidth/2,this.viewHalfY=this.domElement.offsetHeight/2)};this.onMouseDown=function(a){this.domElement!==document&&this.domElement.focus();
a.preventDefault();a.stopPropagation();if(this.activeLook)switch(a.button){case 0:this.moveForward=!0;break;case 2:this.moveBackward=!0}this.mouseDragOn=!0};this.onMouseUp=function(a){a.preventDefault();a.stopPropagation();if(this.activeLook)switch(a.button){case 0:this.moveForward=!1;break;case 2:this.moveBackward=!1}this.mouseDragOn=!1};this.onMouseMove=function(a){this.domElement===document?(this.mouseX=a.pageX-this.viewHalfX,this.mouseY=a.pageY-this.viewHalfY):(this.mouseX=a.pageX-this.domElement.offsetLeft-
this.viewHalfX,this.mouseY=a.pageY-this.domElement.offsetTop-this.viewHalfY)};this.onKeyDown=function(a){switch(a.keyCode){case 38:case 87:this.moveForward=!0;break;case 37:case 65:this.moveLeft=!0;break;case 40:case 83:this.moveBackward=!0;break;case 39:case 68:this.moveRight=!0;break;case 82:this.moveUp=!0;break;case 70:this.moveDown=!0;break;case 81:this.freeze=!this.freeze}};this.onKeyUp=function(a){switch(a.keyCode){case 38:case 87:this.moveForward=!1;break;case 37:case 65:this.moveLeft=!1;break;
case 40:case 83:this.moveBackward=!1;break;case 39:case 68:this.moveRight=!1;break;case 82:this.moveUp=!1;break;case 70:this.moveDown=!1}};this.update=function(a){var b=0;if(!this.freeze){this.heightSpeed?(b=THREE.Math.clamp(this.object.position.y,this.heightMin,this.heightMax)-this.heightMin,this.autoSpeedFactor=a*b*this.heightCoef):this.autoSpeedFactor=0;b=a*this.movementSpeed;(this.moveForward||this.autoForward&&!this.moveBackward)&&this.object.translateZ(-(b+this.autoSpeedFactor));this.moveBackward&&
this.object.translateZ(b);this.moveLeft&&this.object.translateX(-b);this.moveRight&&this.object.translateX(b);this.moveUp&&this.object.translateY(b);this.moveDown&&this.object.translateY(-b);a*=this.lookSpeed;this.activeLook||(a=0);this.lon+=this.mouseX*a;this.lookVertical&&(this.lat-=this.mouseY*a);this.lat=Math.max(-85,Math.min(85,this.lat));this.phi=(90-this.lat)*Math.PI/180;this.theta=this.lon*Math.PI/180;var b=this.target,c=this.object.position;b.x=c.x+100*Math.sin(this.phi)*Math.cos(this.theta);
b.y=c.y+100*Math.cos(this.phi);b.z=c.z+100*Math.sin(this.phi)*Math.sin(this.theta);b=1;this.constrainVertical&&(b=Math.PI/(this.verticalMax-this.verticalMin));this.lon+=this.mouseX*a;this.lookVertical&&(this.lat-=this.mouseY*a*b);this.lat=Math.max(-85,Math.min(85,this.lat));this.phi=(90-this.lat)*Math.PI/180;this.theta=this.lon*Math.PI/180;this.constrainVertical&&(this.phi=THREE.Math.mapLinear(this.phi,0,Math.PI,this.verticalMin,this.verticalMax));b=this.target;c=this.object.position;b.x=c.x+100*
Math.sin(this.phi)*Math.cos(this.theta);b.y=c.y+100*Math.cos(this.phi);b.z=c.z+100*Math.sin(this.phi)*Math.sin(this.theta);this.object.lookAt(b)}};this.domElement.addEventListener("contextmenu",function(a){a.preventDefault()},!1);this.domElement.addEventListener("mousemove",c(this,this.onMouseMove),!1);this.domElement.addEventListener("mousedown",c(this,this.onMouseDown),!1);this.domElement.addEventListener("mouseup",c(this,this.onMouseUp),!1);this.domElement.addEventListener("keydown",c(this,this.onKeyDown),
!1);this.domElement.addEventListener("keyup",c(this,this.onKeyUp),!1);this.handleResize()};
THREE.PathControls=function(a,b){function c(a){return 1>(a*=2)?0.5*a*a:-0.5*(--a*(a-2)-1)}function d(a,b){return function(){b.apply(a,arguments)}}function f(a,b,c,d){var e={name:c,fps:0.6,length:d,hierarchy:[]},f,g=b.getControlPointsArray(),h=b.getLength(),t=g.length,v=0;f=t-1;b={parent:-1,keys:[]};b.keys[0]={time:0,pos:g[0],rot:[0,0,0,1],scl:[1,1,1]};b.keys[f]={time:d,pos:g[f],rot:[0,0,0,1],scl:[1,1,1]};for(f=1;f<t-1;f++)v=d*h.chunks[f]/h.total,b.keys[f]={time:v,pos:g[f]};e.hierarchy[0]=b;THREE.AnimationHandler.add(e);
return new THREE.Animation(a,c,THREE.AnimationHandler.CATMULLROM_FORWARD,!1)}function e(a,b){var c,d,e=new THREE.Geometry;for(c=0;c<a.points.length*b;c++)d=c/(a.points.length*b),d=a.getPoint(d),e.vertices[c]=new THREE.Vector3(d.x,d.y,d.z);return e}this.object=a;this.domElement=void 0!==b?b:document;this.id="PathControls"+THREE.PathControlsIdCounter++;this.duration=1E4;this.waypoints=[];this.useConstantSpeed=!0;this.resamplingCoef=50;this.debugPath=new THREE.Object3D;this.debugDummy=new THREE.Object3D;
this.animationParent=new THREE.Object3D;this.lookSpeed=0.005;this.lookHorizontal=this.lookVertical=!0;this.verticalAngleMap={srcRange:[0,2*Math.PI],dstRange:[0,2*Math.PI]};this.horizontalAngleMap={srcRange:[0,2*Math.PI],dstRange:[0,2*Math.PI]};this.target=new THREE.Object3D;this.theta=this.phi=this.lon=this.lat=this.mouseY=this.mouseX=0;var g=2*Math.PI,h=Math.PI/180;this.viewHalfY=this.viewHalfX=0;this.domElement!==document&&this.domElement.setAttribute("tabindex",-1);this.handleResize=function(){this.domElement===
document?(this.viewHalfX=window.innerWidth/2,this.viewHalfY=window.innerHeight/2):(this.viewHalfX=this.domElement.offsetWidth/2,this.viewHalfY=this.domElement.offsetHeight/2)};this.update=function(a){var b;this.lookHorizontal&&(this.lon+=this.mouseX*this.lookSpeed*a);this.lookVertical&&(this.lat-=this.mouseY*this.lookSpeed*a);this.lon=Math.max(0,Math.min(360,this.lon));this.lat=Math.max(-85,Math.min(85,this.lat));this.phi=(90-this.lat)*h;this.theta=this.lon*h;a=this.phi%g;this.phi=0<=a?a:a+g;b=this.verticalAngleMap.srcRange;
a=this.verticalAngleMap.dstRange;b=THREE.Math.mapLinear(this.phi,b[0],b[1],a[0],a[1]);var d=a[1]-a[0];this.phi=c((b-a[0])/d)*d+a[0];b=this.horizontalAngleMap.srcRange;a=this.horizontalAngleMap.dstRange;b=THREE.Math.mapLinear(this.theta,b[0],b[1],a[0],a[1]);d=a[1]-a[0];this.theta=c((b-a[0])/d)*d+a[0];a=this.target.position;a.x=100*Math.sin(this.phi)*Math.cos(this.theta);a.y=100*Math.cos(this.phi);a.z=100*Math.sin(this.phi)*Math.sin(this.theta);this.object.lookAt(this.target.position)};this.onMouseMove=
function(a){this.domElement===document?(this.mouseX=a.pageX-this.viewHalfX,this.mouseY=a.pageY-this.viewHalfY):(this.mouseX=a.pageX-this.domElement.offsetLeft-this.viewHalfX,this.mouseY=a.pageY-this.domElement.offsetTop-this.viewHalfY)};this.init=function(){this.spline=new THREE.Spline;this.spline.initFromArray(this.waypoints);this.useConstantSpeed&&this.spline.reparametrizeByArcLength(this.resamplingCoef);if(this.createDebugDummy){var a=new THREE.MeshLambertMaterial({color:30719}),b=new THREE.MeshLambertMaterial({color:65280}),
c=new THREE.CubeGeometry(10,10,20),g=new THREE.CubeGeometry(2,2,10);this.animationParent=new THREE.Mesh(c,a);a=new THREE.Mesh(g,b);a.position.set(0,10,0);this.animation=f(this.animationParent,this.spline,this.id,this.duration);this.animationParent.add(this.object);this.animationParent.add(this.target);this.animationParent.add(a)}else this.animation=f(this.animationParent,this.spline,this.id,this.duration),this.animationParent.add(this.target),this.animationParent.add(this.object);if(this.createDebugPath){var a=
this.debugPath,b=this.spline,g=e(b,10),c=e(b,10),h=new THREE.LineBasicMaterial({color:16711680,linewidth:3}),g=new THREE.Line(g,h),c=new THREE.ParticleSystem(c,new THREE.ParticleBasicMaterial({color:16755200,size:3}));g.scale.set(1,1,1);a.add(g);c.scale.set(1,1,1);a.add(c);for(var g=new THREE.SphereGeometry(1,16,8),h=new THREE.MeshBasicMaterial({color:65280}),s=0;s<b.points.length;s++)c=new THREE.Mesh(g,h),c.position.copy(b.points[s]),a.add(c)}this.domElement.addEventListener("mousemove",d(this,this.onMouseMove),
!1)};this.handleResize()};THREE.PathControlsIdCounter=0;
THREE.FlyControls=function(a,b){function c(a,b){return function(){b.apply(a,arguments)}}this.object=a;this.domElement=void 0!==b?b:document;b&&this.domElement.setAttribute("tabindex",-1);this.movementSpeed=1;this.rollSpeed=0.005;this.autoForward=this.dragToLook=!1;this.object.useQuaternion=!0;this.tmpQuaternion=new THREE.Quaternion;this.mouseStatus=0;this.moveState={up:0,down:0,left:0,right:0,forward:0,back:0,pitchUp:0,pitchDown:0,yawLeft:0,yawRight:0,rollLeft:0,rollRight:0};this.moveVector=new THREE.Vector3(0,
0,0);this.rotationVector=new THREE.Vector3(0,0,0);this.handleEvent=function(a){if("function"==typeof this[a.type])this[a.type](a)};this.keydown=function(a){if(!a.altKey){switch(a.keyCode){case 16:this.movementSpeedMultiplier=0.1;break;case 87:this.moveState.forward=1;break;case 83:this.moveState.back=1;break;case 65:this.moveState.left=1;break;case 68:this.moveState.right=1;break;case 82:this.moveState.up=1;break;case 70:this.moveState.down=1;break;case 38:this.moveState.pitchUp=1;break;case 40:this.moveState.pitchDown=
1;break;case 37:this.moveState.yawLeft=1;break;case 39:this.moveState.yawRight=1;break;case 81:this.moveState.rollLeft=1;break;case 69:this.moveState.rollRight=1}this.updateMovementVector();this.updateRotationVector()}};this.keyup=function(a){switch(a.keyCode){case 16:this.movementSpeedMultiplier=1;break;case 87:this.moveState.forward=0;break;case 83:this.moveState.back=0;break;case 65:this.moveState.left=0;break;case 68:this.moveState.right=0;break;case 82:this.moveState.up=0;break;case 70:this.moveState.down=
0;break;case 38:this.moveState.pitchUp=0;break;case 40:this.moveState.pitchDown=0;break;case 37:this.moveState.yawLeft=0;break;case 39:this.moveState.yawRight=0;break;case 81:this.moveState.rollLeft=0;break;case 69:this.moveState.rollRight=0}this.updateMovementVector();this.updateRotationVector()};this.mousedown=function(a){this.domElement!==document&&this.domElement.focus();a.preventDefault();a.stopPropagation();if(this.dragToLook)this.mouseStatus++;else switch(a.button){case 0:this.object.moveForward=
!0;break;case 2:this.object.moveBackward=!0}};this.mousemove=function(a){if(!this.dragToLook||0<this.mouseStatus){var b=this.getContainerDimensions(),c=b.size[0]/2,g=b.size[1]/2;this.moveState.yawLeft=-(a.pageX-b.offset[0]-c)/c;this.moveState.pitchDown=(a.pageY-b.offset[1]-g)/g;this.updateRotationVector()}};this.mouseup=function(a){a.preventDefault();a.stopPropagation();if(this.dragToLook)this.mouseStatus--,this.moveState.yawLeft=this.moveState.pitchDown=0;else switch(a.button){case 0:this.moveForward=
!1;break;case 2:this.moveBackward=!1}this.updateRotationVector()};this.update=function(a){var b=a*this.movementSpeed;a*=this.rollSpeed;this.object.translateX(this.moveVector.x*b);this.object.translateY(this.moveVector.y*b);this.object.translateZ(this.moveVector.z*b);this.tmpQuaternion.set(this.rotationVector.x*a,this.rotationVector.y*a,this.rotationVector.z*a,1).normalize();this.object.quaternion.multiplySelf(this.tmpQuaternion);this.object.matrix.setPosition(this.object.position);this.object.matrix.setRotationFromQuaternion(this.object.quaternion);
this.object.matrixWorldNeedsUpdate=!0};this.updateMovementVector=function(){var a=this.moveState.forward||this.autoForward&&!this.moveState.back?1:0;this.moveVector.x=-this.moveState.left+this.moveState.right;this.moveVector.y=-this.moveState.down+this.moveState.up;this.moveVector.z=-a+this.moveState.back};this.updateRotationVector=function(){this.rotationVector.x=-this.moveState.pitchDown+this.moveState.pitchUp;this.rotationVector.y=-this.moveState.yawRight+this.moveState.yawLeft;this.rotationVector.z=
-this.moveState.rollRight+this.moveState.rollLeft};this.getContainerDimensions=function(){return this.domElement!=document?{size:[this.domElement.offsetWidth,this.domElement.offsetHeight],offset:[this.domElement.offsetLeft,this.domElement.offsetTop]}:{size:[window.innerWidth,window.innerHeight],offset:[0,0]}};this.domElement.addEventListener("mousemove",c(this,this.mousemove),!1);this.domElement.addEventListener("mousedown",c(this,this.mousedown),!1);this.domElement.addEventListener("mouseup",c(this,
this.mouseup),!1);this.domElement.addEventListener("keydown",c(this,this.keydown),!1);this.domElement.addEventListener("keyup",c(this,this.keyup),!1);this.updateMovementVector();this.updateRotationVector()};
THREE.RollControls=function(a,b){this.object=a;this.domElement=void 0!==b?b:document;this.mouseLook=!0;this.autoForward=!1;this.rollSpeed=this.movementSpeed=this.lookSpeed=1;this.constrainVertical=[-0.9,0.9];this.object.matrixAutoUpdate=!1;this.forward=new THREE.Vector3(0,0,1);this.roll=0;var c=new THREE.Vector3,d=new THREE.Vector3,f=new THREE.Vector3,e=new THREE.Matrix4,g=!1,h=1,j=0,k=0,m=0,p=0,n=0,s=0,r=0;this.handleResize=function(){s=window.innerWidth/2;r=window.innerHeight/2};this.update=function(a){if(this.mouseLook){var b=
a*this.lookSpeed;this.rotateHorizontally(b*p);this.rotateVertically(b*n)}b=a*this.movementSpeed;this.object.translateZ(-b*(0<j||this.autoForward&&!(0>j)?1:j));this.object.translateX(b*k);this.object.translateY(b*m);g&&(this.roll+=this.rollSpeed*a*h);this.forward.y>this.constrainVertical[1]?(this.forward.y=this.constrainVertical[1],this.forward.normalize()):this.forward.y<this.constrainVertical[0]&&(this.forward.y=this.constrainVertical[0],this.forward.normalize());f.copy(this.forward);d.set(0,1,0);
c.cross(d,f).normalize();d.cross(f,c).normalize();this.object.matrix.elements[0]=c.x;this.object.matrix.elements[4]=d.x;this.object.matrix.elements[8]=f.x;this.object.matrix.elements[1]=c.y;this.object.matrix.elements[5]=d.y;this.object.matrix.elements[9]=f.y;this.object.matrix.elements[2]=c.z;this.object.matrix.elements[6]=d.z;this.object.matrix.elements[10]=f.z;e.identity();e.elements[0]=Math.cos(this.roll);e.elements[4]=-Math.sin(this.roll);e.elements[1]=Math.sin(this.roll);e.elements[5]=Math.cos(this.roll);
this.object.matrix.multiplySelf(e);this.object.matrixWorldNeedsUpdate=!0;this.object.matrix.elements[12]=this.object.position.x;this.object.matrix.elements[13]=this.object.position.y;this.object.matrix.elements[14]=this.object.position.z};this.translateX=function(a){this.object.position.x+=this.object.matrix.elements[0]*a;this.object.position.y+=this.object.matrix.elements[1]*a;this.object.position.z+=this.object.matrix.elements[2]*a};this.translateY=function(a){this.object.position.x+=this.object.matrix.elements[4]*
a;this.object.position.y+=this.object.matrix.elements[5]*a;this.object.position.z+=this.object.matrix.elements[6]*a};this.translateZ=function(a){this.object.position.x-=this.object.matrix.elements[8]*a;this.object.position.y-=this.object.matrix.elements[9]*a;this.object.position.z-=this.object.matrix.elements[10]*a};this.rotateHorizontally=function(a){c.set(this.object.matrix.elements[0],this.object.matrix.elements[1],this.object.matrix.elements[2]);c.multiplyScalar(a);this.forward.subSelf(c);this.forward.normalize()};
this.rotateVertically=function(a){d.set(this.object.matrix.elements[4],this.object.matrix.elements[5],this.object.matrix.elements[6]);d.multiplyScalar(a);this.forward.addSelf(d);this.forward.normalize()};this.domElement.addEventListener("contextmenu",function(a){a.preventDefault()},!1);this.domElement.addEventListener("mousemove",function(a){p=(a.clientX-s)/window.innerWidth;n=(a.clientY-r)/window.innerHeight},!1);this.domElement.addEventListener("mousedown",function(a){a.preventDefault();a.stopPropagation();
switch(a.button){case 0:j=1;break;case 2:j=-1}},!1);this.domElement.addEventListener("mouseup",function(a){a.preventDefault();a.stopPropagation();switch(a.button){case 0:j=0;break;case 2:j=0}},!1);this.domElement.addEventListener("keydown",function(a){switch(a.keyCode){case 38:case 87:j=1;break;case 37:case 65:k=-1;break;case 40:case 83:j=-1;break;case 39:case 68:k=1;break;case 81:g=!0;h=1;break;case 69:g=!0;h=-1;break;case 82:m=1;break;case 70:m=-1}},!1);this.domElement.addEventListener("keyup",
function(a){switch(a.keyCode){case 38:case 87:j=0;break;case 37:case 65:k=0;break;case 40:case 83:j=0;break;case 39:case 68:k=0;break;case 81:g=!1;break;case 69:g=!1;break;case 82:m=0;break;case 70:m=0}},!1);this.handleResize()};
THREE.TrackballControls=function(a,b){function c(a){if(d.enabled){a.preventDefault();a.stopPropagation();var b=0;a.wheelDelta?b=a.wheelDelta/40:a.detail&&(b=-a.detail/3);m.y+=0.05*(1/b)}}THREE.EventTarget.call(this);var d=this;this.object=a;this.domElement=void 0!==b?b:document;this.enabled=!0;this.screen={width:0,height:0,offsetLeft:0,offsetTop:0};this.radius=(this.screen.width+this.screen.height)/4;this.rotateSpeed=1;this.zoomSpeed=1.2;this.panSpeed=0.3;this.staticMoving=this.noPan=this.noZoom=
this.noRotate=!1;this.dynamicDampingFactor=0.2;this.minDistance=0;this.maxDistance=Infinity;this.keys=[65,83,68];this.target=new THREE.Vector3;var f=new THREE.Vector3,e=!1,g=-1,h=new THREE.Vector3,j=new THREE.Vector3,k=new THREE.Vector3,m=new THREE.Vector2,p=new THREE.Vector2,n=new THREE.Vector2,s=new THREE.Vector2,r={type:"change"};this.handleResize=function(){this.screen.width=window.innerWidth;this.screen.height=window.innerHeight;this.screen.offsetLeft=0;this.screen.offsetTop=0;this.radius=(this.screen.width+
this.screen.height)/4};this.handleEvent=function(a){if("function"==typeof this[a.type])this[a.type](a)};this.getMouseOnScreen=function(a,b){return new THREE.Vector2(0.5*((a-d.screen.offsetLeft)/d.radius),0.5*((b-d.screen.offsetTop)/d.radius))};this.getMouseProjectionOnBall=function(a,b){var c=new THREE.Vector3((a-0.5*d.screen.width-d.screen.offsetLeft)/d.radius,(0.5*d.screen.height+d.screen.offsetTop-b)/d.radius,0),e=c.length();1<e?c.normalize():c.z=Math.sqrt(1-e*e);h.copy(d.object.position).subSelf(d.target);
e=d.object.up.clone().setLength(c.y);e.addSelf(d.object.up.clone().crossSelf(h).setLength(c.x));e.addSelf(h.setLength(c.z));return e};this.rotateCamera=function(){var a=Math.acos(j.dot(k)/j.length()/k.length());if(a){var b=(new THREE.Vector3).cross(j,k).normalize(),c=new THREE.Quaternion,a=a*d.rotateSpeed;c.setFromAxisAngle(b,-a);c.multiplyVector3(h);c.multiplyVector3(d.object.up);c.multiplyVector3(k);d.staticMoving?j.copy(k):(c.setFromAxisAngle(b,a*(d.dynamicDampingFactor-1)),c.multiplyVector3(j))}};
this.zoomCamera=function(){var a=1+(p.y-m.y)*d.zoomSpeed;1!==a&&0<a&&(h.multiplyScalar(a),d.staticMoving?m.copy(p):m.y+=(p.y-m.y)*this.dynamicDampingFactor)};this.panCamera=function(){var a=s.clone().subSelf(n);if(a.lengthSq()){a.multiplyScalar(h.length()*d.panSpeed);var b=h.clone().crossSelf(d.object.up).setLength(a.x);b.addSelf(d.object.up.clone().setLength(a.y));d.object.position.addSelf(b);d.target.addSelf(b);d.staticMoving?n=s:n.addSelf(a.sub(s,n).multiplyScalar(d.dynamicDampingFactor))}};this.checkDistances=
function(){if(!d.noZoom||!d.noPan)d.object.position.lengthSq()>d.maxDistance*d.maxDistance&&d.object.position.setLength(d.maxDistance),h.lengthSq()<d.minDistance*d.minDistance&&d.object.position.add(d.target,h.setLength(d.minDistance))};this.update=function(){h.copy(d.object.position).subSelf(d.target);d.noRotate||d.rotateCamera();d.noZoom||d.zoomCamera();d.noPan||d.panCamera();d.object.position.add(d.target,h);d.checkDistances();d.object.lookAt(d.target);0<f.distanceToSquared(d.object.position)&&
(d.dispatchEvent(r),f.copy(d.object.position))};this.domElement.addEventListener("contextmenu",function(a){a.preventDefault()},!1);this.domElement.addEventListener("mousemove",function(a){d.enabled&&(e&&(j=k=d.getMouseProjectionOnBall(a.clientX,a.clientY),m=p=d.getMouseOnScreen(a.clientX,a.clientY),n=s=d.getMouseOnScreen(a.clientX,a.clientY),e=!1),-1!==g&&(0===g&&!d.noRotate?k=d.getMouseProjectionOnBall(a.clientX,a.clientY):1===g&&!d.noZoom?p=d.getMouseOnScreen(a.clientX,a.clientY):2===g&&!d.noPan&&
(s=d.getMouseOnScreen(a.clientX,a.clientY))))},!1);this.domElement.addEventListener("mousedown",function(a){d.enabled&&(a.preventDefault(),a.stopPropagation(),-1===g&&(g=a.button,0===g&&!d.noRotate?j=k=d.getMouseProjectionOnBall(a.clientX,a.clientY):1===g&&!d.noZoom?m=p=d.getMouseOnScreen(a.clientX,a.clientY):this.noPan||(n=s=d.getMouseOnScreen(a.clientX,a.clientY))))},!1);this.domElement.addEventListener("mouseup",function(a){d.enabled&&(a.preventDefault(),a.stopPropagation(),g=-1)},!1);this.domElement.addEventListener("DOMMouseScroll",
c,!1);this.domElement.addEventListener("mousewheel",c,!1);window.addEventListener("keydown",function(a){d.enabled&&-1===g&&(a.keyCode===d.keys[0]&&!d.noRotate?g=0:a.keyCode===d.keys[1]&&!d.noZoom?g=1:a.keyCode===d.keys[2]&&!d.noPan&&(g=2),-1!==g&&(e=!0))},!1);window.addEventListener("keyup",function(){d.enabled&&-1!==g&&(g=-1)},!1);this.handleResize()};
THREE.OrbitControls=function(a,b){function c(){return 2*Math.PI/60/60*e.autoRotateSpeed}function d(a){a.preventDefault();w===v.ROTATE?(j.set(a.clientX,a.clientY),k.sub(j,h),e.rotateLeft(2*Math.PI*k.x/g*e.userRotateSpeed),e.rotateUp(2*Math.PI*k.y/g*e.userRotateSpeed),h.copy(j)):w===v.ZOOM&&(p.set(a.clientX,a.clientY),n.sub(p,m),0<n.y?e.zoomIn():e.zoomOut(),m.copy(p))}function f(){e.userRotate&&(document.removeEventListener("mousemove",d,!1),document.removeEventListener("mouseup",f,!1),w=v.NONE)}THREE.EventTarget.call(this);
this.object=a;this.domElement=void 0!==b?b:document;this.center=new THREE.Vector3;this.userZoom=!0;this.userZoomSpeed=1;this.userRotate=!0;this.userRotateSpeed=1;this.autoRotate=!1;this.autoRotateSpeed=2;var e=this,g=1800,h=new THREE.Vector2,j=new THREE.Vector2,k=new THREE.Vector2,m=new THREE.Vector2,p=new THREE.Vector2,n=new THREE.Vector2,s=0,r=0,q=1,t=new THREE.Vector3,v={NONE:-1,ROTATE:0,ZOOM:1},w=v.NONE,y={type:"change"};this.rotateLeft=function(a){void 0===a&&(a=c());r-=a};this.rotateRight=function(a){void 0===
a&&(a=c());r+=a};this.rotateUp=function(a){void 0===a&&(a=c());s-=a};this.rotateDown=function(a){void 0===a&&(a=c());s+=a};this.zoomIn=function(a){void 0===a&&(a=Math.pow(0.95,e.userZoomSpeed));q/=a};this.zoomOut=function(a){void 0===a&&(a=Math.pow(0.95,e.userZoomSpeed));q*=a};this.update=function(){var a=this.object.position,b=a.clone().subSelf(this.center),d=Math.atan2(b.x,b.z),e=Math.atan2(Math.sqrt(b.x*b.x+b.z*b.z),b.y);this.autoRotate&&this.rotateLeft(c());var d=d+r,e=e+s,e=Math.max(1E-6,Math.min(Math.PI-
1E-6,e)),f=b.length();b.x=f*Math.sin(e)*Math.sin(d);b.y=f*Math.cos(e);b.z=f*Math.sin(e)*Math.cos(d);b.multiplyScalar(q);a.copy(this.center).addSelf(b);this.object.lookAt(this.center);s=r=0;q=1;0<t.distanceTo(this.object.position)&&(this.dispatchEvent(y),t.copy(this.object.position))};this.domElement.addEventListener("contextmenu",function(a){a.preventDefault()},!1);this.domElement.addEventListener("mousedown",function(a){e.userRotate&&(a.preventDefault(),0===a.button||2===a.button?(w=v.ROTATE,h.set(a.clientX,
a.clientY)):1===a.button&&(w=v.ZOOM,m.set(a.clientX,a.clientY)),document.addEventListener("mousemove",d,!1),document.addEventListener("mouseup",f,!1))},!1);this.domElement.addEventListener("mousewheel",function(a){e.userZoom&&(0<a.wheelDelta?e.zoomOut():e.zoomIn())},!1)};
THREE.CircleGeometry=function(a,b,c,d){THREE.Geometry.call(this);a=a||50;c=void 0!==c?c:0;d=void 0!==d?d:2*Math.PI;b=void 0!==b?Math.max(3,b):8;var f,e=[];f=new THREE.Vector3;var g=new THREE.UV(0.5,0.5);this.vertices.push(f);e.push(g);for(f=0;f<=b;f++){var h=new THREE.Vector3;h.x=a*Math.cos(c+f/b*d);h.y=a*Math.sin(c+f/b*d);this.vertices.push(h);e.push(new THREE.UV((h.x/a+1)/2,-(h.y/a+1)/2+1))}c=new THREE.Vector3(0,0,-1);for(f=1;f<=b;f++)this.faces.push(new THREE.Face3(f,f+1,0,[c,c,c])),this.faceVertexUvs[0].push([e[f],
e[f+1],g]);this.computeCentroids();this.computeFaceNormals();this.boundingSphere={radius:a}};THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.CubeGeometry=function(a,b,c,d,f,e,g,h){function j(a,b,c,g,h,j,m,n){var p,q=d||1,r=f||1,s=h/2,t=j/2,v=k.vertices.length;if("x"===a&&"y"===b||"y"===a&&"x"===b)p="z";else if("x"===a&&"z"===b||"z"===a&&"x"===b)p="y",r=e||1;else if("z"===a&&"y"===b||"y"===a&&"z"===b)p="x",q=e||1;var w=q+1,y=r+1,$=h/q,ba=j/r,O=new THREE.Vector3;O[p]=0<m?1:-1;for(h=0;h<y;h++)for(j=0;j<w;j++){var da=new THREE.Vector3;da[a]=(j*$-s)*c;da[b]=(h*ba-t)*g;da[p]=m;k.vertices.push(da)}for(h=0;h<r;h++)for(j=0;j<q;j++)a=new THREE.Face4(j+
w*h+v,j+w*(h+1)+v,j+1+w*(h+1)+v,j+1+w*h+v),a.normal.copy(O),a.vertexNormals.push(O.clone(),O.clone(),O.clone(),O.clone()),a.materialIndex=n,k.faces.push(a),k.faceVertexUvs[0].push([new THREE.UV(j/q,1-h/r),new THREE.UV(j/q,1-(h+1)/r),new THREE.UV((j+1)/q,1-(h+1)/r),new THREE.UV((j+1)/q,1-h/r)])}THREE.Geometry.call(this);var k=this,m=a/2,p=b/2,n=c/2,s,r,q,t,v,w;if(void 0!==g){if(g instanceof Array)this.materials=g;else{this.materials=[];for(s=0;6>s;s++)this.materials.push(g)}s=0;t=1;r=2;v=3;q=4;w=5}else this.materials=
[];this.sides={px:!0,nx:!0,py:!0,ny:!0,pz:!0,nz:!0};if(void 0!=h)for(var y in h)void 0!==this.sides[y]&&(this.sides[y]=h[y]);this.sides.px&&j("z","y",-1,-1,c,b,m,s);this.sides.nx&&j("z","y",1,-1,c,b,-m,t);this.sides.py&&j("x","z",1,1,a,c,p,r);this.sides.ny&&j("x","z",1,-1,a,c,-p,v);this.sides.pz&&j("x","y",1,-1,a,b,n,q);this.sides.nz&&j("x","y",-1,-1,a,b,-n,w);this.computeCentroids();this.mergeVertices()};THREE.CubeGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.CylinderGeometry=function(a,b,c,d,f,e){THREE.Geometry.call(this);a=void 0!==a?a:20;b=void 0!==b?b:20;c=void 0!==c?c:100;var g=c/2;d=d||8;f=f||1;var h,j,k=[],m=[];for(j=0;j<=f;j++){var p=[],n=[],s=j/f,r=s*(b-a)+a;for(h=0;h<=d;h++){var q=h/d,t=new THREE.Vector3;t.x=r*Math.sin(2*q*Math.PI);t.y=-s*c+g;t.z=r*Math.cos(2*q*Math.PI);this.vertices.push(t);p.push(this.vertices.length-1);n.push(new THREE.UV(q,1-s))}k.push(p);m.push(n)}c=(b-a)/c;for(h=0;h<d;h++){0!==a?(p=this.vertices[k[0][h]].clone(),
n=this.vertices[k[0][h+1]].clone()):(p=this.vertices[k[1][h]].clone(),n=this.vertices[k[1][h+1]].clone());p.setY(Math.sqrt(p.x*p.x+p.z*p.z)*c).normalize();n.setY(Math.sqrt(n.x*n.x+n.z*n.z)*c).normalize();for(j=0;j<f;j++){var s=k[j][h],r=k[j+1][h],q=k[j+1][h+1],t=k[j][h+1],v=p.clone(),w=p.clone(),y=n.clone(),u=n.clone(),D=m[j][h].clone(),x=m[j+1][h].clone(),C=m[j+1][h+1].clone(),G=m[j][h+1].clone();this.faces.push(new THREE.Face4(s,r,q,t,[v,w,y,u]));this.faceVertexUvs[0].push([D,x,C,G])}}if(!e&&0<
a){this.vertices.push(new THREE.Vector3(0,g,0));for(h=0;h<d;h++)s=k[0][h],r=k[0][h+1],q=this.vertices.length-1,v=new THREE.Vector3(0,1,0),w=new THREE.Vector3(0,1,0),y=new THREE.Vector3(0,1,0),D=m[0][h].clone(),x=m[0][h+1].clone(),C=new THREE.UV(x.u,0),this.faces.push(new THREE.Face3(s,r,q,[v,w,y])),this.faceVertexUvs[0].push([D,x,C])}if(!e&&0<b){this.vertices.push(new THREE.Vector3(0,-g,0));for(h=0;h<d;h++)s=k[j][h+1],r=k[j][h],q=this.vertices.length-1,v=new THREE.Vector3(0,-1,0),w=new THREE.Vector3(0,
-1,0),y=new THREE.Vector3(0,-1,0),D=m[j][h+1].clone(),x=m[j][h].clone(),C=new THREE.UV(x.u,1),this.faces.push(new THREE.Face3(s,r,q,[v,w,y])),this.faceVertexUvs[0].push([D,x,C])}this.computeCentroids();this.computeFaceNormals()};THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.ExtrudeGeometry=function(a,b){"undefined"!==typeof a&&(THREE.Geometry.call(this),a=a instanceof Array?a:[a],this.shapebb=a[a.length-1].getBoundingBox(),this.addShapeList(a,b),this.computeCentroids(),this.computeFaceNormals())};THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry.prototype.addShapeList=function(a,b){for(var c=a.length,d=0;d<c;d++)this.addShape(a[d],b)};
THREE.ExtrudeGeometry.prototype.addShape=function(a,b){function c(a,b,c){b||console.log("die");return b.clone().multiplyScalar(c).addSelf(a)}function d(a,b,c){var d=THREE.ExtrudeGeometry.__v1,e=THREE.ExtrudeGeometry.__v2,f=THREE.ExtrudeGeometry.__v3,g=THREE.ExtrudeGeometry.__v4,h=THREE.ExtrudeGeometry.__v5,j=THREE.ExtrudeGeometry.__v6;d.set(a.x-b.x,a.y-b.y);e.set(a.x-c.x,a.y-c.y);d=d.normalize();e=e.normalize();f.set(-d.y,d.x);g.set(e.y,-e.x);h.copy(a).addSelf(f);j.copy(a).addSelf(g);if(h.equals(j))return g.clone();
h.copy(b).addSelf(f);j.copy(c).addSelf(g);f=d.dot(g);g=j.subSelf(h).dot(g);0===f&&(console.log("Either infinite or no solutions!"),0===g?console.log("Its finite solutions."):console.log("Too bad, no solutions."));g/=f;return 0>g?(b=Math.atan2(b.y-a.y,b.x-a.x),a=Math.atan2(c.y-a.y,c.x-a.x),b>a&&(a+=2*Math.PI),c=(b+a)/2,a=-Math.cos(c),c=-Math.sin(c),new THREE.Vector2(a,c)):d.multiplyScalar(g).addSelf(h).subSelf(a).clone()}function f(c,d){var e,f;for(O=c.length;0<=--O;){e=O;f=O-1;0>f&&(f=c.length-1);
for(var g=0,h=n+2*m,g=0;g<h;g++){var j=X*g,k=X*(g+1),p=d+e+j,j=d+f+j,q=d+f+k,k=d+e+k,r=c,s=g,t=h,u=e,x=f,p=p+H,j=j+H,q=q+H,k=k+H;J.faces.push(new THREE.Face4(p,j,q,k,null,null,v));p=w.generateSideWallUV(J,a,r,b,p,j,q,k,s,t,u,x);J.faceVertexUvs[0].push(p)}}}function e(a,b,c){J.vertices.push(new THREE.Vector3(a,b,c))}function g(c,d,e,f){c+=H;d+=H;e+=H;J.faces.push(new THREE.Face3(c,d,e,null,null,t));c=f?w.generateBottomUV(J,a,b,c,d,e):w.generateTopUV(J,a,b,c,d,e);J.faceVertexUvs[0].push(c)}var h=void 0!==
b.amount?b.amount:100,j=void 0!==b.bevelThickness?b.bevelThickness:6,k=void 0!==b.bevelSize?b.bevelSize:j-2,m=void 0!==b.bevelSegments?b.bevelSegments:3,p=void 0!==b.bevelEnabled?b.bevelEnabled:!0,n=void 0!==b.steps?b.steps:1,s=b.extrudePath,r,q=!1,t=b.material,v=b.extrudeMaterial,w=void 0!==b.UVGenerator?b.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator,y,u,D,x;s&&(r=s.getSpacedPoints(n),q=!0,p=!1,y=void 0!==b.frames?b.frames:new THREE.TubeGeometry.FrenetFrames(s,n,!1),u=new THREE.Vector3,D=new THREE.Vector3,
x=new THREE.Vector3);p||(k=j=m=0);var C,G,A,J=this,H=this.vertices.length,s=a.extractPoints(),I=s.shape,s=s.holes,E=!THREE.Shape.Utils.isClockWise(I);if(E){I=I.reverse();G=0;for(A=s.length;G<A;G++)C=s[G],THREE.Shape.Utils.isClockWise(C)&&(s[G]=C.reverse());E=!1}var Q=THREE.Shape.Utils.triangulateShape(I,s),E=I;G=0;for(A=s.length;G<A;G++)C=s[G],I=I.concat(C);var M,K,L,N,X=I.length,$=Q.length,ba=[],O=0,da=E.length;M=da-1;for(K=O+1;O<da;O++,M++,K++)M===da&&(M=0),K===da&&(K=0),ba[O]=d(E[O],E[M],E[K]);
var S=[],ha,va=ba.concat();G=0;for(A=s.length;G<A;G++){C=s[G];ha=[];O=0;da=C.length;M=da-1;for(K=O+1;O<da;O++,M++,K++)M===da&&(M=0),K===da&&(K=0),ha[O]=d(C[O],C[M],C[K]);S.push(ha);va=va.concat(ha)}for(M=0;M<m;M++){C=M/m;L=j*(1-C);K=k*Math.sin(C*Math.PI/2);O=0;for(da=E.length;O<da;O++)N=c(E[O],ba[O],K),e(N.x,N.y,-L);G=0;for(A=s.length;G<A;G++){C=s[G];ha=S[G];O=0;for(da=C.length;O<da;O++)N=c(C[O],ha[O],K),e(N.x,N.y,-L)}}K=k;for(O=0;O<X;O++)N=p?c(I[O],va[O],K):I[O],q?(D.copy(y.normals[0]).multiplyScalar(N.x),
u.copy(y.binormals[0]).multiplyScalar(N.y),x.copy(r[0]).addSelf(D).addSelf(u),e(x.x,x.y,x.z)):e(N.x,N.y,0);for(C=1;C<=n;C++)for(O=0;O<X;O++)N=p?c(I[O],va[O],K):I[O],q?(D.copy(y.normals[C]).multiplyScalar(N.x),u.copy(y.binormals[C]).multiplyScalar(N.y),x.copy(r[C]).addSelf(D).addSelf(u),e(x.x,x.y,x.z)):e(N.x,N.y,h/n*C);for(M=m-1;0<=M;M--){C=M/m;L=j*(1-C);K=k*Math.sin(C*Math.PI/2);O=0;for(da=E.length;O<da;O++)N=c(E[O],ba[O],K),e(N.x,N.y,h+L);G=0;for(A=s.length;G<A;G++){C=s[G];ha=S[G];O=0;for(da=C.length;O<
da;O++)N=c(C[O],ha[O],K),q?e(N.x,N.y+r[n-1].y,r[n-1].x+L):e(N.x,N.y,h+L)}}if(p){j=0*X;for(O=0;O<$;O++)h=Q[O],g(h[2]+j,h[1]+j,h[0]+j,!0);j=X*(n+2*m);for(O=0;O<$;O++)h=Q[O],g(h[0]+j,h[1]+j,h[2]+j,!1)}else{for(O=0;O<$;O++)h=Q[O],g(h[2],h[1],h[0],!0);for(O=0;O<$;O++)h=Q[O],g(h[0]+X*n,h[1]+X*n,h[2]+X*n,!1)}h=0;f(E,h);h+=E.length;G=0;for(A=s.length;G<A;G++)C=s[G],f(C,h),h+=C.length};
THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(a,b,c,d,f,e){b=a.vertices[f].x;f=a.vertices[f].y;c=a.vertices[e].x;e=a.vertices[e].y;return[new THREE.UV(a.vertices[d].x,a.vertices[d].y),new THREE.UV(b,f),new THREE.UV(c,e)]},generateBottomUV:function(a,b,c,d,f,e){return this.generateTopUV(a,b,c,d,f,e)},generateSideWallUV:function(a,b,c,d,f,e,g,h){b=a.vertices[f].x;c=a.vertices[f].y;f=a.vertices[f].z;d=a.vertices[e].x;var j=a.vertices[e].y;e=a.vertices[e].z;var k=a.vertices[g].x,m=a.vertices[g].y;
g=a.vertices[g].z;var p=a.vertices[h].x,n=a.vertices[h].y;a=a.vertices[h].z;return 0.01>Math.abs(c-j)?[new THREE.UV(b,1-f),new THREE.UV(d,1-e),new THREE.UV(k,1-g),new THREE.UV(p,1-a)]:[new THREE.UV(c,1-f),new THREE.UV(j,1-e),new THREE.UV(m,1-g),new THREE.UV(n,1-a)]}};THREE.ExtrudeGeometry.__v1=new THREE.Vector2;THREE.ExtrudeGeometry.__v2=new THREE.Vector2;THREE.ExtrudeGeometry.__v3=new THREE.Vector2;THREE.ExtrudeGeometry.__v4=new THREE.Vector2;THREE.ExtrudeGeometry.__v5=new THREE.Vector2;
THREE.ExtrudeGeometry.__v6=new THREE.Vector2;THREE.ShapeGeometry=function(a,b){THREE.Geometry.call(this);!1===a instanceof Array&&(a=[a]);this.shapebb=a[a.length-1].getBoundingBox();this.addShapeList(a,b);this.computeCentroids();this.computeFaceNormals()};THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ShapeGeometry.prototype.addShapeList=function(a,b){for(var c=0,d=a.length;c<d;c++)this.addShape(a[c],b);return this};
THREE.ShapeGeometry.prototype.addShape=function(a,b){void 0===b&&(b={});var c=b.material,d=void 0===b.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:b.UVGenerator,f,e,g,h=this.vertices.length;f=a.extractPoints();var j=f.shape,k=f.holes;if(!THREE.Shape.Utils.isClockWise(j)){j=j.reverse();f=0;for(e=k.length;f<e;f++)g=k[f],THREE.Shape.Utils.isClockWise(g)&&(k[f]=g.reverse())}var m=THREE.Shape.Utils.triangulateShape(j,k);f=0;for(e=k.length;f<e;f++)g=k[f],j=j.concat(g);k=j.length;e=m.length;for(f=
0;f<k;f++)g=j[f],this.vertices.push(new THREE.Vector3(g.x,g.y,0));for(f=0;f<e;f++)k=m[f],j=k[2]+h,g=k[1]+h,k=k[0]+h,this.faces.push(new THREE.Face3(j,g,k,null,null,c)),this.faceVertexUvs[0].push(d.generateBottomUV(this,a,b,j,g,k))};
THREE.LatheGeometry=function(a,b,c){THREE.Geometry.call(this);b=b||12;c=c||2*Math.PI;for(var d=[],f=(new THREE.Matrix4).makeRotationZ(c/b),e=0;e<a.length;e++)d[e]=a[e].clone(),this.vertices.push(d[e]);var g=b+1;for(c=0;c<g;c++)for(e=0;e<d.length;e++)d[e]=f.multiplyVector3(d[e].clone()),this.vertices.push(d[e]);for(c=0;c<b;c++){d=0;for(f=a.length;d<f-1;d++)this.faces.push(new THREE.Face4(c*f+d,(c+1)%g*f+d,(c+1)%g*f+(d+1)%f,c*f+(d+1)%f)),this.faceVertexUvs[0].push([new THREE.UV(1-c/b,d/f),new THREE.UV(1-
(c+1)/b,d/f),new THREE.UV(1-(c+1)/b,(d+1)/f),new THREE.UV(1-c/b,(d+1)/f)])}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.PlaneGeometry=function(a,b,c,d){THREE.Geometry.call(this);var f=a/2,e=b/2;c=c||1;d=d||1;var g=c+1,h=d+1,j=a/c,k=b/d,m=new THREE.Vector3(0,0,1);for(a=0;a<h;a++)for(b=0;b<g;b++)this.vertices.push(new THREE.Vector3(b*j-f,-(a*k-e),0));for(a=0;a<d;a++)for(b=0;b<c;b++)f=new THREE.Face4(b+g*a,b+g*(a+1),b+1+g*(a+1),b+1+g*a),f.normal.copy(m),f.vertexNormals.push(m.clone(),m.clone(),m.clone(),m.clone()),this.faces.push(f),this.faceVertexUvs[0].push([new THREE.UV(b/c,1-a/d),new THREE.UV(b/c,1-(a+1)/d),
new THREE.UV((b+1)/c,1-(a+1)/d),new THREE.UV((b+1)/c,1-a/d)]);this.computeCentroids()};THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.SphereGeometry=function(a,b,c,d,f,e,g){THREE.Geometry.call(this);a=a||50;d=void 0!==d?d:0;f=void 0!==f?f:2*Math.PI;e=void 0!==e?e:0;g=void 0!==g?g:Math.PI;b=Math.max(3,Math.floor(b)||8);c=Math.max(2,Math.floor(c)||6);var h,j,k=[],m=[];for(j=0;j<=c;j++){var p=[],n=[];for(h=0;h<=b;h++){var s=h/b,r=j/c,q=new THREE.Vector3;q.x=-a*Math.cos(d+s*f)*Math.sin(e+r*g);q.y=a*Math.cos(e+r*g);q.z=a*Math.sin(d+s*f)*Math.sin(e+r*g);this.vertices.push(q);p.push(this.vertices.length-1);n.push(new THREE.UV(s,
1-r))}k.push(p);m.push(n)}for(j=0;j<c;j++)for(h=0;h<b;h++){d=k[j][h+1];f=k[j][h];e=k[j+1][h];g=k[j+1][h+1];var p=this.vertices[d].clone().normalize(),n=this.vertices[f].clone().normalize(),s=this.vertices[e].clone().normalize(),r=this.vertices[g].clone().normalize(),q=m[j][h+1].clone(),t=m[j][h].clone(),v=m[j+1][h].clone(),w=m[j+1][h+1].clone();Math.abs(this.vertices[d].y)==a?(this.faces.push(new THREE.Face3(d,e,g,[p,s,r])),this.faceVertexUvs[0].push([q,v,w])):Math.abs(this.vertices[e].y)==a?(this.faces.push(new THREE.Face3(d,
f,e,[p,n,s])),this.faceVertexUvs[0].push([q,t,v])):(this.faces.push(new THREE.Face4(d,f,e,g,[p,n,s,r])),this.faceVertexUvs[0].push([q,t,v,w]))}this.computeCentroids();this.computeFaceNormals();this.boundingSphere={radius:a}};THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.TextGeometry=function(a,b){var c=THREE.FontUtils.generateShapes(a,b);b.amount=void 0!==b.height?b.height:50;void 0===b.bevelThickness&&(b.bevelThickness=10);void 0===b.bevelSize&&(b.bevelSize=8);void 0===b.bevelEnabled&&(b.bevelEnabled=!1);THREE.ExtrudeGeometry.call(this,c,b)};THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype);
THREE.TorusGeometry=function(a,b,c,d,f){THREE.Geometry.call(this);this.radius=a||100;this.tube=b||40;this.segmentsR=c||8;this.segmentsT=d||6;this.arc=f||2*Math.PI;f=new THREE.Vector3;a=[];b=[];for(c=0;c<=this.segmentsR;c++)for(d=0;d<=this.segmentsT;d++){var e=d/this.segmentsT*this.arc,g=2*c/this.segmentsR*Math.PI;f.x=this.radius*Math.cos(e);f.y=this.radius*Math.sin(e);var h=new THREE.Vector3;h.x=(this.radius+this.tube*Math.cos(g))*Math.cos(e);h.y=(this.radius+this.tube*Math.cos(g))*Math.sin(e);h.z=
this.tube*Math.sin(g);this.vertices.push(h);a.push(new THREE.UV(d/this.segmentsT,c/this.segmentsR));b.push(h.clone().subSelf(f).normalize())}for(c=1;c<=this.segmentsR;c++)for(d=1;d<=this.segmentsT;d++){f=(this.segmentsT+1)*c+d-1;var e=(this.segmentsT+1)*(c-1)+d-1,g=(this.segmentsT+1)*(c-1)+d,h=(this.segmentsT+1)*c+d,j=new THREE.Face4(f,e,g,h,[b[f],b[e],b[g],b[h]]);j.normal.addSelf(b[f]);j.normal.addSelf(b[e]);j.normal.addSelf(b[g]);j.normal.addSelf(b[h]);j.normal.normalize();this.faces.push(j);this.faceVertexUvs[0].push([a[f].clone(),
a[e].clone(),a[g].clone(),a[h].clone()])}this.computeCentroids()};THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.TorusKnotGeometry=function(a,b,c,d,f,e,g){function h(a,b,c,d,e,f){var g=Math.cos(a);Math.cos(b);b=Math.sin(a);a*=c/d;c=Math.cos(a);g*=0.5*e*(2+c);b=0.5*e*(2+c)*b;e=0.5*f*e*Math.sin(a);return new THREE.Vector3(g,b,e)}THREE.Geometry.call(this);this.radius=a||200;this.tube=b||40;this.segmentsR=c||64;this.segmentsT=d||8;this.p=f||2;this.q=e||3;this.heightScale=g||1;this.grid=Array(this.segmentsR);c=new THREE.Vector3;d=new THREE.Vector3;f=new THREE.Vector3;for(a=0;a<this.segmentsR;++a){this.grid[a]=
Array(this.segmentsT);for(b=0;b<this.segmentsT;++b){var j=2*(a/this.segmentsR)*this.p*Math.PI;g=2*(b/this.segmentsT)*Math.PI;e=h(j,g,this.q,this.p,this.radius,this.heightScale);j=h(j+0.01,g,this.q,this.p,this.radius,this.heightScale);c.sub(j,e);d.add(j,e);f.cross(c,d);d.cross(f,c);f.normalize();d.normalize();j=-this.tube*Math.cos(g);g=this.tube*Math.sin(g);e.x+=j*d.x+g*f.x;e.y+=j*d.y+g*f.y;e.z+=j*d.z+g*f.z;this.grid[a][b]=this.vertices.push(new THREE.Vector3(e.x,e.y,e.z))-1}}for(a=0;a<this.segmentsR;++a)for(b=
0;b<this.segmentsT;++b){f=(a+1)%this.segmentsR;e=(b+1)%this.segmentsT;c=this.grid[a][b];d=this.grid[f][b];f=this.grid[f][e];e=this.grid[a][e];g=new THREE.UV(a/this.segmentsR,b/this.segmentsT);var j=new THREE.UV((a+1)/this.segmentsR,b/this.segmentsT),k=new THREE.UV((a+1)/this.segmentsR,(b+1)/this.segmentsT),m=new THREE.UV(a/this.segmentsR,(b+1)/this.segmentsT);this.faces.push(new THREE.Face4(c,d,f,e));this.faceVertexUvs[0].push([g,j,k,m])}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};
THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.TubeGeometry=function(a,b,c,d,f,e){THREE.Geometry.call(this);this.path=a;this.segments=b||64;this.radius=c||1;this.segmentsRadius=d||8;this.closed=f||!1;e&&(this.debug=new THREE.Object3D);this.grid=[];var g,h;e=this.segments+1;var j,k,m,p=new THREE.Vector3,n,s,r;b=new THREE.TubeGeometry.FrenetFrames(a,b,f);n=b.tangents;s=b.normals;r=b.binormals;this.tangents=n;this.normals=s;this.binormals=r;for(b=0;b<e;b++){this.grid[b]=[];d=b/(e-1);m=a.getPointAt(d);d=n[b];g=s[b];h=r[b];this.debug&&(this.debug.add(new THREE.ArrowHelper(d,
m,c,255)),this.debug.add(new THREE.ArrowHelper(g,m,c,16711680)),this.debug.add(new THREE.ArrowHelper(h,m,c,65280)));for(d=0;d<this.segmentsRadius;d++)j=2*(d/this.segmentsRadius)*Math.PI,k=-this.radius*Math.cos(j),j=this.radius*Math.sin(j),p.copy(m),p.x+=k*g.x+j*h.x,p.y+=k*g.y+j*h.y,p.z+=k*g.z+j*h.z,this.grid[b][d]=this.vertices.push(new THREE.Vector3(p.x,p.y,p.z))-1}for(b=0;b<this.segments;b++)for(d=0;d<this.segmentsRadius;d++)e=f?(b+1)%this.segments:b+1,p=(d+1)%this.segmentsRadius,a=this.grid[b][d],
c=this.grid[e][d],e=this.grid[e][p],p=this.grid[b][p],n=new THREE.UV(b/this.segments,d/this.segmentsRadius),s=new THREE.UV((b+1)/this.segments,d/this.segmentsRadius),r=new THREE.UV((b+1)/this.segments,(d+1)/this.segmentsRadius),g=new THREE.UV(b/this.segments,(d+1)/this.segmentsRadius),this.faces.push(new THREE.Face4(a,c,e,p)),this.faceVertexUvs[0].push([n,s,r,g]);this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.TubeGeometry.FrenetFrames=function(a,b,c){new THREE.Vector3;var d=new THREE.Vector3;new THREE.Vector3;var f=[],e=[],g=[],h=new THREE.Vector3,j=new THREE.Matrix4;b+=1;var k,m,p;this.tangents=f;this.normals=e;this.binormals=g;for(k=0;k<b;k++)m=k/(b-1),f[k]=a.getTangentAt(m),f[k].normalize();e[0]=new THREE.Vector3;g[0]=new THREE.Vector3;a=Number.MAX_VALUE;k=Math.abs(f[0].x);m=Math.abs(f[0].y);p=Math.abs(f[0].z);k<=a&&(a=k,d.set(1,0,0));m<=a&&(a=m,d.set(0,1,0));p<=a&&d.set(0,0,1);h.cross(f[0],d).normalize();
e[0].cross(f[0],h);g[0].cross(f[0],e[0]);for(k=1;k<b;k++)e[k]=e[k-1].clone(),g[k]=g[k-1].clone(),h.cross(f[k-1],f[k]),1E-4<h.length()&&(h.normalize(),d=Math.acos(f[k-1].dot(f[k])),j.makeRotationAxis(h,d).multiplyVector3(e[k])),g[k].cross(f[k],e[k]);if(c){d=Math.acos(e[0].dot(e[b-1]));d/=b-1;0<f[0].dot(h.cross(e[0],e[b-1]))&&(d=-d);for(k=1;k<b;k++)j.makeRotationAxis(f[k],d*k).multiplyVector3(e[k]),g[k].cross(f[k],e[k])}};
THREE.PolyhedronGeometry=function(a,b,c,d){function f(a){var b=a.normalize().clone();b.index=j.vertices.push(b)-1;var c=Math.atan2(a.z,-a.x)/2/Math.PI+0.5;a=Math.atan2(-a.y,Math.sqrt(a.x*a.x+a.z*a.z))/Math.PI+0.5;b.uv=new THREE.UV(c,1-a);return b}function e(a,b,c,d){1>d?(d=new THREE.Face3(a.index,b.index,c.index,[a.clone(),b.clone(),c.clone()]),d.centroid.addSelf(a).addSelf(b).addSelf(c).divideScalar(3),d.normal=d.centroid.clone().normalize(),j.faces.push(d),d=Math.atan2(d.centroid.z,-d.centroid.x),
j.faceVertexUvs[0].push([h(a.uv,a,d),h(b.uv,b,d),h(c.uv,c,d)])):(d-=1,e(a,g(a,b),g(a,c),d),e(g(a,b),b,g(b,c),d),e(g(a,c),g(b,c),c,d),e(g(a,b),g(b,c),g(a,c),d))}function g(a,b){p[a.index]||(p[a.index]=[]);p[b.index]||(p[b.index]=[]);var c=p[a.index][b.index];void 0===c&&(p[a.index][b.index]=p[b.index][a.index]=c=f((new THREE.Vector3).add(a,b).divideScalar(2)));return c}function h(a,b,c){0>c&&1===a.u&&(a=new THREE.UV(a.u-1,a.v));0===b.x&&0===b.z&&(a=new THREE.UV(c/2/Math.PI+0.5,a.v));return a}THREE.Geometry.call(this);
c=c||1;d=d||0;for(var j=this,k=0,m=a.length;k<m;k++)f(new THREE.Vector3(a[k][0],a[k][1],a[k][2]));var p=[];a=this.vertices;k=0;for(m=b.length;k<m;k++)e(a[b[k][0]],a[b[k][1]],a[b[k][2]],d);this.mergeVertices();k=0;for(m=this.vertices.length;k<m;k++)this.vertices[k].multiplyScalar(c);this.computeCentroids();this.boundingSphere={radius:c}};THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.IcosahedronGeometry=function(a,b){var c=(1+Math.sqrt(5))/2;THREE.PolyhedronGeometry.call(this,[[-1,c,0],[1,c,0],[-1,-c,0],[1,-c,0],[0,-1,c],[0,1,c],[0,-1,-c],[0,1,-c],[c,0,-1],[c,0,1],[-c,0,-1],[-c,0,1]],[[0,11,5],[0,5,1],[0,1,7],[0,7,10],[0,10,11],[1,5,9],[5,11,4],[11,10,2],[10,7,6],[7,1,8],[3,9,4],[3,4,2],[3,2,6],[3,6,8],[3,8,9],[4,9,5],[2,4,11],[6,2,10],[8,6,7],[9,8,1]],a,b)};THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.OctahedronGeometry=function(a,b){THREE.PolyhedronGeometry.call(this,[[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1],[0,0,-1]],[[0,2,4],[0,4,3],[0,3,5],[0,5,2],[1,2,5],[1,5,3],[1,3,4],[1,4,2]],a,b)};THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TetrahedronGeometry=function(a,b){THREE.PolyhedronGeometry.call(this,[[1,1,1],[-1,-1,1],[-1,1,-1],[1,-1,-1]],[[2,1,0],[0,3,2],[1,3,0],[2,3,1]],a,b)};THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.ParametricGeometry=function(a,b,c,d){THREE.Geometry.call(this);var f=this.vertices,e=this.faces,g=this.faceVertexUvs[0];d=void 0===d?!1:d;var h,j,k,m,p=b+1;for(h=0;h<=c;h++){m=h/c;for(j=0;j<=b;j++)k=j/b,k=a(k,m),f.push(k)}var n,s,r,q;for(h=0;h<c;h++)for(j=0;j<b;j++)a=h*p+j,f=h*p+j+1,m=(h+1)*p+j,k=(h+1)*p+j+1,n=new THREE.UV(j/b,h/c),s=new THREE.UV((j+1)/b,h/c),r=new THREE.UV(j/b,(h+1)/c),q=new THREE.UV((j+1)/b,(h+1)/c),d?(e.push(new THREE.Face3(a,f,m)),e.push(new THREE.Face3(f,k,m)),g.push([n,
s,r]),g.push([s,q,r])):(e.push(new THREE.Face4(a,f,k,m)),g.push([n,s,q,r]));this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.ConvexGeometry=function(a){function b(a){var b=a.length();return new THREE.UV(a.x/b,a.y/b)}THREE.Geometry.call(this);for(var c=[[0,1,2],[0,2,1]],d=3;d<a.length;d++){var f=d,e=a[f].clone(),g=e.length();e.x+=2E-6*g*(Math.random()-0.5);e.y+=2E-6*g*(Math.random()-0.5);e.z+=2E-6*g*(Math.random()-0.5);for(var g=[],h=0;h<c.length;){var j=c[h],k=e,m=a[j[0]],p;p=m;var n=a[j[1]],s=a[j[2]],r=new THREE.Vector3,q=new THREE.Vector3;r.sub(s,n);q.sub(p,n);r.crossSelf(q);r.isZero()||r.normalize();p=r;m=p.dot(m);
if(p.dot(k)>=m){for(k=0;3>k;k++){m=[j[k],j[(k+1)%3]];p=!0;for(n=0;n<g.length;n++)if(g[n][0]===m[1]&&g[n][1]===m[0]){g[n]=g[g.length-1];g.pop();p=!1;break}p&&g.push(m)}c[h]=c[c.length-1];c.pop()}else h++}for(n=0;n<g.length;n++)c.push([g[n][0],g[n][1],f])}f=0;e=Array(a.length);for(d=0;d<c.length;d++){g=c[d];for(h=0;3>h;h++)void 0===e[g[h]]&&(e[g[h]]=f++,this.vertices.push(a[g[h]])),g[h]=e[g[h]]}for(d=0;d<c.length;d++)this.faces.push(new THREE.Face3(c[d][0],c[d][1],c[d][2]));for(d=0;d<this.faces.length;d++)g=
this.faces[d],this.faceVertexUvs[0].push([b(this.vertices[g.a]),b(this.vertices[g.b]),b(this.vertices[g.c])]);this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.ConvexGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.AxisHelper=function(){THREE.Object3D.call(this);var a=new THREE.Geometry;a.vertices.push(new THREE.Vector3);a.vertices.push(new THREE.Vector3(0,100,0));var b=new THREE.CylinderGeometry(0,5,25,5,1),c;c=new THREE.Line(a,new THREE.LineBasicMaterial({color:16711680}));c.rotation.z=-Math.PI/2;this.add(c);c=new THREE.Mesh(b,new THREE.MeshBasicMaterial({color:16711680}));c.position.x=100;c.rotation.z=-Math.PI/2;this.add(c);c=new THREE.Line(a,new THREE.LineBasicMaterial({color:65280}));this.add(c);
c=new THREE.Mesh(b,new THREE.MeshBasicMaterial({color:65280}));c.position.y=100;this.add(c);c=new THREE.Line(a,new THREE.LineBasicMaterial({color:255}));c.rotation.x=Math.PI/2;this.add(c);c=new THREE.Mesh(b,new THREE.MeshBasicMaterial({color:255}));c.position.z=100;c.rotation.x=Math.PI/2;this.add(c)};THREE.AxisHelper.prototype=Object.create(THREE.Object3D.prototype);
THREE.ArrowHelper=function(a,b,c,d){THREE.Object3D.call(this);void 0===d&&(d=16776960);void 0===c&&(c=20);var f=new THREE.Geometry;f.vertices.push(new THREE.Vector3(0,0,0));f.vertices.push(new THREE.Vector3(0,1,0));this.line=new THREE.Line(f,new THREE.LineBasicMaterial({color:d}));this.add(this.line);f=new THREE.CylinderGeometry(0,0.05,0.25,5,1);this.cone=new THREE.Mesh(f,new THREE.MeshBasicMaterial({color:d}));this.cone.position.set(0,1,0);this.add(this.cone);b instanceof THREE.Vector3&&(this.position=
b);this.setDirection(a);this.setLength(c)};THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.ArrowHelper.prototype.setDirection=function(a){var b=(new THREE.Vector3(0,1,0)).crossSelf(a);a=Math.acos((new THREE.Vector3(0,1,0)).dot(a.clone().normalize()));this.matrix=(new THREE.Matrix4).makeRotationAxis(b.normalize(),a);this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder)};THREE.ArrowHelper.prototype.setLength=function(a){this.scale.set(a,a,a)};
THREE.ArrowHelper.prototype.setColor=function(a){this.line.material.color.setHex(a);this.cone.material.color.setHex(a)};
THREE.CameraHelper=function(a){function b(a,b,d){c(a,d);c(b,d)}function c(a,b){d.geometry.vertices.push(new THREE.Vector3);d.geometry.colors.push(new THREE.Color(b));void 0===d.pointMap[a]&&(d.pointMap[a]=[]);d.pointMap[a].push(d.geometry.vertices.length-1)}THREE.Line.call(this);var d=this;this.geometry=new THREE.Geometry;this.material=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors});this.type=THREE.LinePieces;this.matrixWorld=a.matrixWorld;this.matrixAutoUpdate=!1;this.pointMap=
{};b("n1","n2",16755200);b("n2","n4",16755200);b("n4","n3",16755200);b("n3","n1",16755200);b("f1","f2",16755200);b("f2","f4",16755200);b("f4","f3",16755200);b("f3","f1",16755200);b("n1","f1",16755200);b("n2","f2",16755200);b("n3","f3",16755200);b("n4","f4",16755200);b("p","n1",16711680);b("p","n2",16711680);b("p","n3",16711680);b("p","n4",16711680);b("u1","u2",43775);b("u2","u3",43775);b("u3","u1",43775);b("c","t",16777215);b("p","c",3355443);b("cn1","cn2",3355443);b("cn3","cn4",3355443);b("cf1",
"cf2",3355443);b("cf3","cf4",3355443);this.camera=a;this.update(a)};THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype);
THREE.CameraHelper.prototype.update=function(){function a(a,d,f,e){THREE.CameraHelper.__v.set(d,f,e);THREE.CameraHelper.__projector.unprojectVector(THREE.CameraHelper.__v,THREE.CameraHelper.__c);a=b.pointMap[a];if(void 0!==a){d=0;for(f=a.length;d<f;d++)b.geometry.vertices[a[d]].copy(THREE.CameraHelper.__v)}}var b=this;THREE.CameraHelper.__c.projectionMatrix.copy(this.camera.projectionMatrix);a("c",0,0,-1);a("t",0,0,1);a("n1",-1,-1,-1);a("n2",1,-1,-1);a("n3",-1,1,-1);a("n4",1,1,-1);a("f1",-1,-1,1);
a("f2",1,-1,1);a("f3",-1,1,1);a("f4",1,1,1);a("u1",0.7,1.1,-1);a("u2",-0.7,1.1,-1);a("u3",0,2,-1);a("cf1",-1,0,1);a("cf2",1,0,1);a("cf3",0,-1,1);a("cf4",0,1,1);a("cn1",-1,0,-1);a("cn2",1,0,-1);a("cn3",0,-1,-1);a("cn4",0,1,-1);this.geometry.verticesNeedUpdate=!0};THREE.CameraHelper.__projector=new THREE.Projector;THREE.CameraHelper.__v=new THREE.Vector3;THREE.CameraHelper.__c=new THREE.Camera;
THREE.SubdivisionModifier=function(a){this.subdivisions=void 0===a?1:a;this.useOldVertexColors=!1;this.supportUVs=!0;this.debug=!1};THREE.SubdivisionModifier.prototype.modify=function(a){for(var b=this.subdivisions;0<b--;)this.smooth(a)};
THREE.SubdivisionModifier.prototype.smooth=function(a){function b(){m.debug&&console.log.apply(console,arguments)}function c(){console&&console.log.apply(console,arguments)}function d(a,c,d,f,g,h,n){var p=new THREE.Face4(a,c,d,f,null,g.color,g.materialIndex);if(m.useOldVertexColors){p.vertexColors=[];for(var q,r,s,t=0;4>t;t++){s=h[t];q=new THREE.Color;q.setRGB(0,0,0);for(var u=0;u<s.length;u++)r=g.vertexColors[s[u]-1],q.r+=r.r,q.g+=r.g,q.b+=r.b;q.r/=s.length;q.g/=s.length;q.b/=s.length;p.vertexColors[t]=
q}}j.push(p);m.supportUVs&&(g=[e(a,""),e(c,n),e(d,n),e(f,n)],g[0]?g[1]?g[2]?g[3]?k.push(g):b("d :( ",f+":"+n):b("c :( ",d+":"+n):b("b :( ",c+":"+n):b("a :( ",a+":"+n))}function f(a,b){return Math.min(a,b)+"_"+Math.max(a,b)}function e(a,d){var e=a+":"+d,f=t[e];return!f?(a>=v&&a<v+n.length?b("face pt"):b("edge pt"),c("warning, UV not found for",e),null):f}function g(a,b,d){var e=a+":"+b;e in t?c("dup vertexNo",a,"oldFaceNo",b,"value",d,"key",e,t[e]):t[e]=d}var h=[],j=[],k=[],m=this,p=a.vertices,n=a.faces,
h=p.concat(),s=[],r={},q={},t={},v=p.length,w,y,u,D,x,C=a.faceVertexUvs[0];b("originalFaces, uvs, originalVerticesLength",n.length,C.length,v);if(m.supportUVs){w=0;for(y=C.length;w<y;w++){u=0;for(D=C[w].length;u<D;u++)x=n[w]["abcd".charAt(u)],g(x,w,C[w][u])}}0==C.length&&(m.supportUVs=!1);w=0;for(var G in t)w++;w||(m.supportUVs=!1,b("no uvs"));b("-- Original Faces + Vertices UVs completed",t,"vs",C.length);var A;w=0;for(y=n.length;w<y;w++)x=n[w],s.push(x.centroid),h.push(x.centroid),m.supportUVs&&
(A=new THREE.UV,x instanceof THREE.Face3?(A.u=e(x.a,w).u+e(x.b,w).u+e(x.c,w).u,A.v=e(x.a,w).v+e(x.b,w).v+e(x.c,w).v,A.u/=3,A.v/=3):x instanceof THREE.Face4&&(A.u=e(x.a,w).u+e(x.b,w).u+e(x.c,w).u+e(x.d,w).u,A.v=e(x.a,w).v+e(x.b,w).v+e(x.c,w).v+e(x.d,w).v,A.u/=4,A.v/=4),g(v+w,"",A));b("-- added UVs for new Faces",t);G=function(a,b){void 0===J[a]&&(J[a]=[]);J[a].push(b)};var J={},C=0;for(y=a.faces.length;C<y;C++)x=a.faces[C],x instanceof THREE.Face3?(A=f(x.a,x.b),G(A,C),A=f(x.b,x.c),G(A,C),A=f(x.c,x.a),
G(A,C)):x instanceof THREE.Face4&&(A=f(x.a,x.b),G(A,C),A=f(x.b,x.c),G(A,C),A=f(x.c,x.d),G(A,C),A=f(x.d,x.a),G(A,C));y=J;var H=0,I,E;G={};C={};for(w in y){A=y[w];I=w.split("_");E=I[0];I=I[1];u=E;x=[E,I];void 0===G[u]&&(G[u]=[]);G[u].push(x);u=I;x=[E,I];void 0===G[u]&&(G[u]=[]);G[u].push(x);u=0;for(D=A.length;u<D;u++){x=A[u];var Q=E,M=x,K=w;void 0===C[Q]&&(C[Q]={});C[Q][M]=K;Q=I;M=w;void 0===C[Q]&&(C[Q]={});C[Q][x]=M}2>A.length&&(q[w]=!0)}b("vertexEdgeMap",G,"vertexFaceMap",C);for(w in y)A=y[w],x=A[0],
D=A[1],I=w.split("_"),E=I[0],I=I[1],A=new THREE.Vector3,q[w]?(A.addSelf(p[E]),A.addSelf(p[I]),A.multiplyScalar(0.5)):(A.addSelf(s[x]),A.addSelf(s[D]),A.addSelf(p[E]),A.addSelf(p[I]),A.multiplyScalar(0.25)),r[w]=v+n.length+H,h.push(A),H++,m.supportUVs&&(A=new THREE.UV,A.u=e(E,x).u+e(I,x).u,A.v=e(E,x).v+e(I,x).v,A.u/=2,A.v/=2,g(r[w],x,A),q[w]||(A=new THREE.UV,A.u=e(E,D).u+e(I,D).u,A.v=e(E,D).v+e(I,D).v,A.u/=2,A.v/=2,g(r[w],D,A)));b("-- Step 2 done");var L,N;I=["123","12","2","23"];D=["123","23","3",
"31"];var Q=["123","31","1","12"],M=["1234","12","2","23"],K=["1234","23","3","34"],X=["1234","34","4","41"],$=["1234","41","1","12"];w=0;for(y=s.length;w<y;w++)x=n[w],A=v+w,x instanceof THREE.Face3?(H=f(x.a,x.b),E=f(x.b,x.c),L=f(x.c,x.a),d(A,r[H],x.b,r[E],x,I,w),d(A,r[E],x.c,r[L],x,D,w),d(A,r[L],x.a,r[H],x,Q,w)):x instanceof THREE.Face4?(H=f(x.a,x.b),E=f(x.b,x.c),L=f(x.c,x.d),N=f(x.d,x.a),d(A,r[H],x.b,r[E],x,M,w),d(A,r[E],x.c,r[L],x,K,w),d(A,r[L],x.d,r[N],x,X,w),d(A,r[N],x.a,r[H],x,$,w)):b("face should be a face!",
x);r=new THREE.Vector3;x=new THREE.Vector3;w=0;for(y=p.length;w<y;w++)if(void 0!==G[w]){r.set(0,0,0);x.set(0,0,0);E=new THREE.Vector3(0,0,0);A=0;for(u in C[w])r.addSelf(s[u]),A++;I=0;H=G[w].length;for(u=0;u<H;u++)q[f(G[w][u][0],G[w][u][1])]&&I++;if(2!=I){r.divideScalar(A);for(u=0;u<H;u++)A=G[w][u],A=p[A[0]].clone().addSelf(p[A[1]]).divideScalar(2),x.addSelf(A);x.divideScalar(H);E.addSelf(p[w]);E.multiplyScalar(H-3);E.addSelf(r);E.addSelf(x.multiplyScalar(2));E.divideScalar(H);h[w]=E}}a.vertices=h;
a.faces=j;a.faceVertexUvs[0]=k;delete a.__tmpVertices;a.computeCentroids();a.computeFaceNormals();a.computeVertexNormals()};THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this);this.render=function(){}};THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype);THREE.LensFlare=function(a,b,c,d,f){THREE.Object3D.call(this);this.lensFlares=[];this.positionScreen=new THREE.Vector3;this.customUpdateCallback=void 0;void 0!==a&&this.add(a,b,c,d,f)};
THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype);THREE.LensFlare.prototype.add=function(a,b,c,d,f,e){void 0===b&&(b=-1);void 0===c&&(c=0);void 0===e&&(e=1);void 0===f&&(f=new THREE.Color(16777215));void 0===d&&(d=THREE.NormalBlending);c=Math.min(c,Math.max(0,c));this.lensFlares.push({texture:a,size:b,distance:c,x:0,y:0,z:0,scale:1,rotation:1,opacity:e,color:f,blending:d})};
THREE.LensFlare.prototype.updateLensFlares=function(){var a,b=this.lensFlares.length,c,d=2*-this.positionScreen.x,f=2*-this.positionScreen.y;for(a=0;a<b;a++)c=this.lensFlares[a],c.x=this.positionScreen.x+d*c.distance,c.y=this.positionScreen.y+f*c.distance,c.wantedRotation=0.25*c.x*Math.PI,c.rotation+=0.25*(c.wantedRotation-c.rotation)};
THREE.MorphBlendMesh=function(a,b){THREE.Mesh.call(this,a,b);this.animationsMap={};this.animationsList=[];var c=this.geometry.morphTargets.length;this.createAnimation("__default",0,c-1,c/1);this.setAnimationWeight("__default",1)};THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype);
THREE.MorphBlendMesh.prototype.createAnimation=function(a,b,c,d){b={startFrame:b,endFrame:c,length:c-b+1,fps:d,duration:(c-b)/d,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[a]=b;this.animationsList.push(b)};
THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(a){for(var b=/([a-z]+)(\d+)/,c,d={},f=this.geometry,e=0,g=f.morphTargets.length;e<g;e++){var h=f.morphTargets[e].name.match(b);if(h&&1<h.length){var j=h[1];d[j]||(d[j]={start:Infinity,end:-Infinity});h=d[j];e<h.start&&(h.start=e);e>h.end&&(h.end=e);c||(c=j)}}for(j in d)h=d[j],this.createAnimation(j,h.start,h.end,a);this.firstAnimation=c};
THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(a){if(a=this.animationsMap[a])a.direction=1,a.directionBackwards=!1};THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(a){if(a=this.animationsMap[a])a.direction=-1,a.directionBackwards=!0};THREE.MorphBlendMesh.prototype.setAnimationFPS=function(a,b){var c=this.animationsMap[a];c&&(c.fps=b,c.duration=(c.end-c.start)/c.fps)};
THREE.MorphBlendMesh.prototype.setAnimationDuration=function(a,b){var c=this.animationsMap[a];c&&(c.duration=b,c.fps=(c.end-c.start)/c.duration)};THREE.MorphBlendMesh.prototype.setAnimationWeight=function(a,b){var c=this.animationsMap[a];c&&(c.weight=b)};THREE.MorphBlendMesh.prototype.setAnimationTime=function(a,b){var c=this.animationsMap[a];c&&(c.time=b)};THREE.MorphBlendMesh.prototype.getAnimationTime=function(a){var b=0;if(a=this.animationsMap[a])b=a.time;return b};
THREE.MorphBlendMesh.prototype.getAnimationDuration=function(a){var b=-1;if(a=this.animationsMap[a])b=a.duration;return b};THREE.MorphBlendMesh.prototype.playAnimation=function(a){var b=this.animationsMap[a];b?(b.time=0,b.active=!0):console.warn("animation["+a+"] undefined")};THREE.MorphBlendMesh.prototype.stopAnimation=function(a){if(a=this.animationsMap[a])a.active=!1};
THREE.MorphBlendMesh.prototype.update=function(a){for(var b=0,c=this.animationsList.length;b<c;b++){var d=this.animationsList[b];if(d.active){var f=d.duration/d.length;d.time+=d.direction*a;if(d.mirroredLoop){if(d.time>d.duration||0>d.time)d.direction*=-1,d.time>d.duration&&(d.time=d.duration,d.directionBackwards=!0),0>d.time&&(d.time=0,d.directionBackwards=!1)}else d.time%=d.duration,0>d.time&&(d.time+=d.duration);var e=d.startFrame+THREE.Math.clamp(Math.floor(d.time/f),0,d.length-1),g=d.weight;
e!==d.currentFrame&&(this.morphTargetInfluences[d.lastFrame]=0,this.morphTargetInfluences[d.currentFrame]=1*g,this.morphTargetInfluences[e]=0,d.lastFrame=d.currentFrame,d.currentFrame=e);f=d.time%f/f;d.directionBackwards&&(f=1-f);this.morphTargetInfluences[d.currentFrame]=f*g;this.morphTargetInfluences[d.lastFrame]=(1-f)*g}}};
THREE.LensFlarePlugin=function(){function a(a){var c=b.createProgram(),d=b.createShader(b.FRAGMENT_SHADER),e=b.createShader(b.VERTEX_SHADER);b.shaderSource(d,a.fragmentShader);b.shaderSource(e,a.vertexShader);b.compileShader(d);b.compileShader(e);b.attachShader(c,d);b.attachShader(c,e);b.linkProgram(c);return c}var b,c,d,f,e,g,h,j,k,m,p,n,s;this.init=function(r){b=r.context;c=r;d=new Float32Array(16);f=new Uint16Array(6);r=0;d[r++]=-1;d[r++]=-1;d[r++]=0;d[r++]=0;d[r++]=1;d[r++]=-1;d[r++]=1;d[r++]=
0;d[r++]=1;d[r++]=1;d[r++]=1;d[r++]=1;d[r++]=-1;d[r++]=1;d[r++]=0;d[r++]=1;r=0;f[r++]=0;f[r++]=1;f[r++]=2;f[r++]=0;f[r++]=2;f[r++]=3;e=b.createBuffer();g=b.createBuffer();b.bindBuffer(b.ARRAY_BUFFER,e);b.bufferData(b.ARRAY_BUFFER,d,b.STATIC_DRAW);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,g);b.bufferData(b.ELEMENT_ARRAY_BUFFER,f,b.STATIC_DRAW);h=b.createTexture();j=b.createTexture();b.bindTexture(b.TEXTURE_2D,h);b.texImage2D(b.TEXTURE_2D,0,b.RGB,16,16,0,b.RGB,b.UNSIGNED_BYTE,null);b.texParameteri(b.TEXTURE_2D,
b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST);b.bindTexture(b.TEXTURE_2D,j);b.texImage2D(b.TEXTURE_2D,0,b.RGBA,16,16,0,b.RGBA,b.UNSIGNED_BYTE,null);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST);
b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST);0>=b.getParameter(b.MAX_VERTEX_TEXTURE_IMAGE_UNITS)?(k=!1,m=a(THREE.ShaderFlares.lensFlare)):(k=!0,m=a(THREE.ShaderFlares.lensFlareVertexTexture));p={};n={};p.vertex=b.getAttribLocation(m,"position");p.uv=b.getAttribLocation(m,"uv");n.renderType=b.getUniformLocation(m,"renderType");n.map=b.getUniformLocation(m,"map");n.occlusionMap=b.getUniformLocation(m,"occlusionMap");n.opacity=b.getUniformLocation(m,"opacity");n.color=b.getUniformLocation(m,
"color");n.scale=b.getUniformLocation(m,"scale");n.rotation=b.getUniformLocation(m,"rotation");n.screenPosition=b.getUniformLocation(m,"screenPosition");s=!1};this.render=function(a,d,f,v){a=a.__webglFlares;var w=a.length;if(w){var y=new THREE.Vector3,u=v/f,D=0.5*f,x=0.5*v,C=16/v,G=new THREE.Vector2(C*u,C),A=new THREE.Vector3(1,1,0),J=new THREE.Vector2(1,1),H=n,C=p;b.useProgram(m);s||(b.enableVertexAttribArray(p.vertex),b.enableVertexAttribArray(p.uv),s=!0);b.uniform1i(H.occlusionMap,0);b.uniform1i(H.map,
1);b.bindBuffer(b.ARRAY_BUFFER,e);b.vertexAttribPointer(C.vertex,2,b.FLOAT,!1,16,0);b.vertexAttribPointer(C.uv,2,b.FLOAT,!1,16,8);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,g);b.disable(b.CULL_FACE);b.depthMask(!1);var I,E,Q,M,K;for(I=0;I<w;I++)if(C=16/v,G.set(C*u,C),M=a[I],y.set(M.matrixWorld.elements[12],M.matrixWorld.elements[13],M.matrixWorld.elements[14]),d.matrixWorldInverse.multiplyVector3(y),d.projectionMatrix.multiplyVector3(y),A.copy(y),J.x=A.x*D+D,J.y=A.y*x+x,k||0<J.x&&J.x<f&&0<J.y&&J.y<v){b.activeTexture(b.TEXTURE1);
b.bindTexture(b.TEXTURE_2D,h);b.copyTexImage2D(b.TEXTURE_2D,0,b.RGB,J.x-8,J.y-8,16,16,0);b.uniform1i(H.renderType,0);b.uniform2f(H.scale,G.x,G.y);b.uniform3f(H.screenPosition,A.x,A.y,A.z);b.disable(b.BLEND);b.enable(b.DEPTH_TEST);b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0);b.activeTexture(b.TEXTURE0);b.bindTexture(b.TEXTURE_2D,j);b.copyTexImage2D(b.TEXTURE_2D,0,b.RGBA,J.x-8,J.y-8,16,16,0);b.uniform1i(H.renderType,1);b.disable(b.DEPTH_TEST);b.activeTexture(b.TEXTURE1);b.bindTexture(b.TEXTURE_2D,
h);b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0);M.positionScreen.copy(A);M.customUpdateCallback?M.customUpdateCallback(M):M.updateLensFlares();b.uniform1i(H.renderType,2);b.enable(b.BLEND);E=0;for(Q=M.lensFlares.length;E<Q;E++)K=M.lensFlares[E],0.001<K.opacity&&0.001<K.scale&&(A.x=K.x,A.y=K.y,A.z=K.z,C=K.size*K.scale/v,G.x=C*u,G.y=C,b.uniform3f(H.screenPosition,A.x,A.y,A.z),b.uniform2f(H.scale,G.x,G.y),b.uniform1f(H.rotation,K.rotation),b.uniform1f(H.opacity,K.opacity),b.uniform3f(H.color,K.color.r,
K.color.g,K.color.b),c.setBlending(K.blending,K.blendEquation,K.blendSrc,K.blendDst),c.setTexture(K.texture,1),b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0))}b.enable(b.CULL_FACE);b.enable(b.DEPTH_TEST);b.depthMask(!0)}}};
THREE.ShadowMapPlugin=function(){var a,b,c,d,f,e,g=new THREE.Frustum,h=new THREE.Matrix4,j=new THREE.Vector3,k=new THREE.Vector3;this.init=function(g){a=g.context;b=g;g=THREE.ShaderLib.depthRGBA;var h=THREE.UniformsUtils.clone(g.uniforms);c=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h});d=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h,morphTargets:!0});f=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,
vertexShader:g.vertexShader,uniforms:h,skinning:!0});e=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h,morphTargets:!0,skinning:!0});c._shadowPass=!0;d._shadowPass=!0;f._shadowPass=!0;e._shadowPass=!0};this.render=function(a,c){b.shadowMapEnabled&&b.shadowMapAutoUpdate&&this.update(a,c)};this.update=function(m,p){var n,s,r,q,t,v,w,y,u,D=[];q=0;a.clearColor(1,1,1,1);a.disable(a.BLEND);a.enable(a.CULL_FACE);a.frontFace(a.CCW);b.shadowMapCullFrontFaces?
a.cullFace(a.FRONT):a.cullFace(a.BACK);b.setDepthTest(!0);n=0;for(s=m.__lights.length;n<s;n++)if(r=m.__lights[n],r.castShadow)if(r instanceof THREE.DirectionalLight&&r.shadowCascade)for(t=0;t<r.shadowCascadeCount;t++){var x;if(r.shadowCascadeArray[t])x=r.shadowCascadeArray[t];else{u=r;w=t;x=new THREE.DirectionalLight;x.isVirtual=!0;x.onlyShadow=!0;x.castShadow=!0;x.shadowCameraNear=u.shadowCameraNear;x.shadowCameraFar=u.shadowCameraFar;x.shadowCameraLeft=u.shadowCameraLeft;x.shadowCameraRight=u.shadowCameraRight;
x.shadowCameraBottom=u.shadowCameraBottom;x.shadowCameraTop=u.shadowCameraTop;x.shadowCameraVisible=u.shadowCameraVisible;x.shadowDarkness=u.shadowDarkness;x.shadowBias=u.shadowCascadeBias[w];x.shadowMapWidth=u.shadowCascadeWidth[w];x.shadowMapHeight=u.shadowCascadeHeight[w];x.pointsWorld=[];x.pointsFrustum=[];y=x.pointsWorld;v=x.pointsFrustum;for(var C=0;8>C;C++)y[C]=new THREE.Vector3,v[C]=new THREE.Vector3;y=u.shadowCascadeNearZ[w];u=u.shadowCascadeFarZ[w];v[0].set(-1,-1,y);v[1].set(1,-1,y);v[2].set(-1,
1,y);v[3].set(1,1,y);v[4].set(-1,-1,u);v[5].set(1,-1,u);v[6].set(-1,1,u);v[7].set(1,1,u);x.originalCamera=p;v=new THREE.Gyroscope;v.position=r.shadowCascadeOffset;v.add(x);v.add(x.target);p.add(v);r.shadowCascadeArray[t]=x;console.log("Created virtualLight",x)}w=r;y=t;u=w.shadowCascadeArray[y];u.position.copy(w.position);u.target.position.copy(w.target.position);u.lookAt(u.target);u.shadowCameraVisible=w.shadowCameraVisible;u.shadowDarkness=w.shadowDarkness;u.shadowBias=w.shadowCascadeBias[y];v=w.shadowCascadeNearZ[y];
w=w.shadowCascadeFarZ[y];u=u.pointsFrustum;u[0].z=v;u[1].z=v;u[2].z=v;u[3].z=v;u[4].z=w;u[5].z=w;u[6].z=w;u[7].z=w;D[q]=x;q++}else D[q]=r,q++;n=0;for(s=D.length;n<s;n++){r=D[n];r.shadowMap||(r.shadowMap=new THREE.WebGLRenderTarget(r.shadowMapWidth,r.shadowMapHeight,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat}),r.shadowMapSize=new THREE.Vector2(r.shadowMapWidth,r.shadowMapHeight),r.shadowMatrix=new THREE.Matrix4);if(!r.shadowCamera){if(r instanceof THREE.SpotLight)r.shadowCamera=
new THREE.PerspectiveCamera(r.shadowCameraFov,r.shadowMapWidth/r.shadowMapHeight,r.shadowCameraNear,r.shadowCameraFar);else if(r instanceof THREE.DirectionalLight)r.shadowCamera=new THREE.OrthographicCamera(r.shadowCameraLeft,r.shadowCameraRight,r.shadowCameraTop,r.shadowCameraBottom,r.shadowCameraNear,r.shadowCameraFar);else{console.error("Unsupported light type for shadow");continue}m.add(r.shadowCamera);b.autoUpdateScene&&m.updateMatrixWorld()}r.shadowCameraVisible&&!r.cameraHelper&&(r.cameraHelper=
new THREE.CameraHelper(r.shadowCamera),r.shadowCamera.add(r.cameraHelper));if(r.isVirtual&&x.originalCamera==p){t=p;q=r.shadowCamera;v=r.pointsFrustum;u=r.pointsWorld;j.set(Infinity,Infinity,Infinity);k.set(-Infinity,-Infinity,-Infinity);for(w=0;8>w;w++)y=u[w],y.copy(v[w]),THREE.ShadowMapPlugin.__projector.unprojectVector(y,t),q.matrixWorldInverse.multiplyVector3(y),y.x<j.x&&(j.x=y.x),y.x>k.x&&(k.x=y.x),y.y<j.y&&(j.y=y.y),y.y>k.y&&(k.y=y.y),y.z<j.z&&(j.z=y.z),y.z>k.z&&(k.z=y.z);q.left=j.x;q.right=
k.x;q.top=k.y;q.bottom=j.y;q.updateProjectionMatrix()}q=r.shadowMap;v=r.shadowMatrix;t=r.shadowCamera;t.position.copy(r.matrixWorld.getPosition());t.lookAt(r.target.matrixWorld.getPosition());t.updateMatrixWorld();t.matrixWorldInverse.getInverse(t.matrixWorld);r.cameraHelper&&(r.cameraHelper.visible=r.shadowCameraVisible);r.shadowCameraVisible&&r.cameraHelper.update();v.set(0.5,0,0,0.5,0,0.5,0,0.5,0,0,0.5,0.5,0,0,0,1);v.multiplySelf(t.projectionMatrix);v.multiplySelf(t.matrixWorldInverse);t._viewMatrixArray||
(t._viewMatrixArray=new Float32Array(16));t._projectionMatrixArray||(t._projectionMatrixArray=new Float32Array(16));t.matrixWorldInverse.flattenToArray(t._viewMatrixArray);t.projectionMatrix.flattenToArray(t._projectionMatrixArray);h.multiply(t.projectionMatrix,t.matrixWorldInverse);g.setFromMatrix(h);b.setRenderTarget(q);b.clear();u=m.__webglObjects;r=0;for(q=u.length;r<q;r++)if(w=u[r],v=w.object,w.render=!1,v.visible&&v.castShadow&&(!(v instanceof THREE.Mesh)||!v.frustumCulled||g.contains(v)))v._modelViewMatrix.multiply(t.matrixWorldInverse,
v.matrixWorld),w.render=!0;r=0;for(q=u.length;r<q;r++)w=u[r],w.render&&(v=w.object,w=w.buffer,y=v.customDepthMaterial?v.customDepthMaterial:v instanceof THREE.SkinnedMesh?v.geometry.morphTargets.length?e:f:v.geometry.morphTargets.length?d:c,w instanceof THREE.BufferGeometry?b.renderBufferDirect(t,m.__lights,null,y,w,v):b.renderBuffer(t,m.__lights,null,y,w,v));u=m.__webglObjectsImmediate;r=0;for(q=u.length;r<q;r++)w=u[r],v=w.object,v.visible&&v.castShadow&&(v._modelViewMatrix.multiply(t.matrixWorldInverse,
v.matrixWorld),b.renderImmediateObject(t,m.__lights,null,c,v))}n=b.getClearColor();s=b.getClearAlpha();a.clearColor(n.r,n.g,n.b,s);a.enable(a.BLEND);b.shadowMapCullFrontFaces&&a.cullFace(a.BACK)}};THREE.ShadowMapPlugin.__projector=new THREE.Projector;
THREE.SpritePlugin=function(){function a(a,b){return b.z-a.z}var b,c,d,f,e,g,h,j,k,m;this.init=function(a){b=a.context;c=a;d=new Float32Array(16);f=new Uint16Array(6);a=0;d[a++]=-1;d[a++]=-1;d[a++]=0;d[a++]=0;d[a++]=1;d[a++]=-1;d[a++]=1;d[a++]=0;d[a++]=1;d[a++]=1;d[a++]=1;d[a++]=1;d[a++]=-1;d[a++]=1;d[a++]=0;d[a++]=1;a=0;f[a++]=0;f[a++]=1;f[a++]=2;f[a++]=0;f[a++]=2;f[a++]=3;e=b.createBuffer();g=b.createBuffer();b.bindBuffer(b.ARRAY_BUFFER,e);b.bufferData(b.ARRAY_BUFFER,d,b.STATIC_DRAW);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,
g);b.bufferData(b.ELEMENT_ARRAY_BUFFER,f,b.STATIC_DRAW);a=THREE.ShaderSprite.sprite;var n=b.createProgram(),s=b.createShader(b.FRAGMENT_SHADER),r=b.createShader(b.VERTEX_SHADER);b.shaderSource(s,a.fragmentShader);b.shaderSource(r,a.vertexShader);b.compileShader(s);b.compileShader(r);b.attachShader(n,s);b.attachShader(n,r);b.linkProgram(n);h=n;j={};k={};j.position=b.getAttribLocation(h,"position");j.uv=b.getAttribLocation(h,"uv");k.uvOffset=b.getUniformLocation(h,"uvOffset");k.uvScale=b.getUniformLocation(h,
"uvScale");k.rotation=b.getUniformLocation(h,"rotation");k.scale=b.getUniformLocation(h,"scale");k.alignment=b.getUniformLocation(h,"alignment");k.color=b.getUniformLocation(h,"color");k.map=b.getUniformLocation(h,"map");k.opacity=b.getUniformLocation(h,"opacity");k.useScreenCoordinates=b.getUniformLocation(h,"useScreenCoordinates");k.affectedByDistance=b.getUniformLocation(h,"affectedByDistance");k.screenPosition=b.getUniformLocation(h,"screenPosition");k.modelViewMatrix=b.getUniformLocation(h,"modelViewMatrix");
k.projectionMatrix=b.getUniformLocation(h,"projectionMatrix");m=!1};this.render=function(d,f,s,r){d=d.__webglSprites;var q=d.length;if(q){var t=j,v=k,w=r/s;s*=0.5;var y=0.5*r,u=!0;b.useProgram(h);m||(b.enableVertexAttribArray(t.position),b.enableVertexAttribArray(t.uv),m=!0);b.disable(b.CULL_FACE);b.enable(b.BLEND);b.depthMask(!0);b.bindBuffer(b.ARRAY_BUFFER,e);b.vertexAttribPointer(t.position,2,b.FLOAT,!1,16,0);b.vertexAttribPointer(t.uv,2,b.FLOAT,!1,16,8);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,g);
b.uniformMatrix4fv(v.projectionMatrix,!1,f._projectionMatrixArray);b.activeTexture(b.TEXTURE0);b.uniform1i(v.map,0);for(var D,x=[],t=0;t<q;t++)D=d[t],D.visible&&0!==D.opacity&&(D.useScreenCoordinates?D.z=-D.position.z:(D._modelViewMatrix.multiply(f.matrixWorldInverse,D.matrixWorld),D.z=-D._modelViewMatrix.elements[14]));d.sort(a);for(t=0;t<q;t++)D=d[t],D.visible&&(0!==D.opacity&&D.map&&D.map.image&&D.map.image.width)&&(D.useScreenCoordinates?(b.uniform1i(v.useScreenCoordinates,1),b.uniform3f(v.screenPosition,
(D.position.x-s)/s,(y-D.position.y)/y,Math.max(0,Math.min(1,D.position.z)))):(b.uniform1i(v.useScreenCoordinates,0),b.uniform1i(v.affectedByDistance,D.affectedByDistance?1:0),b.uniformMatrix4fv(v.modelViewMatrix,!1,D._modelViewMatrix.elements)),f=D.map.image.width/(D.scaleByViewport?r:1),x[0]=f*w*D.scale.x,x[1]=f*D.scale.y,b.uniform2f(v.uvScale,D.uvScale.x,D.uvScale.y),b.uniform2f(v.uvOffset,D.uvOffset.x,D.uvOffset.y),b.uniform2f(v.alignment,D.alignment.x,D.alignment.y),b.uniform1f(v.opacity,D.opacity),
b.uniform3f(v.color,D.color.r,D.color.g,D.color.b),b.uniform1f(v.rotation,D.rotation),b.uniform2fv(v.scale,x),D.mergeWith3D&&!u?(b.enable(b.DEPTH_TEST),u=!0):!D.mergeWith3D&&u&&(b.disable(b.DEPTH_TEST),u=!1),c.setBlending(D.blending,D.blendEquation,D.blendSrc,D.blendDst),c.setTexture(D.map,0),b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0));b.enable(b.CULL_FACE);b.enable(b.DEPTH_TEST);b.depthMask(!0)}}};
THREE.DepthPassPlugin=function(){this.enabled=!1;this.renderTarget=null;var a,b,c,d,f=new THREE.Frustum,e=new THREE.Matrix4;this.init=function(e){a=e.context;b=e;e=THREE.ShaderLib.depthRGBA;var f=THREE.UniformsUtils.clone(e.uniforms);c=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:f});d=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:f,morphTargets:!0});c._shadowPass=!0;d._shadowPass=!0};this.render=function(a,
b){this.enabled&&this.update(a,b)};this.update=function(g,h){var j,k,m,p,n,s;a.clearColor(1,1,1,1);a.disable(a.BLEND);b.setDepthTest(!0);b.autoUpdateScene&&g.updateMatrixWorld();h._viewMatrixArray||(h._viewMatrixArray=new Float32Array(16));h._projectionMatrixArray||(h._projectionMatrixArray=new Float32Array(16));h.matrixWorldInverse.getInverse(h.matrixWorld);h.matrixWorldInverse.flattenToArray(h._viewMatrixArray);h.projectionMatrix.flattenToArray(h._projectionMatrixArray);e.multiply(h.projectionMatrix,
h.matrixWorldInverse);f.setFromMatrix(e);b.setRenderTarget(this.renderTarget);b.clear();s=g.__webglObjects;j=0;for(k=s.length;j<k;j++)if(m=s[j],n=m.object,m.render=!1,n.visible&&(!(n instanceof THREE.Mesh)||!n.frustumCulled||f.contains(n)))n._modelViewMatrix.multiply(h.matrixWorldInverse,n.matrixWorld),m.render=!0;j=0;for(k=s.length;j<k;j++)m=s[j],m.render&&(n=m.object,m=m.buffer,n.material&&b.setMaterialFaces(n.material),p=n.customDepthMaterial?n.customDepthMaterial:n.geometry.morphTargets.length?
d:c,m instanceof THREE.BufferGeometry?b.renderBufferDirect(h,g.__lights,null,p,m,n):b.renderBuffer(h,g.__lights,null,p,m,n));s=g.__webglObjectsImmediate;j=0;for(k=s.length;j<k;j++)m=s[j],n=m.object,n.visible&&n.castShadow&&(n._modelViewMatrix.multiply(h.matrixWorldInverse,n.matrixWorld),b.renderImmediateObject(h,g.__lights,null,c,n));j=b.getClearColor();k=b.getClearAlpha();a.clearColor(j.r,j.g,j.b,k);a.enable(a.BLEND)}};
THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:"uniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform int renderType;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility = (       visibility.r / 9.0 ) *\n( 1.0 - visibility.g / 9.0 ) *\n(       visibility.b / 9.0 ) *\n( 1.0 - visibility.a / 9.0 );\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"precision mediump float;\nuniform sampler2D map;\nuniform float opacity;\nuniform int renderType;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"},
lensFlare:{vertexShader:"uniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform int renderType;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"precision mediump float;\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform int renderType;\nuniform vec3 color;\nvarying vec2 vUV;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * visibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"}};
THREE.ShaderSprite={sprite:{vertexShader:"uniform int useScreenCoordinates;\nuniform int affectedByDistance;\nuniform vec3 screenPosition;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 alignment;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position + alignment;\nvec2 rotatedPosition;\nrotatedPosition.x = ( cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y ) * scale.x;\nrotatedPosition.y = ( sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y ) * scale.y;\nvec4 finalPosition;\nif( useScreenCoordinates != 0 ) {\nfinalPosition = vec4( screenPosition.xy + rotatedPosition, screenPosition.z, 1.0 );\n} else {\nfinalPosition = projectionMatrix * modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition * ( affectedByDistance == 1 ? 1.0 : finalPosition.z );\n}\ngl_Position = finalPosition;\n}",
fragmentShader:"precision mediump float;\nuniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\n}"}};